####################
# Registry
####################

type Registry @entity {
    id: ID!
    contracts: [RegisteredContract!]
}

type RegisteredContract @entity {
    id: ID!
    address: Bytes!
    addressesHistory: [Bytes!]!
}

####################
# Enums
####################

enum AssetType {
    UNDERLYING
    IBT
    PT
    YT
    FYT
    LP
    UNKNOWN
}

enum TransactionType {
    DEPOSIT
    WITHDRAW
    CLAIM
    SWAP
}

enum FutureStatus {
    ACTIVE
    PAUSED
    EXPIRED
}

enum AMM {
    CURVE
    UNISWAP_V3
    UNKNOWN
}

enum PriceSource {
    CHAINLINK
    REDSTONE
}

####################
# Low level event entities
####################

type Platform @entity {
# IBT platform (as entity because of permissionless pool creation process - possibility to add new platforms without subgraph update)
    id: ID!
    createdAtTimestamp: BigInt!
    name: String!
    infoUrl: String!
}

type LPTokenDetails @entity {
# if an Asset is LPToken we need more details for this entity
    id: ID!
    address: String!
    createdAtTimestamp: BigInt!
    supply: BigDecimal!
    numberOfTokens: Int!
    tokens: [Asset!]!
}

type FYTTokenDetails @entity {
# if an AssetAmount describes amount of FYTToken we need more details for this entity
    id: ID!
    createdAtTimestamp: BigInt!
    expirationAtTimestamp: BigInt!
    generatedYield: BigDecimal!
    generatedYieldValue: BigDecimal
}



####################
# Assets and prices
####################

type AssetPrice @entity {
# Asset dollar price which belongs to already created Asset entity
    id: ID!
    createdAtTimestamp: BigInt!
    value: BigDecimal!
    source: PriceSource
    asset: Asset!
}

type AssetAmount @entity {
# defines amount and value of all the instances of Asset as well as entity these values belongs to
    id: ID!
    createdAtTimestamp: BigInt!
    amount: BigInt!
    value: BigDecimal!
    asset: Asset!
#    user: User
    fytTokenDetails: FYTTokenDetails
}

type Asset @entity {
    id: ID!
    address: String!
    createdAtTimestamp: BigInt!
    name: String!
    symbol: String!
    decimals: Int!
    price: AssetPrice
    type: String

    chainlinkPriceFeed: ChainlinkAggregatorProxy
}

type ChainlinkAggregatorProxy @entity {
    id: ID!
    aggregator: String!
    asset: Asset!
}