{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "RegistryError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "principalToken",
          "type": "address"
        }
      ],
      "name": "PrincipalTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_old",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "PrincipalTokenFactoryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "principalToken",
          "type": "address"
        }
      ],
      "name": "PrincipalTokenRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "zapDepositor",
          "type": "address"
        }
      ],
      "name": "ZapDepositorUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_principalToken",
          "type": "address"
        }
      ],
      "name": "addPrincipalToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getPrincipalTokenAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrincipalTokenFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getZapDepositor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_principalToken",
          "type": "address"
        }
      ],
      "name": "isRegisteredPrincipalToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "principalTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_principalToken",
          "type": "address"
        }
      ],
      "name": "removePrincipalToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newPrincipalTokenFactory",
          "type": "address"
        }
      ],
      "name": "setPrincipalTokenFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zap",
          "type": "address"
        }
      ],
      "name": "setZapDepositor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b610b1a806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806379ba509711610097578063c96019a811610066578063c96019a8146101cf578063e0ecf8ad146101e2578063e30c3978146101f8578063f2fde38b1461020957600080fd5b806379ba50971461019b5780638129fc1c146101a35780638da5cb5b146101ab578063a0bc97db146101bc57600080fd5b80636fb3c766116100d35780636fb3c7661461014a578063715018a61461015d578063750ca58614610165578063766a1b6c1461018857600080fd5b80630e5f99c5146100fa578063241fee1514610124578063509414ad14610139575b600080fd5b609a546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b610137610132366004610a06565b61021c565b005b6097546001600160a01b0316610107565b610107610158366004610a2f565b6102b8565b6101376102cb565b610178610173366004610a06565b6102df565b604051901515815260200161011b565b610137610196366004610a06565b6102ec565b6101376103c1565b61013761043b565b6033546001600160a01b0316610107565b6101376101ca366004610a06565b61054b565b6101376101dd366004610a06565b6105f4565b6101ea61068b565b60405190815260200161011b565b6065546001600160a01b0316610107565b610137610217366004610a06565b61069c565b61022461070d565b61022f609882610767565b6102815760405163582dfed360e11b815260206004820152601c60248201527f4572726f7220616464696e67207072696e636970616c20746f6b656e0000000060448201526064015b60405180910390fd5b6040516001600160a01b038216907fbf7bcee7480b1c77c06547ef8fd0cfacfb518606c897ba637ca0c9061533042f90600090a250565b60006102c5609883610783565b92915050565b6102d361070d565b6102dd600061078f565b565b60006102c56098836107a8565b6102f461070d565b6001600160a01b0381166103655760405163582dfed360e11b815260206004820152603160248201527f43616e6e6f7420736574207072696e636970616c546f6b656e20666163746f726044820152707920746f207a65726f206164647265737360781b6064820152608401610278565b6097546040516001600160a01b038084169216907f2f4a7b447d797ed79d75520e3025655337b66af99ac7b09c7c4c3bb8bf6365f790600090a3609780546001600160a01b0319166001600160a01b0392909216919091179055565b60655433906001600160a01b0316811461042f5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610278565b6104388161078f565b50565b600054610100900460ff161580801561045b5750600054600160ff909116105b806104755750303b158015610475575060005460ff166001145b6104d85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610278565b6000805460ff1916600117905580156104fb576000805461ff0019166101001790555b6105036107ca565b8015610438576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b61055361070d565b6001600160a01b0381166105aa5760405163582dfed360e11b815260206004820152601e60248201527f43616e6e6f7420736574207a617020746f207a65726f206164647265737300006044820152606401610278565b609a80546001600160a01b0319166001600160a01b0383169081179091556040517f1c255e703fa5d19943f36dab3917d0758da9a31211bf55b91b4230cc9a9aa56e90600090a250565b6105fc61070d565b6106076098826107f9565b6106545760405163582dfed360e11b815260206004820152601e60248201527f4572726f722072656d6f76696e67207072696e636970616c20746f6b656e00006044820152606401610278565b6040516001600160a01b038216907fc690541461a4cee9666e3815924fe8130226dea7b434be0fb929f43dcaaa9a6d90600090a250565b6000610697609861080e565b905090565b6106a461070d565b606580546001600160a01b0383166001600160a01b031990911681179091556106d56033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6033546001600160a01b031633146102dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610278565b600061077c836001600160a01b038416610818565b9392505050565b600061077c8383610867565b606580546001600160a01b031916905561043881610891565b6001600160a01b0381166000908152600183016020526040812054151561077c565b600054610100900460ff166107f15760405162461bcd60e51b815260040161027890610a48565b6102dd6108e3565b600061077c836001600160a01b038416610913565b60006102c5825490565b600081815260018301602052604081205461085f575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102c5565b5060006102c5565b600082600001828154811061087e5761087e610a93565b9060005260206000200154905092915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661090a5760405162461bcd60e51b815260040161027890610a48565b6102dd3361078f565b600081815260018301602052604081205480156109fc576000610937600183610aa9565b855490915060009061094b90600190610aa9565b90508181146109b057600086600001828154811061096b5761096b610a93565b906000526020600020015490508087600001848154811061098e5761098e610a93565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806109c1576109c1610ace565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102c5565b60009150506102c5565b600060208284031215610a1857600080fd5b81356001600160a01b038116811461077c57600080fd5b600060208284031215610a4157600080fd5b5035919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082821015610ac957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212209d441970a745482173c3f922cdeef590db593b023a337dd5a375da9835c8bb5164736f6c634300080d0033",
    "sourceMap": "372:4439:64:-:0;;;1070:132;;;;;;;;;-1:-1:-1;1094:22:64;:20;:22::i;:::-;372:4439;;5928:280:19;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:19;;216:2:99;5987:66:19;;;198:21:99;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:99;;;338:37;392:19;;5987:66:19;;;;;;;;6067:12;;6083:15;6067:12;;;:31;6063:139;;6114:12;:30;;-1:-1:-1;;6114:30:19;6129:15;6114:30;;;;;;6163:28;;564:36:99;;;6163:28:19;;552:2:99;537:18;6163:28:19;;;;;;;6063:139;5928:280::o;422:184:99:-;372:4439:64;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806379ba509711610097578063c96019a811610066578063c96019a8146101cf578063e0ecf8ad146101e2578063e30c3978146101f8578063f2fde38b1461020957600080fd5b806379ba50971461019b5780638129fc1c146101a35780638da5cb5b146101ab578063a0bc97db146101bc57600080fd5b80636fb3c766116100d35780636fb3c7661461014a578063715018a61461015d578063750ca58614610165578063766a1b6c1461018857600080fd5b80630e5f99c5146100fa578063241fee1514610124578063509414ad14610139575b600080fd5b609a546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b610137610132366004610a06565b61021c565b005b6097546001600160a01b0316610107565b610107610158366004610a2f565b6102b8565b6101376102cb565b610178610173366004610a06565b6102df565b604051901515815260200161011b565b610137610196366004610a06565b6102ec565b6101376103c1565b61013761043b565b6033546001600160a01b0316610107565b6101376101ca366004610a06565b61054b565b6101376101dd366004610a06565b6105f4565b6101ea61068b565b60405190815260200161011b565b6065546001600160a01b0316610107565b610137610217366004610a06565b61069c565b61022461070d565b61022f609882610767565b6102815760405163582dfed360e11b815260206004820152601c60248201527f4572726f7220616464696e67207072696e636970616c20746f6b656e0000000060448201526064015b60405180910390fd5b6040516001600160a01b038216907fbf7bcee7480b1c77c06547ef8fd0cfacfb518606c897ba637ca0c9061533042f90600090a250565b60006102c5609883610783565b92915050565b6102d361070d565b6102dd600061078f565b565b60006102c56098836107a8565b6102f461070d565b6001600160a01b0381166103655760405163582dfed360e11b815260206004820152603160248201527f43616e6e6f7420736574207072696e636970616c546f6b656e20666163746f726044820152707920746f207a65726f206164647265737360781b6064820152608401610278565b6097546040516001600160a01b038084169216907f2f4a7b447d797ed79d75520e3025655337b66af99ac7b09c7c4c3bb8bf6365f790600090a3609780546001600160a01b0319166001600160a01b0392909216919091179055565b60655433906001600160a01b0316811461042f5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610278565b6104388161078f565b50565b600054610100900460ff161580801561045b5750600054600160ff909116105b806104755750303b158015610475575060005460ff166001145b6104d85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610278565b6000805460ff1916600117905580156104fb576000805461ff0019166101001790555b6105036107ca565b8015610438576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b61055361070d565b6001600160a01b0381166105aa5760405163582dfed360e11b815260206004820152601e60248201527f43616e6e6f7420736574207a617020746f207a65726f206164647265737300006044820152606401610278565b609a80546001600160a01b0319166001600160a01b0383169081179091556040517f1c255e703fa5d19943f36dab3917d0758da9a31211bf55b91b4230cc9a9aa56e90600090a250565b6105fc61070d565b6106076098826107f9565b6106545760405163582dfed360e11b815260206004820152601e60248201527f4572726f722072656d6f76696e67207072696e636970616c20746f6b656e00006044820152606401610278565b6040516001600160a01b038216907fc690541461a4cee9666e3815924fe8130226dea7b434be0fb929f43dcaaa9a6d90600090a250565b6000610697609861080e565b905090565b6106a461070d565b606580546001600160a01b0383166001600160a01b031990911681179091556106d56033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6033546001600160a01b031633146102dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610278565b600061077c836001600160a01b038416610818565b9392505050565b600061077c8383610867565b606580546001600160a01b031916905561043881610891565b6001600160a01b0381166000908152600183016020526040812054151561077c565b600054610100900460ff166107f15760405162461bcd60e51b815260040161027890610a48565b6102dd6108e3565b600061077c836001600160a01b038416610913565b60006102c5825490565b600081815260018301602052604081205461085f575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102c5565b5060006102c5565b600082600001828154811061087e5761087e610a93565b9060005260206000200154905092915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661090a5760405162461bcd60e51b815260040161027890610a48565b6102dd3361078f565b600081815260018301602052604081205480156109fc576000610937600183610aa9565b855490915060009061094b90600190610aa9565b90508181146109b057600086600001828154811061096b5761096b610a93565b906000526020600020015490508087600001848154811061098e5761098e610a93565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806109c1576109c1610ace565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102c5565b60009150506102c5565b600060208284031215610a1857600080fd5b81356001600160a01b038116811461077c57600080fd5b600060208284031215610a4157600080fd5b5035919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082821015610ac957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212209d441970a745482173c3f922cdeef590db593b023a337dd5a375da9835c8bb5164736f6c634300080d0033",
    "sourceMap": "372:4439:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1804:95;1880:12;;-1:-1:-1;;;;;1880:12:64;1804:95;;;-1:-1:-1;;;;;178:32:99;;;160:51;;148:2;133:18;1804:95:64;;;;;;;;2736:282;;;;;;:::i;:::-;;:::i;:::-;;4644:165;4781:21;;-1:-1:-1;;;;;4781:21:64;4644:165;;4099:150;;;;;;:::i;:::-;;:::i;2071:101:16:-;;;:::i;3707:176:64:-;;;;;;:::i;:::-;;:::i;:::-;;;863:14:99;;856:22;838:41;;826:2;811:18;3707:176:64;698:187:99;2074:501:64;;;;;;:::i;:::-;;:::i;2005:206:15:-;;;:::i;1268:81:64:-;;;:::i;1441:85:16:-;1513:6;;-1:-1:-1;;;;;1513:6:16;1441:85;;1464:270:64;;;;;;:::i;:::-;;:::i;3189:292::-;;;;;;:::i;:::-;;:::i;4390:120::-;;;:::i;:::-;;;1036:25:99;;;1024:2;1009:18;4390:120:64;890:177:99;1118:99:15;1197:13;;-1:-1:-1;;;;;1197:13:15;1118:99;;1410:178;;;;;;:::i;:::-;;:::i;2736:282:64:-;2816:13;:11;:13::i;:::-;2845:36;:15;2865;2845:19;:36::i;:::-;2839:122;;2905:45;;-1:-1:-1;;;2905:45:64;;1274:2:99;2905:45:64;;;1256:21:99;1313:2;1293:18;;;1286:30;1352;1332:18;;;1325:58;1400:18;;2905:45:64;;;;;;;;2839:122;2975:36;;-1:-1:-1;;;;;2975:36:64;;;;;;;;2736:282;:::o;4099:150::-;4190:7;4216:26;:15;4235:6;4216:18;:26::i;:::-;4209:33;4099:150;-1:-1:-1;;4099:150:64:o;2071:101:16:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;3707:176:64:-;3812:4;3835:41;:15;3860;3835:24;:41::i;2074:501::-;2185:13;:11;:13::i;:::-;-1:-1:-1;;;;;2213:39:64;;2208:175;;2276:96;;-1:-1:-1;;;2276:96:64;;1631:2:99;2276:96:64;;;1613:21:99;1670:2;1650:18;;;1643:30;1709:34;1689:18;;;1682:62;-1:-1:-1;;;1760:18:99;;;1753:47;1817:19;;2276:96:64;1429:413:99;2208:175:64;2439:21;;2397:112;;-1:-1:-1;;;;;2397:112:64;;;;2439:21;;2397:112;;2439:21;;2397:112;2519:21;:49;;-1:-1:-1;;;;;;2519:49:64;-1:-1:-1;;;;;2519:49:64;;;;;;;;;;2074:501::o;2005:206:15:-;1197:13;;929:10:29;;-1:-1:-1;;;;;1197:13:15;2098:24;;2090:78;;;;-1:-1:-1;;;2090:78:15;;2049:2:99;2090:78:15;;;2031:21:99;2088:2;2068:18;;;2061:30;2127:34;2107:18;;;2100:62;-1:-1:-1;;;2178:18:99;;;2171:39;2227:19;;2090:78:15;1847:405:99;2090:78:15;2178:26;2197:6;2178:18;:26::i;:::-;2041:170;2005:206::o;1268:81:64:-;3268:19:19;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:19;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:19;1476:19:28;:23;;;3376:66:19;;-1:-1:-1;3425:12:19;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:19;;2459:2:99;3314:201:19;;;2441:21:99;2498:2;2478:18;;;2471:30;2537:34;2517:18;;;2510:62;-1:-1:-1;;;2588:18:99;;;2581:44;2642:19;;3314:201:19;2257:410:99;3314:201:19;3525:12;:16;;-1:-1:-1;;3525:16:19;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:19;;;;;3551:65;1321:21:64::1;:19;:21::i;:::-;3640:14:19::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:19;;;3710:14;;-1:-1:-1;2824:36:99;;3710:14:19;;2812:2:99;2797:18;3710:14:19;;;;;;;3258:483;1268:81:64:o;1464:270::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;1559:18:64;;1554:105;;1601:47;;-1:-1:-1;;;1601:47:64;;3073:2:99;1601:47:64;;;3055:21:99;3112:2;3092:18;;;3085:30;3151:32;3131:18;;;3124:60;3201:18;;1601:47:64;2871:354:99;1554:105:64;1668:12;:19;;-1:-1:-1;;;;;;1668:19:64;-1:-1:-1;;;;;1668:19:64;;;;;;;;1702:25;;;;-1:-1:-1;;1702:25:64;1464:270;:::o;3189:292::-;3272:13;:11;:13::i;:::-;3301:39;:15;3324;3301:22;:39::i;:::-;3295:127;;3364:47;;-1:-1:-1;;;3364:47:64;;3432:2:99;3364:47:64;;;3414:21:99;3471:2;3451:18;;;3444:30;3510:32;3490:18;;;3483:60;3560:18;;3364:47:64;3230:354:99;3295:127:64;3436:38;;-1:-1:-1;;;;;3436:38:64;;;;;;;;3189:292;:::o;4390:120::-;4453:7;4479:24;:15;:22;:24::i;:::-;4472:31;;4390:120;:::o;1410:178:15:-;1334:13:16;:11;:13::i;:::-;1499::15::1;:24:::0;;-1:-1:-1;;;;;1499:24:15;::::1;-1:-1:-1::0;;;;;;1499:24:15;;::::1;::::0;::::1;::::0;;;1563:7:::1;1513:6:16::0;;-1:-1:-1;;;;;1513:6:16;;1441:85;1563:7:15::1;-1:-1:-1::0;;;;;1538:43:15::1;;;;;;;;;;;1410:178:::0;:::o;1599:130:16:-;1513:6;;-1:-1:-1;;;;;1513:6:16;929:10:29;1662:23:16;1654:68;;;;-1:-1:-1;;;1654:68:16;;3791:2:99;1654:68:16;;;3773:21:99;;;3810:18;;;3803:30;3869:34;3849:18;;;3842:62;3921:18;;1654:68:16;3589:356:99;8308:150:36;8378:4;8401:50;8406:3;-1:-1:-1;;;;;8426:23:36;;8401:4;:50::i;:::-;8394:57;8308:150;-1:-1:-1;;;8308:150:36:o;9566:156::-;9640:7;9690:22;9694:3;9706:5;9690:3;:22::i;1772:153:15:-;1861:13;1854:20;;-1:-1:-1;;;;;;1854:20:15;;;1884:34;1909:8;1884:24;:34::i;8863:165:36:-;-1:-1:-1;;;;;8996:23:36;;8943:4;4354:19;;;:12;;;:19;;;;;;:24;;8966:55;4258:127;733:100:15;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;800:26:15::1;:24;:26::i;8626:156:36:-:0;8699:4;8722:53;8730:3;-1:-1:-1;;;;;8750:23:36;;8722:7;:53::i;9109:115::-;9172:7;9198:19;9206:3;4548:18;;4466:107;2217:404;2280:4;4354:19;;;:12;;;:19;;;;;;2296:319;;-1:-1:-1;2338:23:36;;;;;;;;:11;:23;;;;;;;;;;;;;2518:18;;2496:19;;;:12;;;:19;;;;;;:40;;;;2550:11;;2296:319;-1:-1:-1;2599:5:36;2592:12;;4915:118;4982:7;5008:3;:11;;5020:5;5008:18;;;;;;;;:::i;:::-;;;;;;;;;5001:25;;4915:118;;;;:::o;2673:187:16:-;2765:6;;;-1:-1:-1;;;;;2781:17:16;;;-1:-1:-1;;;;;;2781:17:16;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1104:111::-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;1176:32:16::1;929:10:29::0;1176:18:16::1;:32::i;2789:1388:36:-:0;2855:4;2992:19;;;:12;;;:19;;;;;;3026:15;;3022:1149;;3395:21;3419:14;3432:1;3419:10;:14;:::i;:::-;3467:18;;3395:38;;-1:-1:-1;3447:17:36;;3467:22;;3488:1;;3467:22;:::i;:::-;3447:42;;3521:13;3508:9;:26;3504:398;;3554:17;3574:3;:11;;3586:9;3574:22;;;;;;;;:::i;:::-;;;;;;;;;3554:42;;3725:9;3696:3;:11;;3708:13;3696:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3808:23;;;:12;;;:23;;;;;:36;;;3504:398;3980:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4072:3;:12;;:19;4085:5;4072:19;;;;;;;;;;;4065:26;;;4113:4;4106:11;;;;;;;3022:1149;4155:5;4148:12;;;;;222:286:99;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:99;;418:42;;408:70;;474:1;471;464:12;513:180;572:6;625:2;613:9;604:7;600:23;596:32;593:52;;;641:1;638;631:12;593:52;-1:-1:-1;664:23:99;;513:180;-1:-1:-1;513:180:99:o;3950:407::-;4152:2;4134:21;;;4191:2;4171:18;;;4164:30;4230:34;4225:2;4210:18;;4203:62;-1:-1:-1;;;4296:2:99;4281:18;;4274:41;4347:3;4332:19;;3950:407::o;4362:127::-;4423:10;4418:3;4414:20;4411:1;4404:31;4454:4;4451:1;4444:15;4478:4;4475:1;4468:15;4494:222;4534:4;4562:1;4559;4556:8;4553:131;;;4606:10;4601:3;4597:20;4594:1;4587:31;4641:4;4638:1;4631:15;4669:4;4666:1;4659:15;4553:131;-1:-1:-1;4701:9:99;;4494:222::o;4721:127::-;4782:10;4777:3;4773:20;4770:1;4763:31;4813:4;4810:1;4803:15;4837:4;4834:1;4827:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addPrincipalToken(address)": "241fee15",
    "getPrincipalTokenAt(uint256)": "6fb3c766",
    "getPrincipalTokenFactoryAddress()": "509414ad",
    "getZapDepositor()": "0e5f99c5",
    "initialize()": "8129fc1c",
    "isRegisteredPrincipalToken(address)": "750ca586",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "principalTokenCount()": "e0ecf8ad",
    "removePrincipalToken(address)": "c96019a8",
    "renounceOwnership()": "715018a6",
    "setPrincipalTokenFactory(address)": "766a1b6c",
    "setZapDepositor(address)": "a0bc97db",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"RegistryError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"principalToken\",\"type\":\"address\"}],\"name\":\"PrincipalTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"PrincipalTokenFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"principalToken\",\"type\":\"address\"}],\"name\":\"PrincipalTokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"zapDepositor\",\"type\":\"address\"}],\"name\":\"ZapDepositorUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_principalToken\",\"type\":\"address\"}],\"name\":\"addPrincipalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPrincipalTokenAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrincipalTokenFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZapDepositor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_principalToken\",\"type\":\"address\"}],\"name\":\"isRegisteredPrincipalToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"principalTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_principalToken\",\"type\":\"address\"}],\"name\":\"removePrincipalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPrincipalTokenFactory\",\"type\":\"address\"}],\"name\":\"setPrincipalTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zap\",\"type\":\"address\"}],\"name\":\"setZapDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addPrincipalToken(address)\":{\"params\":{\"_principalToken\":\"the address of the principalToken to add to the registry\"}},\"getPrincipalTokenAt(uint256)\":{\"params\":{\"_index\":\"the index of the principalToken to return\"},\"returns\":{\"_0\":\"the address of the corresponding principalToken\"}},\"getPrincipalTokenFactoryAddress()\":{\"returns\":{\"_0\":\"the address of the tokens factory\"}},\"isRegisteredPrincipalToken(address)\":{\"params\":{\"_principalToken\":\"the address of the principalToken to check the registration of\"},\"returns\":{\"_0\":\"true if it is, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"principalTokenCount()\":{\"returns\":{\"_0\":\"the number of principalTokens registered\"}},\"removePrincipalToken(address)\":{\"params\":{\"_principalToken\":\"the address of the principalToken to remove from the registry\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPrincipalTokenFactory(address)\":{\"params\":{\"_newPrincipalTokenFactory\":\"the address of the token factory\"}},\"setZapDepositor(address)\":{\"params\":{\"_zap\":\"address of zap depositor\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"title\":\"Registry Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPrincipalToken(address)\":{\"notice\":\"Add a principalToken to the registry\"},\"constructor\":{\"notice\":\"Constructor of the contract\"},\"getPrincipalTokenAt(uint256)\":{\"notice\":\"Getter for the principalToken registered at an index\"},\"getPrincipalTokenFactoryAddress()\":{\"notice\":\"Getter for the principalToken's factory address\"},\"getZapDepositor()\":{\"notice\":\"get the address of zap depositor\"},\"initialize()\":{\"notice\":\"Initializer of the contract.\"},\"isRegisteredPrincipalToken(address)\":{\"notice\":\"Getter to check if a principalToken is registered\"},\"principalTokenCount()\":{\"notice\":\"Getter for number of principalTokens registered\"},\"removePrincipalToken(address)\":{\"notice\":\"Remove a principalToken from the registry\"},\"setPrincipalTokenFactory(address)\":{\"notice\":\"Setter for the principalToken factory address\"},\"setZapDepositor(address)\":{\"notice\":\"set zap depositor\"}},\"notice\":\"Keeps a record of all valid contract addresses currently used in the protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Registry.sol\":\"Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/\",\":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/\",\":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/\",\":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/\",\":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/\",\":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x7dce633611f5149fa8dec27ccd28b88dc590fecbebdb7785d1f6728dae1e1c4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9974683c1eec209863fdec01d0c45d262302d62d7b972bc2ddcb25c33bc53fb\",\"dweb:/ipfs/QmSrcmeTka7VTz5HbjktmZdsMycARfadbCpjWTHiqwiqZC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x28f1a545faf59421a03601dbc35a292cbf2321c3abd121feb64dda5710a9a055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd3c6b31eabee3270cf57116a7c4674688b6b433169e85ce48de22c9bd7f218b\",\"dweb:/ipfs/QmRcULPrt9BQphN9m2cSMt9shKA9nfa7vywmKMmm9x5i1k\"]},\"src/Registry.sol\":{\"keccak256\":\"0xc8cf28dcbf557ddde1049125ee38777afaf07b6ccd35781edc5787ab46085518\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1a1a1253c44bab1419910cb69cb6b15e82936a94efd05e75d31e0dba59b835a8\",\"dweb:/ipfs/QmWX17F8rKYmL7HBLYZPd7B9PNJeQehvy46upaAdPFzSWu\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0xa4955733a55d24bce3d7644f033d3fb561cf89f3a36beadd0cd916ad6b84a38d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dfa596339b4787934d8e62988b5bc43908cb624fbd07945c6f5e80b7076b467d\",\"dweb:/ipfs/QmRVwJ7QLmAj9b53jgacLMrM1VcndwADRv7rUPCHdhrbpb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "RegistryError"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "principalToken",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrincipalTokenAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_old",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_new",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrincipalTokenFactoryUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "principalToken",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrincipalTokenRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "zapDepositor",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ZapDepositorUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_principalToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPrincipalToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrincipalTokenAt",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrincipalTokenFactoryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getZapDepositor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_principalToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegisteredPrincipalToken",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "principalTokenCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_principalToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePrincipalToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newPrincipalTokenFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrincipalTokenFactory"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_zap",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setZapDepositor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "addPrincipalToken(address)": {
            "params": {
              "_principalToken": "the address of the principalToken to add to the registry"
            }
          },
          "getPrincipalTokenAt(uint256)": {
            "params": {
              "_index": "the index of the principalToken to return"
            },
            "returns": {
              "_0": "the address of the corresponding principalToken"
            }
          },
          "getPrincipalTokenFactoryAddress()": {
            "returns": {
              "_0": "the address of the tokens factory"
            }
          },
          "isRegisteredPrincipalToken(address)": {
            "params": {
              "_principalToken": "the address of the principalToken to check the registration of"
            },
            "returns": {
              "_0": "true if it is, false otherwise"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "principalTokenCount()": {
            "returns": {
              "_0": "the number of principalTokens registered"
            }
          },
          "removePrincipalToken(address)": {
            "params": {
              "_principalToken": "the address of the principalToken to remove from the registry"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setPrincipalTokenFactory(address)": {
            "params": {
              "_newPrincipalTokenFactory": "the address of the token factory"
            }
          },
          "setZapDepositor(address)": {
            "params": {
              "_zap": "address of zap depositor"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addPrincipalToken(address)": {
            "notice": "Add a principalToken to the registry"
          },
          "constructor": {
            "notice": "Constructor of the contract"
          },
          "getPrincipalTokenAt(uint256)": {
            "notice": "Getter for the principalToken registered at an index"
          },
          "getPrincipalTokenFactoryAddress()": {
            "notice": "Getter for the principalToken's factory address"
          },
          "getZapDepositor()": {
            "notice": "get the address of zap depositor"
          },
          "initialize()": {
            "notice": "Initializer of the contract."
          },
          "isRegisteredPrincipalToken(address)": {
            "notice": "Getter to check if a principalToken is registered"
          },
          "principalTokenCount()": {
            "notice": "Getter for number of principalTokens registered"
          },
          "removePrincipalToken(address)": {
            "notice": "Remove a principalToken from the registry"
          },
          "setPrincipalTokenFactory(address)": {
            "notice": "Setter for the principalToken factory address"
          },
          "setZapDepositor(address)": {
            "notice": "set zap depositor"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/",
        ":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/",
        ":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/",
        ":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/",
        ":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/",
        ":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Registry.sol": "Registry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x7dce633611f5149fa8dec27ccd28b88dc590fecbebdb7785d1f6728dae1e1c4f",
        "urls": [
          "bzz-raw://e9974683c1eec209863fdec01d0c45d262302d62d7b972bc2ddcb25c33bc53fb",
          "dweb:/ipfs/QmSrcmeTka7VTz5HbjktmZdsMycARfadbCpjWTHiqwiqZC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
        "urls": [
          "bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
          "dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
        "urls": [
          "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
          "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x28f1a545faf59421a03601dbc35a292cbf2321c3abd121feb64dda5710a9a055",
        "urls": [
          "bzz-raw://bd3c6b31eabee3270cf57116a7c4674688b6b433169e85ce48de22c9bd7f218b",
          "dweb:/ipfs/QmRcULPrt9BQphN9m2cSMt9shKA9nfa7vywmKMmm9x5i1k"
        ],
        "license": "MIT"
      },
      "src/Registry.sol": {
        "keccak256": "0xc8cf28dcbf557ddde1049125ee38777afaf07b6ccd35781edc5787ab46085518",
        "urls": [
          "bzz-raw://1a1a1253c44bab1419910cb69cb6b15e82936a94efd05e75d31e0dba59b835a8",
          "dweb:/ipfs/QmWX17F8rKYmL7HBLYZPd7B9PNJeQehvy46upaAdPFzSWu"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0xa4955733a55d24bce3d7644f033d3fb561cf89f3a36beadd0cd916ad6b84a38d",
        "urls": [
          "bzz-raw://dfa596339b4787934d8e62988b5bc43908cb624fbd07945c6f5e80b7076b467d",
          "dweb:/ipfs/QmRVwJ7QLmAj9b53jgacLMrM1VcndwADRv7rUPCHdhrbpb"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Registry.sol",
    "id": 36257,
    "exportedSymbols": {
      "AddressUpgradeable": [
        27808
      ],
      "ContextUpgradeable": [
        27850
      ],
      "EnumerableSetUpgradeable": [
        30400
      ],
      "IRegistry": [
        39072
      ],
      "Initializable": [
        26090
      ],
      "Ownable2StepUpgradeable": [
        25618
      ],
      "OwnableUpgradeable": [
        25750
      ],
      "Registry": [
        36256
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4774:64",
    "nodes": [
      {
        "id": 36016,
        "nodeType": "PragmaDirective",
        "src": "38:23:64",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 36017,
        "nodeType": "ImportDirective",
        "src": "63:65:64",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol",
        "file": "openzeppelin-utils/structs/EnumerableSetUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36257,
        "sourceUnit": 30401,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36018,
        "nodeType": "ImportDirective",
        "src": "129:79:64",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36257,
        "sourceUnit": 25619,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36019,
        "nodeType": "ImportDirective",
        "src": "209:36:64",
        "nodes": [],
        "absolutePath": "src/interfaces/IRegistry.sol",
        "file": "./interfaces/IRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36257,
        "sourceUnit": 39073,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36256,
        "nodeType": "ContractDefinition",
        "src": "372:4439:64",
        "nodes": [
          {
            "id": 36028,
            "nodeType": "ErrorDefinition",
            "src": "434:35:64",
            "nodes": [],
            "errorSelector": "b05bfda6",
            "name": "RegistryError",
            "nameLocation": "440:13:64",
            "parameters": {
              "id": 36027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36026,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "461:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36028,
                  "src": "454:13:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36025,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:6:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "453:15:64"
            }
          },
          {
            "id": 36032,
            "nodeType": "UsingForDirective",
            "src": "475:71:64",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 36029,
              "name": "EnumerableSetUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30400,
              "src": "481:24:64"
            },
            "typeName": {
              "id": 36031,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36030,
                "name": "EnumerableSetUpgradeable.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30113,
                "src": "510:35:64"
              },
              "referencedDeclaration": 30113,
              "src": "510:35:64",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$30113_storage_ptr",
                "typeString": "struct EnumerableSetUpgradeable.AddressSet"
              }
            }
          },
          {
            "id": 36034,
            "nodeType": "VariableDeclaration",
            "src": "572:37:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "principalTokenFactory",
            "nameLocation": "588:21:64",
            "scope": 36256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36033,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:64",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 36037,
            "nodeType": "VariableDeclaration",
            "src": "615:59:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "principalTokens",
            "nameLocation": "659:15:64",
            "scope": 36256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$30113_storage",
              "typeString": "struct EnumerableSetUpgradeable.AddressSet"
            },
            "typeName": {
              "id": 36036,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36035,
                "name": "EnumerableSetUpgradeable.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30113,
                "src": "615:35:64"
              },
              "referencedDeclaration": 30113,
              "src": "615:35:64",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$30113_storage_ptr",
                "typeString": "struct EnumerableSetUpgradeable.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "id": 36039,
            "nodeType": "VariableDeclaration",
            "src": "680:28:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "zapDepositor",
            "nameLocation": "696:12:64",
            "scope": 36256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36038,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "680:7:64",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 36045,
            "nodeType": "EventDefinition",
            "src": "715:101:64",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "2f4a7b447d797ed79d75520e3025655337b66af99ac7b09c7c4c3bb8bf6365f7",
            "name": "PrincipalTokenFactoryUpdated",
            "nameLocation": "721:28:64",
            "parameters": {
              "id": 36044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36041,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_old",
                  "nameLocation": "775:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36045,
                  "src": "759:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36043,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_new",
                  "nameLocation": "805:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36045,
                  "src": "789:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:66:64"
            }
          },
          {
            "id": 36049,
            "nodeType": "EventDefinition",
            "src": "821:56:64",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1c255e703fa5d19943f36dab3917d0758da9a31211bf55b91b4230cc9a9aa56e",
            "name": "ZapDepositorUpdated",
            "nameLocation": "827:19:64",
            "parameters": {
              "id": 36048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36047,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "zapDepositor",
                  "nameLocation": "863:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36049,
                  "src": "847:28:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:30:64"
            }
          },
          {
            "id": 36053,
            "nodeType": "EventDefinition",
            "src": "882:58:64",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "bf7bcee7480b1c77c06547ef8fd0cfacfb518606c897ba637ca0c9061533042f",
            "name": "PrincipalTokenAdded",
            "nameLocation": "888:19:64",
            "parameters": {
              "id": 36052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36051,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "principalToken",
                  "nameLocation": "924:14:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36053,
                  "src": "908:30:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:32:64"
            }
          },
          {
            "id": 36057,
            "nodeType": "EventDefinition",
            "src": "945:60:64",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c690541461a4cee9666e3815924fe8130226dea7b434be0fb929f43dcaaa9a6d",
            "name": "PrincipalTokenRemoved",
            "nameLocation": "951:21:64",
            "parameters": {
              "id": 36056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36055,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "principalToken",
                  "nameLocation": "989:14:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36057,
                  "src": "973:30:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:32:64"
            }
          },
          {
            "id": 36065,
            "nodeType": "FunctionDefinition",
            "src": "1070:132:64",
            "nodes": [],
            "body": {
              "id": 36064,
              "nodeType": "Block",
              "src": "1084:118:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36061,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26071,
                      "src": "1094:20:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 36062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:22:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36063,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:22:64"
                }
              ]
            },
            "documentation": {
              "id": 36058,
              "nodeType": "StructuredDocumentation",
              "src": "1011:54:64",
              "text": " @notice Constructor of the contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 36059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:64"
            },
            "returnParameters": {
              "id": 36060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:0:64"
            },
            "scope": 36256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36075,
            "nodeType": "FunctionDefinition",
            "src": "1268:81:64",
            "nodes": [],
            "body": {
              "id": 36074,
              "nodeType": "Block",
              "src": "1311:38:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36071,
                      "name": "__Ownable2Step_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25530,
                      "src": "1321:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 36072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1321:21:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36073,
                  "nodeType": "ExpressionStatement",
                  "src": "1321:21:64"
                }
              ]
            },
            "documentation": {
              "id": 36066,
              "nodeType": "StructuredDocumentation",
              "src": "1208:55:64",
              "text": " @notice Initializer of the contract."
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36069,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36068,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25992,
                  "src": "1299:11:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "1299:11:64"
              }
            ],
            "name": "initialize",
            "nameLocation": "1277:10:64",
            "parameters": {
              "id": 36067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:2:64"
            },
            "returnParameters": {
              "id": 36070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:64"
            },
            "scope": 36256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36107,
            "nodeType": "FunctionDefinition",
            "src": "1464:270:64",
            "nodes": [],
            "body": {
              "id": 36106,
              "nodeType": "Block",
              "src": "1521:213:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36082,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "1531:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:13:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36084,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:13:64"
                },
                {
                  "condition": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36085,
                          "name": "_zap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36078,
                          "src": "1559:4:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1575:1:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1567:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36086,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1567:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1567:10:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1559:18:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 36091,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1558:20:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36097,
                  "nodeType": "IfStatement",
                  "src": "1554:105:64",
                  "trueBody": {
                    "id": 36096,
                    "nodeType": "Block",
                    "src": "1580:79:64",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "hexValue": "43616e6e6f7420736574207a617020746f207a65726f2061646472657373",
                              "id": 36093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1615:32:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8b298ac5edf75ba01395aa013762a3bb4d5913afbcf19af645729e0f76b9c736",
                                "typeString": "literal_string \"Cannot set zap to zero address\""
                              },
                              "value": "Cannot set zap to zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8b298ac5edf75ba01395aa013762a3bb4d5913afbcf19af645729e0f76b9c736",
                                "typeString": "literal_string \"Cannot set zap to zero address\""
                              }
                            ],
                            "id": 36092,
                            "name": "RegistryError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36028,
                            "src": "1601:13:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 36094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1601:47:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 36095,
                        "nodeType": "RevertStatement",
                        "src": "1594:54:64"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 36100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36098,
                      "name": "zapDepositor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36039,
                      "src": "1668:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36099,
                      "name": "_zap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36078,
                      "src": "1683:4:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1668:19:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36101,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:19:64"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 36103,
                        "name": "_zap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36078,
                        "src": "1722:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36102,
                      "name": "ZapDepositorUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36049,
                      "src": "1702:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 36104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1702:25:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36105,
                  "nodeType": "EmitStatement",
                  "src": "1697:30:64"
                }
              ]
            },
            "baseFunctions": [
              39043
            ],
            "documentation": {
              "id": 36076,
              "nodeType": "StructuredDocumentation",
              "src": "1371:88:64",
              "text": " @notice set zap depositor\n @param _zap address of zap depositor"
            },
            "functionSelector": "a0bc97db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setZapDepositor",
            "nameLocation": "1473:15:64",
            "overrides": {
              "id": 36080,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1512:8:64"
            },
            "parameters": {
              "id": 36079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36078,
                  "mutability": "mutable",
                  "name": "_zap",
                  "nameLocation": "1497:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36107,
                  "src": "1489:12:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1488:14:64"
            },
            "returnParameters": {
              "id": 36081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:0:64"
            },
            "scope": 36256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36116,
            "nodeType": "FunctionDefinition",
            "src": "1804:95:64",
            "nodes": [],
            "body": {
              "id": 36115,
              "nodeType": "Block",
              "src": "1863:36:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36113,
                    "name": "zapDepositor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36039,
                    "src": "1880:12:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 36112,
                  "id": 36114,
                  "nodeType": "Return",
                  "src": "1873:19:64"
                }
              ]
            },
            "baseFunctions": [
              39071
            ],
            "documentation": {
              "id": 36108,
              "nodeType": "StructuredDocumentation",
              "src": "1740:59:64",
              "text": " @notice get the address of zap depositor"
            },
            "functionSelector": "0e5f99c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getZapDepositor",
            "nameLocation": "1813:15:64",
            "parameters": {
              "id": 36109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1828:2:64"
            },
            "returnParameters": {
              "id": 36112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36116,
                  "src": "1854:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1853:9:64"
            },
            "scope": 36256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36149,
            "nodeType": "FunctionDefinition",
            "src": "2074:501:64",
            "nodes": [],
            "body": {
              "id": 36148,
              "nodeType": "Block",
              "src": "2175:400:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36123,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "2185:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2185:13:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36125,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:13:64"
                },
                {
                  "condition": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36126,
                          "name": "_newPrincipalTokenFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36119,
                          "src": "2213:25:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2250:1:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2242:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36127,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2242:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2242:10:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2213:39:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 36132,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2212:41:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36138,
                  "nodeType": "IfStatement",
                  "src": "2208:175:64",
                  "trueBody": {
                    "id": 36137,
                    "nodeType": "Block",
                    "src": "2255:128:64",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "hexValue": "43616e6e6f7420736574207072696e636970616c546f6b656e20666163746f727920746f207a65726f2061646472657373",
                              "id": 36134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2307:51:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5088726fc2e7263d9704ee6e2690101a92797bc23ad7696489236d62548ef4dd",
                                "typeString": "literal_string \"Cannot set principalToken factory to zero address\""
                              },
                              "value": "Cannot set principalToken factory to zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5088726fc2e7263d9704ee6e2690101a92797bc23ad7696489236d62548ef4dd",
                                "typeString": "literal_string \"Cannot set principalToken factory to zero address\""
                              }
                            ],
                            "id": 36133,
                            "name": "RegistryError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36028,
                            "src": "2276:13:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 36135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2276:96:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 36136,
                        "nodeType": "RevertStatement",
                        "src": "2269:103:64"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 36140,
                        "name": "principalTokenFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36034,
                        "src": "2439:21:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36141,
                        "name": "_newPrincipalTokenFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36119,
                        "src": "2474:25:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36139,
                      "name": "PrincipalTokenFactoryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36045,
                      "src": "2397:28:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 36142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:112:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36143,
                  "nodeType": "EmitStatement",
                  "src": "2392:117:64"
                },
                {
                  "expression": {
                    "id": 36146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36144,
                      "name": "principalTokenFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36034,
                      "src": "2519:21:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36145,
                      "name": "_newPrincipalTokenFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36119,
                      "src": "2543:25:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2519:49:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36147,
                  "nodeType": "ExpressionStatement",
                  "src": "2519:49:64"
                }
              ]
            },
            "baseFunctions": [
              39019
            ],
            "documentation": {
              "id": 36117,
              "nodeType": "StructuredDocumentation",
              "src": "1924:145:64",
              "text": " @notice Setter for the principalToken factory address\n @param _newPrincipalTokenFactory the address of the token factory"
            },
            "functionSelector": "766a1b6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPrincipalTokenFactory",
            "nameLocation": "2083:24:64",
            "overrides": {
              "id": 36121,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2166:8:64"
            },
            "parameters": {
              "id": 36120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36119,
                  "mutability": "mutable",
                  "name": "_newPrincipalTokenFactory",
                  "nameLocation": "2125:25:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36149,
                  "src": "2117:33:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2107:49:64"
            },
            "returnParameters": {
              "id": 36122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2175:0:64"
            },
            "scope": 36256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36176,
            "nodeType": "FunctionDefinition",
            "src": "2736:282:64",
            "nodes": [],
            "body": {
              "id": 36175,
              "nodeType": "Block",
              "src": "2806:212:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36156,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "2816:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2816:13:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36158,
                  "nodeType": "ExpressionStatement",
                  "src": "2816:13:64"
                },
                {
                  "condition": {
                    "id": 36164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2843:39:64",
                    "subExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 36161,
                              "name": "_principalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36152,
                              "src": "2865:15:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 36159,
                              "name": "principalTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36037,
                              "src": "2845:15:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$30113_storage",
                                "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                              }
                            },
                            "id": 36160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30140,
                            "src": "2845:19:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$30113_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$30113_storage_ptr_$",
                              "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 36162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2845:36:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 36163,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2844:38:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36170,
                  "nodeType": "IfStatement",
                  "src": "2839:122:64",
                  "trueBody": {
                    "id": 36169,
                    "nodeType": "Block",
                    "src": "2884:77:64",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "hexValue": "4572726f7220616464696e67207072696e636970616c20746f6b656e",
                              "id": 36166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2919:30:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_927b575407af25d2218b87b17e830ddc402cf1ee55a622581c6de1e674545b00",
                                "typeString": "literal_string \"Error adding principal token\""
                              },
                              "value": "Error adding principal token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_927b575407af25d2218b87b17e830ddc402cf1ee55a622581c6de1e674545b00",
                                "typeString": "literal_string \"Error adding principal token\""
                              }
                            ],
                            "id": 36165,
                            "name": "RegistryError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36028,
                            "src": "2905:13:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 36167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2905:45:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 36168,
                        "nodeType": "RevertStatement",
                        "src": "2898:52:64"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 36172,
                        "name": "_principalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36152,
                        "src": "2995:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36171,
                      "name": "PrincipalTokenAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36053,
                      "src": "2975:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 36173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2975:36:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36174,
                  "nodeType": "EmitStatement",
                  "src": "2970:41:64"
                }
              ]
            },
            "baseFunctions": [
              39031
            ],
            "documentation": {
              "id": 36150,
              "nodeType": "StructuredDocumentation",
              "src": "2581:150:64",
              "text": " @notice Add a principalToken to the registry\n @param _principalToken the address of the principalToken to add to the registry"
            },
            "functionSelector": "241fee15",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPrincipalToken",
            "nameLocation": "2745:17:64",
            "overrides": {
              "id": 36154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2797:8:64"
            },
            "parameters": {
              "id": 36153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36152,
                  "mutability": "mutable",
                  "name": "_principalToken",
                  "nameLocation": "2771:15:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36176,
                  "src": "2763:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2762:25:64"
            },
            "returnParameters": {
              "id": 36155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2806:0:64"
            },
            "scope": 36256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36203,
            "nodeType": "FunctionDefinition",
            "src": "3189:292:64",
            "nodes": [],
            "body": {
              "id": 36202,
              "nodeType": "Block",
              "src": "3262:219:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36183,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "3272:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3272:13:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36185,
                  "nodeType": "ExpressionStatement",
                  "src": "3272:13:64"
                },
                {
                  "condition": {
                    "id": 36191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3299:42:64",
                    "subExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 36188,
                              "name": "_principalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36179,
                              "src": "3324:15:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 36186,
                              "name": "principalTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36037,
                              "src": "3301:15:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$30113_storage",
                                "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                              }
                            },
                            "id": 36187,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30167,
                            "src": "3301:22:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$30113_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$30113_storage_ptr_$",
                              "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 36189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3301:39:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 36190,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3300:41:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36197,
                  "nodeType": "IfStatement",
                  "src": "3295:127:64",
                  "trueBody": {
                    "id": 36196,
                    "nodeType": "Block",
                    "src": "3343:79:64",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "hexValue": "4572726f722072656d6f76696e67207072696e636970616c20746f6b656e",
                              "id": 36193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3378:32:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_54dc37232744f94a85b0343d4eed4b02d2fd9e565c843823cae20089c25bd99c",
                                "typeString": "literal_string \"Error removing principal token\""
                              },
                              "value": "Error removing principal token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_54dc37232744f94a85b0343d4eed4b02d2fd9e565c843823cae20089c25bd99c",
                                "typeString": "literal_string \"Error removing principal token\""
                              }
                            ],
                            "id": 36192,
                            "name": "RegistryError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36028,
                            "src": "3364:13:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 36194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3364:47:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 36195,
                        "nodeType": "RevertStatement",
                        "src": "3357:54:64"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 36199,
                        "name": "_principalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36179,
                        "src": "3458:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36198,
                      "name": "PrincipalTokenRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36057,
                      "src": "3436:21:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 36200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3436:38:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36201,
                  "nodeType": "EmitStatement",
                  "src": "3431:43:64"
                }
              ]
            },
            "baseFunctions": [
              39037
            ],
            "documentation": {
              "id": 36177,
              "nodeType": "StructuredDocumentation",
              "src": "3024:160:64",
              "text": " @notice Remove a principalToken from the registry\n @param _principalToken the address of the principalToken to remove from the registry"
            },
            "functionSelector": "c96019a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removePrincipalToken",
            "nameLocation": "3198:20:64",
            "overrides": {
              "id": 36181,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3253:8:64"
            },
            "parameters": {
              "id": 36180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36179,
                  "mutability": "mutable",
                  "name": "_principalToken",
                  "nameLocation": "3227:15:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36203,
                  "src": "3219:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3218:25:64"
            },
            "returnParameters": {
              "id": 36182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3262:0:64"
            },
            "scope": 36256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36218,
            "nodeType": "FunctionDefinition",
            "src": "3707:176:64",
            "nodes": [],
            "body": {
              "id": 36217,
              "nodeType": "Block",
              "src": "3818:65:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36214,
                        "name": "_principalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36206,
                        "src": "3860:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 36212,
                        "name": "principalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36037,
                        "src": "3835:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$30113_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 36213,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30194,
                      "src": "3835:24:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$30113_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$30113_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 36215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3835:41:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 36211,
                  "id": 36216,
                  "nodeType": "Return",
                  "src": "3828:48:64"
                }
              ]
            },
            "baseFunctions": [
              39051
            ],
            "documentation": {
              "id": 36204,
              "nodeType": "StructuredDocumentation",
              "src": "3487:215:64",
              "text": " @notice Getter to check if a principalToken is registered\n @param _principalToken the address of the principalToken to check the registration of\n @return true if it is, false otherwise"
            },
            "functionSelector": "750ca586",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredPrincipalToken",
            "nameLocation": "3716:26:64",
            "overrides": {
              "id": 36208,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3794:8:64"
            },
            "parameters": {
              "id": 36207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36206,
                  "mutability": "mutable",
                  "name": "_principalToken",
                  "nameLocation": "3760:15:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36218,
                  "src": "3752:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3752:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3742:39:64"
            },
            "returnParameters": {
              "id": 36211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36210,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36218,
                  "src": "3812:4:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36209,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3812:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3811:6:64"
            },
            "scope": 36256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36233,
            "nodeType": "FunctionDefinition",
            "src": "4099:150:64",
            "nodes": [],
            "body": {
              "id": 36232,
              "nodeType": "Block",
              "src": "4199:50:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36229,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36221,
                        "src": "4235:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 36227,
                        "name": "principalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36037,
                        "src": "4216:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$30113_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 36228,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30236,
                      "src": "4216:18:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$30113_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$30113_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 36230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4216:26:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 36226,
                  "id": 36231,
                  "nodeType": "Return",
                  "src": "4209:33:64"
                }
              ]
            },
            "baseFunctions": [
              39059
            ],
            "documentation": {
              "id": 36219,
              "nodeType": "StructuredDocumentation",
              "src": "3889:205:64",
              "text": " @notice Getter for the principalToken registered at an index\n @param _index the index of the principalToken to return\n @return the address of the corresponding principalToken"
            },
            "functionSelector": "6fb3c766",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrincipalTokenAt",
            "nameLocation": "4108:19:64",
            "overrides": {
              "id": 36223,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4172:8:64"
            },
            "parameters": {
              "id": 36222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36221,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "4145:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 36233,
                  "src": "4137:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4137:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4127:30:64"
            },
            "returnParameters": {
              "id": 36226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36233,
                  "src": "4190:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4190:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4189:9:64"
            },
            "scope": 36256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36245,
            "nodeType": "FunctionDefinition",
            "src": "4390:120:64",
            "nodes": [],
            "body": {
              "id": 36244,
              "nodeType": "Block",
              "src": "4462:48:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 36240,
                        "name": "principalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36037,
                        "src": "4479:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$30113_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 36241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30209,
                      "src": "4479:22:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$30113_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$30113_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 36242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:24:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 36239,
                  "id": 36243,
                  "nodeType": "Return",
                  "src": "4472:31:64"
                }
              ]
            },
            "baseFunctions": [
              39065
            ],
            "documentation": {
              "id": 36234,
              "nodeType": "StructuredDocumentation",
              "src": "4255:130:64",
              "text": " @notice Getter for number of principalTokens registered\n @return the number of principalTokens registered"
            },
            "functionSelector": "e0ecf8ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "principalTokenCount",
            "nameLocation": "4399:19:64",
            "overrides": {
              "id": 36236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4435:8:64"
            },
            "parameters": {
              "id": 36235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4418:2:64"
            },
            "returnParameters": {
              "id": 36239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36245,
                  "src": "4453:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4453:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4452:9:64"
            },
            "scope": 36256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36255,
            "nodeType": "FunctionDefinition",
            "src": "4644:165:64",
            "nodes": [],
            "body": {
              "id": 36254,
              "nodeType": "Block",
              "src": "4764:45:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36252,
                    "name": "principalTokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36034,
                    "src": "4781:21:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 36251,
                  "id": 36253,
                  "nodeType": "Return",
                  "src": "4774:28:64"
                }
              ]
            },
            "baseFunctions": [
              39025
            ],
            "documentation": {
              "id": 36246,
              "nodeType": "StructuredDocumentation",
              "src": "4516:123:64",
              "text": " @notice Getter for the principalToken's factory address\n @return the address of the tokens factory"
            },
            "functionSelector": "509414ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrincipalTokenFactoryAddress",
            "nameLocation": "4653:31:64",
            "overrides": {
              "id": 36248,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4725:8:64"
            },
            "parameters": {
              "id": 36247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4684:2:64"
            },
            "returnParameters": {
              "id": 36251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36250,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36255,
                  "src": "4751:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4751:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4750:9:64"
            },
            "scope": 36256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36021,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39072,
              "src": "393:9:64"
            },
            "id": 36022,
            "nodeType": "InheritanceSpecifier",
            "src": "393:9:64"
          },
          {
            "baseName": {
              "id": 36023,
              "name": "Ownable2StepUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25618,
              "src": "404:23:64"
            },
            "id": 36024,
            "nodeType": "InheritanceSpecifier",
            "src": "404:23:64"
          }
        ],
        "canonicalName": "Registry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36020,
          "nodeType": "StructuredDocumentation",
          "src": "247:124:64",
          "text": " @title Registry Contract\n @notice Keeps a record of all valid contract addresses currently used in the protocol"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          36256,
          25618,
          25750,
          27850,
          26090,
          39072
        ],
        "name": "Registry",
        "nameLocation": "381:8:64",
        "scope": 36257,
        "usedErrors": [
          36028
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 64
}