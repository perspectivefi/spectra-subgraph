{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_contractName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_old",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "RegistryUpdate",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "addFutureVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "futureVaultCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFutureVaultAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFutureVaultFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getZapDepositor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "isRegisteredFutureVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "removeFutureVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newFutureVaultFactory",
          "type": "address"
        }
      ],
      "name": "setFutureVaultFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zap",
          "type": "address"
        }
      ],
      "name": "setZapDepositor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610959806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b71c9b3211610071578063b71c9b321461014b578063bbe4f6db1461015e578063bc97cb181461018a578063c4d66de81461019d578063e3dcc0f8146101b0578063eb511dd4146101d357600080fd5b80630e5f99c5146100b95780631c93e128146100e3578063331c8fa3146100f657806356da7c281461010d5780638d722c0514610123578063a0bc97db14610138575b600080fd5b6005546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c66100f136600461081a565b6101e6565b6000546201000090046001600160a01b03166100c6565b6101156101f9565b6040519081526020016100da565b61013661013136600461084f565b61020a565b005b61013661014636600461084f565b6102dc565b61013661015936600461084f565b610328565b6100c661016c36600461084f565b6001600160a01b039081166000908152600460205260409020541690565b61013661019836600461084f565b6103ac565b6101366101ab36600461084f565b61042d565b6101c36101be36600461084f565b610552565b60405190151581526020016100da565b6101366101e136600461086a565b61055f565b60006101f3600183610645565b92915050565b60006102056001610658565b905090565b6003546001600160a01b0316331461023d5760405162461bcd60e51b81526004016102349061089d565b60405180910390fd5b600054604080516060808252601290820152714675747572655661756c74466163746f727960701b6080820152620100009092046001600160a01b039081166020840152831682820152517fa3e905c3f8091e43e1c20e325887a9596e786aefca993058675aeed52d516dce9181900360a00190a1600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b6003546001600160a01b031633146103065760405162461bcd60e51b81526004016102349061089d565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146103525760405162461bcd60e51b81526004016102349061089d565b61035d600182610662565b6103a95760405162461bcd60e51b815260206004820152601760248201527f52656769737472793a204552525f4655545552455f524d0000000000000000006044820152606401610234565b50565b6003546001600160a01b031633146103d65760405162461bcd60e51b81526004016102349061089d565b6103e1600182610677565b6103a95760405162461bcd60e51b815260206004820152601860248201527f52656769737472793a204552525f4655545552455f41444400000000000000006044820152606401610234565b600054610100900460ff161580801561044d5750600054600160ff909116105b806104675750303b158015610467575060005460ff166001145b6104ca5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610234565b6000805460ff1916600117905580156104ed576000805461ff0019166101001790555b600380546001600160a01b0319166001600160a01b038416179055801561054e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60006101f360018361068c565b61056881610552565b6105b45760405162461bcd60e51b815260206004820152601d60248201527f52656769737472793a20554e524547495354455245445f4655545552450000006044820152606401610234565b6001600160a01b0381811660009081526004602052604090205416156106155760405162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c9e4e8811549497d413d3d317d0511160521b6044820152606401610234565b6001600160a01b0390811660009081526004602052604090208054919092166001600160a01b0319909116179055565b600061065183836106ae565b9392505050565b60006101f3825490565b6000610651836001600160a01b0384166106d8565b6000610651836001600160a01b0384166107cb565b6001600160a01b03811660009081526001830160205260408120541515610651565b60008260000182815481106106c5576106c56108d2565b9060005260206000200154905092915050565b600081815260018301602052604081205480156107c15760006106fc6001836108e8565b8554909150600090610710906001906108e8565b9050818114610775576000866000018281548110610730576107306108d2565b9060005260206000200154905080876000018481548110610753576107536108d2565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107865761078661090d565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506101f3565b60009150506101f3565b6000818152600183016020526040812054610812575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101f3565b5060006101f3565b60006020828403121561082c57600080fd5b5035919050565b80356001600160a01b038116811461084a57600080fd5b919050565b60006020828403121561086157600080fd5b61065182610833565b6000806040838503121561087d57600080fd5b61088683610833565b915061089460208401610833565b90509250929050565b6020808252818101527f52656769737472793a2043616c6c65722073686f756c642062652041646d696e604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60008282101561090857634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220103ae5266e4bb8f44f3ffd371241c9961dd63338109b1f64ac9d334fb30c8df764736f6c634300080d0033",
    "sourceMap": "405:4567:52:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b71c9b3211610071578063b71c9b321461014b578063bbe4f6db1461015e578063bc97cb181461018a578063c4d66de81461019d578063e3dcc0f8146101b0578063eb511dd4146101d357600080fd5b80630e5f99c5146100b95780631c93e128146100e3578063331c8fa3146100f657806356da7c281461010d5780638d722c0514610123578063a0bc97db14610138575b600080fd5b6005546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c66100f136600461081a565b6101e6565b6000546201000090046001600160a01b03166100c6565b6101156101f9565b6040519081526020016100da565b61013661013136600461084f565b61020a565b005b61013661014636600461084f565b6102dc565b61013661015936600461084f565b610328565b6100c661016c36600461084f565b6001600160a01b039081166000908152600460205260409020541690565b61013661019836600461084f565b6103ac565b6101366101ab36600461084f565b61042d565b6101c36101be36600461084f565b610552565b60405190151581526020016100da565b6101366101e136600461086a565b61055f565b60006101f3600183610645565b92915050565b60006102056001610658565b905090565b6003546001600160a01b0316331461023d5760405162461bcd60e51b81526004016102349061089d565b60405180910390fd5b600054604080516060808252601290820152714675747572655661756c74466163746f727960701b6080820152620100009092046001600160a01b039081166020840152831682820152517fa3e905c3f8091e43e1c20e325887a9596e786aefca993058675aeed52d516dce9181900360a00190a1600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b6003546001600160a01b031633146103065760405162461bcd60e51b81526004016102349061089d565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146103525760405162461bcd60e51b81526004016102349061089d565b61035d600182610662565b6103a95760405162461bcd60e51b815260206004820152601760248201527f52656769737472793a204552525f4655545552455f524d0000000000000000006044820152606401610234565b50565b6003546001600160a01b031633146103d65760405162461bcd60e51b81526004016102349061089d565b6103e1600182610677565b6103a95760405162461bcd60e51b815260206004820152601860248201527f52656769737472793a204552525f4655545552455f41444400000000000000006044820152606401610234565b600054610100900460ff161580801561044d5750600054600160ff909116105b806104675750303b158015610467575060005460ff166001145b6104ca5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610234565b6000805460ff1916600117905580156104ed576000805461ff0019166101001790555b600380546001600160a01b0319166001600160a01b038416179055801561054e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60006101f360018361068c565b61056881610552565b6105b45760405162461bcd60e51b815260206004820152601d60248201527f52656769737472793a20554e524547495354455245445f4655545552450000006044820152606401610234565b6001600160a01b0381811660009081526004602052604090205416156106155760405162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c9e4e8811549497d413d3d317d0511160521b6044820152606401610234565b6001600160a01b0390811660009081526004602052604090208054919092166001600160a01b0319909116179055565b600061065183836106ae565b9392505050565b60006101f3825490565b6000610651836001600160a01b0384166106d8565b6000610651836001600160a01b0384166107cb565b6001600160a01b03811660009081526001830160205260408120541515610651565b60008260000182815481106106c5576106c56108d2565b9060005260206000200154905092915050565b600081815260018301602052604081205480156107c15760006106fc6001836108e8565b8554909150600090610710906001906108e8565b9050818114610775576000866000018281548110610730576107306108d2565b9060005260206000200154905080876000018481548110610753576107536108d2565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107865761078661090d565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506101f3565b60009150506101f3565b6000818152600183016020526040812054610812575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101f3565b5060006101f3565b60006020828403121561082c57600080fd5b5035919050565b80356001600160a01b038116811461084a57600080fd5b919050565b60006020828403121561086157600080fd5b61065182610833565b6000806040838503121561087d57600080fd5b61088683610833565b915061089460208401610833565b90509250929050565b6020808252818101527f52656769737472793a2043616c6c65722073686f756c642062652041646d696e604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60008282101561090857634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220103ae5266e4bb8f44f3ffd371241c9961dd63338109b1f64ac9d334fb30c8df764736f6c634300080d0033",
    "sourceMap": "405:4567:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1744:95;1820:12;;-1:-1:-1;;;;;1820:12:52;1744:95;;;-1:-1:-1;;;;;178:32:82;;;160:51;;148:2;133:18;1744:95:52;;;;;;;;3448:144;;;;;;:::i;:::-;;:::i;3973:159::-;4077:7;4107:18;;;;-1:-1:-1;;;;;4107:18:52;3973:159;;3727:114;;;:::i;:::-;;;553:25:82;;;541:2;526:18;3727:114:52;407:177:82;2009:306:52;;;;;;:::i;:::-;;:::i;:::-;;1571:103;;;;;;:::i;:::-;;:::i;2747:153::-;;;;;;:::i;:::-;;:::i;4849:121::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4941:22:52;;;4915:7;4941:22;;;:13;:22;;;;;;;;4849:121;2452:148;;;;;;:::i;:::-;;:::i;1370:86::-;;;;;;:::i;:::-;;:::i;3102:154::-;;;;;;:::i;:::-;;:::i;:::-;;;1123:14:82;;1116:22;1098:41;;1086:2;1071:18;3102:154:52;958:187:82;4340:313:52;;;;;;:::i;:::-;;:::i;3448:144::-;3536:7;3562:23;:12;3578:6;3562:15;:23::i;:::-;3555:30;3448:144;-1:-1:-1;;3448:144:52:o;3727:114::-;3787:7;3813:21;:12;:19;:21::i;:::-;3806:28;;3727:114;:::o;2009:306::-;1183:5;;-1:-1:-1;;;;;1183:5:52;1169:10;:19;1161:64;;;;-1:-1:-1;;;1161:64:52;;;;;;;:::i;:::-;;;;;;;;;2191:18:::1;::::0;2129:126:::1;::::0;;2034:2:82;2016:21;;;2073:2;2053:18;;;2046:30;-1:-1:-1;;;2107:3:82;2092:19;;2085:49;2191:18:52;;;::::1;-1:-1:-1::0;;;;;2191:18:52;;::::1;2239:4:82::0;2224:20;;2217:45;2298:15;;2278:18;;;2271:43;2129:126:52;::::1;::::0;;;;2166:3:82;2129:126:52;;::::1;2265:18;:43:::0;;-1:-1:-1;;;;;2265:43:52;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;2265:43:52;;::::1;::::0;;;::::1;::::0;;2009:306::o;1571:103::-;1183:5;;-1:-1:-1;;;;;1183:5:52;1169:10;:19;1161:64;;;;-1:-1:-1;;;1161:64:52;;;;;;;:::i;:::-;1648:12:::1;:19:::0;;-1:-1:-1;;;;;;1648:19:52::1;-1:-1:-1::0;;;;;1648:19:52;;;::::1;::::0;;;::::1;::::0;;1571:103::o;2747:153::-;1183:5;;-1:-1:-1;;;;;1183:5:52;1169:10;:19;1161:64;;;;-1:-1:-1;;;1161:64:52;;;;;;;:::i;:::-;2837:28:::1;:12;2857:7:::0;2837:19:::1;:28::i;:::-;2829:64;;;::::0;-1:-1:-1;;;2829:64:52;;2527:2:82;2829:64:52::1;::::0;::::1;2509:21:82::0;2566:2;2546:18;;;2539:30;2605:25;2585:18;;;2578:53;2648:18;;2829:64:52::1;2325:347:82::0;2829:64:52::1;2747:153:::0;:::o;2452:148::-;1183:5;;-1:-1:-1;;;;;1183:5:52;1169:10;:19;1161:64;;;;-1:-1:-1;;;1161:64:52;;;;;;;:::i;:::-;2539:25:::1;:12;2556:7:::0;2539:16:::1;:25::i;:::-;2531:62;;;::::0;-1:-1:-1;;;2531:62:52;;2879:2:82;2531:62:52::1;::::0;::::1;2861:21:82::0;2918:2;2898:18;;;2891:30;2957:26;2937:18;;;2930:54;3001:18;;2531:62:52::1;2677:348:82::0;1370:86:52;3111:19:17;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:17;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:17;1476:19:29;:23;;;3219:66:17;;-1:-1:-1;3268:12:17;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:17;;3232:2:82;3157:201:17;;;3214:21:82;3271:2;3251:18;;;3244:30;3310:34;3290:18;;;3283:62;-1:-1:-1;;;3361:18:82;;;3354:44;3415:19;;3157:201:17;3030:410:82;3157:201:17;3368:12;:16;;-1:-1:-1;;3368:16:17;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:17;;;;;3394:65;1435:5:52::1;:14:::0;;-1:-1:-1;;;;;;1435:14:52::1;-1:-1:-1::0;;;;;1435:14:52;::::1;;::::0;;3479:99:17;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:17;;;3553:14;;-1:-1:-1;3597:36:82;;3553:14:17;;3585:2:82;3570:18;3553:14:17;;;;;;;3479:99;3101:483;1370:86:52;:::o;3102:154::-;3196:4;3219:30;:12;3241:7;3219:21;:30::i;4340:313::-;4438:32;4462:7;4438:23;:32::i;:::-;4417:108;;;;-1:-1:-1;;;4417:108:52;;3846:2:82;4417:108:52;;;3828:21:82;3885:2;3865:18;;;3858:30;3924:31;3904:18;;;3897:59;3973:18;;4417:108:52;3644:353:82;4417:108:52;-1:-1:-1;;;;;4543:22:52;;;4577:1;4543:22;;;:13;:22;;;;;;;:36;4535:71;;;;-1:-1:-1;;;4535:71:52;;4204:2:82;4535:71:52;;;4186:21:82;4243:2;4223:18;;;4216:30;-1:-1:-1;;;4262:18:82;;;4255:52;4324:18;;4535:71:52;4002:346:82;4535:71:52;-1:-1:-1;;;;;4616:22:52;;;;;;;:13;:22;;;;;:30;;;;;;-1:-1:-1;;;;;;4616:30:52;;;;;;4340:313::o;9297:156:40:-;9371:7;9421:22;9425:3;9437:5;9421:3;:22::i;:::-;9413:31;9297:156;-1:-1:-1;;;9297:156:40:o;8840:115::-;8903:7;8929:19;8937:3;4455:18;;4373:107;8357:156;8430:4;8453:53;8461:3;-1:-1:-1;;;;;8481:23:40;;8453:7;:53::i;8039:150::-;8109:4;8132:50;8137:3;-1:-1:-1;;;;;8157:23:40;;8132:4;:50::i;8594:165::-;-1:-1:-1;;;;;8727:23:40;;8674:4;4261:19;;;:12;;;:19;;;;;;:24;;8697:55;4165:127;4822:118;4889:7;4915:3;:11;;4927:5;4915:18;;;;;;;;:::i;:::-;;;;;;;;;4908:25;;4822:118;;;;:::o;2696:1388::-;2762:4;2899:19;;;:12;;;:19;;;;;;2933:15;;2929:1149;;3302:21;3326:14;3339:1;3326:10;:14;:::i;:::-;3374:18;;3302:38;;-1:-1:-1;3354:17:40;;3374:22;;3395:1;;3374:22;:::i;:::-;3354:42;;3428:13;3415:9;:26;3411:398;;3461:17;3481:3;:11;;3493:9;3481:22;;;;;;;;:::i;:::-;;;;;;;;;3461:42;;3632:9;3603:3;:11;;3615:13;3603:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3715:23;;;:12;;;:23;;;;;:36;;;3411:398;3887:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3979:3;:12;;:19;3992:5;3979:19;;;;;;;;;;;3972:26;;;4020:4;4013:11;;;;;;;2929:1149;4062:5;4055:12;;;;;2124:404;2187:4;4261:19;;;:12;;;:19;;;;;;2203:319;;-1:-1:-1;2245:23:40;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2457:11;;2203:319;-1:-1:-1;2506:5:40;2499:12;;222:180:82;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:82;;222:180;-1:-1:-1;222:180:82:o;589:173::-;657:20;;-1:-1:-1;;;;;706:31:82;;696:42;;686:70;;752:1;749;742:12;686:70;589:173;;;:::o;767:186::-;826:6;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;918:29;937:9;918:29;:::i;1150:260::-;1218:6;1226;1279:2;1267:9;1258:7;1254:23;1250:32;1247:52;;;1295:1;1292;1285:12;1247:52;1318:29;1337:9;1318:29;:::i;:::-;1308:39;;1366:38;1400:2;1389:9;1385:18;1366:38;:::i;:::-;1356:48;;1150:260;;;;;:::o;1415:356::-;1617:2;1599:21;;;1636:18;;;1629:30;1695:34;1690:2;1675:18;;1668:62;1762:2;1747:18;;1415:356::o;4353:127::-;4414:10;4409:3;4405:20;4402:1;4395:31;4445:4;4442:1;4435:15;4469:4;4466:1;4459:15;4485:222;4525:4;4553:1;4550;4547:8;4544:131;;;4597:10;4592:3;4588:20;4585:1;4578:31;4632:4;4629:1;4622:15;4660:4;4657:1;4650:15;4544:131;-1:-1:-1;4692:9:82;;4485:222::o;4712:127::-;4773:10;4768:3;4764:20;4761:1;4754:31;4804:4;4801:1;4794:15;4828:4;4825:1;4818:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addFutureVault(address)": "bc97cb18",
    "addPool(address,address)": "eb511dd4",
    "futureVaultCount()": "56da7c28",
    "getFutureVaultAt(uint256)": "1c93e128",
    "getFutureVaultFactoryAddress()": "331c8fa3",
    "getPool(address)": "bbe4f6db",
    "getZapDepositor()": "0e5f99c5",
    "initialize(address)": "c4d66de8",
    "isRegisteredFutureVault(address)": "e3dcc0f8",
    "removeFutureVault(address)": "b71c9b32",
    "setFutureVaultFactory(address)": "8d722c05",
    "setZapDepositor(address)": "a0bc97db"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_contractName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"RegistryUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"addFutureVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futureVaultCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFutureVaultAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFutureVaultFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZapDepositor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"isRegisteredFutureVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"removeFutureVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFutureVaultFactory\",\"type\":\"address\"}],\"name\":\"setFutureVaultFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zap\",\"type\":\"address\"}],\"name\":\"setZapDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addFutureVault(address)\":{\"params\":{\"_future\":\"the address of the future to add to the registry\"}},\"addPool(address,address)\":{\"params\":{\"_future\":\"the address of the future to add to the registry\",\"_pool\":\"the address of deployed PT/IBT pool\"}},\"futureVaultCount()\":{\"returns\":{\"_0\":\"the number of futureVaults registered\"}},\"getFutureVaultAt(uint256)\":{\"params\":{\"_index\":\"the index of the future to return\"},\"returns\":{\"_0\":\"the address of the corresponding future\"}},\"getFutureVaultFactoryAddress()\":{\"returns\":{\"_0\":\"the address of the tokens factory\"}},\"getPool(address)\":{\"params\":{\"_future\":\"the address of the future to return\"},\"returns\":{\"_0\":\"the address of the corresponding pool\"}},\"initialize(address)\":{\"params\":{\"_admin\":\"the address of the admin of the contract\"}},\"isRegisteredFutureVault(address)\":{\"params\":{\"_future\":\"the address of the future to check the registration of\"},\"returns\":{\"_0\":\"true if it is, false otherwise\"}},\"removeFutureVault(address)\":{\"params\":{\"_future\":\"the address of the future to remove from the registry\"}},\"setFutureVaultFactory(address)\":{\"params\":{\"_newFutureVaultFactory\":\"the address of the token factory\"}},\"setZapDepositor(address)\":{\"params\":{\"_zap\":\"address of zap depositor\"}}},\"title\":\"Registry Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addFutureVault(address)\":{\"notice\":\"Add a future to the registry\"},\"addPool(address,address)\":{\"notice\":\"Add a pool to the registry\"},\"futureVaultCount()\":{\"notice\":\"Getter for number of futureVaults registered\"},\"getFutureVaultAt(uint256)\":{\"notice\":\"Getter for the future registered at an index\"},\"getFutureVaultFactoryAddress()\":{\"notice\":\"Getter for the future vault's factory address\"},\"getPool(address)\":{\"notice\":\"Getter for the pool registered with this future\"},\"getZapDepositor()\":{\"notice\":\"get the address of zap depositor\"},\"initialize(address)\":{\"notice\":\"Initializer of the contract\"},\"isRegisteredFutureVault(address)\":{\"notice\":\"Getter to check if a future is registered\"},\"removeFutureVault(address)\":{\"notice\":\"Remove a future from the registry\"},\"setFutureVaultFactory(address)\":{\"notice\":\"Setter for the future vault factory address\"},\"setZapDepositor(address)\":{\"notice\":\"set zap depositor\"}},\"notice\":\"Keeps a record of all valid contract addresses currently used in the protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Registry.sol\":\"Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/\",\":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/\",\":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/\",\":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/\",\":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/\",\":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a\",\"dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol\":{\"keccak256\":\"0x41d862e30df7fd3d3bb6c1e116ce8044a86fb1bc33102f7cb47e44a2f567f316\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e90c3352a33b500ac20a856ba20541413a848e0df183f57edf950f7fcc51c\",\"dweb:/ipfs/QmeB1TPdL1TrVbSnsu9Zj75uvoh8TpqduM8zu6U6qyXkNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e\",\"dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj\"]},\"src/Registry.sol\":{\"keccak256\":\"0x7063de3e15d0674e15d882c497c2206bff41f58edd199084c5474138b30364bb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ffaf28e564a3ad495b6281c1f8245b747e04586fe55ba6eb26e54f96ddab9a3c\",\"dweb:/ipfs/QmQRUDs8bqDMD8LdT2q8DiqzcKQZAgTBrQob2rDLhXA8Rz\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x41384cee7cd390107b94448c6f3d985a392fff762843b09cc9afc731f30079a5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6e92c1971200f1836d55ad644d65e97e330271525b69bf0d81063256f041fd61\",\"dweb:/ipfs/QmXao4uATA85kurzoP4UGjDjBSbZh57esfo7W7frnFHcpD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_contractName",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_old",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_new",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RegistryUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFutureVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPool"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "futureVaultCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFutureVaultAt",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFutureVaultFactoryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getZapDepositor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegisteredFutureVault",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFutureVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFutureVaultFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFutureVaultFactory"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_zap",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setZapDepositor"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addFutureVault(address)": {
            "params": {
              "_future": "the address of the future to add to the registry"
            }
          },
          "addPool(address,address)": {
            "params": {
              "_future": "the address of the future to add to the registry",
              "_pool": "the address of deployed PT/IBT pool"
            }
          },
          "futureVaultCount()": {
            "returns": {
              "_0": "the number of futureVaults registered"
            }
          },
          "getFutureVaultAt(uint256)": {
            "params": {
              "_index": "the index of the future to return"
            },
            "returns": {
              "_0": "the address of the corresponding future"
            }
          },
          "getFutureVaultFactoryAddress()": {
            "returns": {
              "_0": "the address of the tokens factory"
            }
          },
          "getPool(address)": {
            "params": {
              "_future": "the address of the future to return"
            },
            "returns": {
              "_0": "the address of the corresponding pool"
            }
          },
          "initialize(address)": {
            "params": {
              "_admin": "the address of the admin of the contract"
            }
          },
          "isRegisteredFutureVault(address)": {
            "params": {
              "_future": "the address of the future to check the registration of"
            },
            "returns": {
              "_0": "true if it is, false otherwise"
            }
          },
          "removeFutureVault(address)": {
            "params": {
              "_future": "the address of the future to remove from the registry"
            }
          },
          "setFutureVaultFactory(address)": {
            "params": {
              "_newFutureVaultFactory": "the address of the token factory"
            }
          },
          "setZapDepositor(address)": {
            "params": {
              "_zap": "address of zap depositor"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addFutureVault(address)": {
            "notice": "Add a future to the registry"
          },
          "addPool(address,address)": {
            "notice": "Add a pool to the registry"
          },
          "futureVaultCount()": {
            "notice": "Getter for number of futureVaults registered"
          },
          "getFutureVaultAt(uint256)": {
            "notice": "Getter for the future registered at an index"
          },
          "getFutureVaultFactoryAddress()": {
            "notice": "Getter for the future vault's factory address"
          },
          "getPool(address)": {
            "notice": "Getter for the pool registered with this future"
          },
          "getZapDepositor()": {
            "notice": "get the address of zap depositor"
          },
          "initialize(address)": {
            "notice": "Initializer of the contract"
          },
          "isRegisteredFutureVault(address)": {
            "notice": "Getter to check if a future is registered"
          },
          "removeFutureVault(address)": {
            "notice": "Remove a future from the registry"
          },
          "setFutureVaultFactory(address)": {
            "notice": "Setter for the future vault factory address"
          },
          "setZapDepositor(address)": {
            "notice": "set zap depositor"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/",
        ":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/",
        ":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/",
        ":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/",
        ":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/",
        ":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Registry.sol": "Registry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol": {
        "keccak256": "0x41d862e30df7fd3d3bb6c1e116ce8044a86fb1bc33102f7cb47e44a2f567f316",
        "urls": [
          "bzz-raw://c78e90c3352a33b500ac20a856ba20541413a848e0df183f57edf950f7fcc51c",
          "dweb:/ipfs/QmeB1TPdL1TrVbSnsu9Zj75uvoh8TpqduM8zu6U6qyXkNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55",
        "urls": [
          "bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e",
          "dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj"
        ],
        "license": "MIT"
      },
      "src/Registry.sol": {
        "keccak256": "0x7063de3e15d0674e15d882c497c2206bff41f58edd199084c5474138b30364bb",
        "urls": [
          "bzz-raw://ffaf28e564a3ad495b6281c1f8245b747e04586fe55ba6eb26e54f96ddab9a3c",
          "dweb:/ipfs/QmQRUDs8bqDMD8LdT2q8DiqzcKQZAgTBrQob2rDLhXA8Rz"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0x41384cee7cd390107b94448c6f3d985a392fff762843b09cc9afc731f30079a5",
        "urls": [
          "bzz-raw://6e92c1971200f1836d55ad644d65e97e330271525b69bf0d81063256f041fd61",
          "dweb:/ipfs/QmXao4uATA85kurzoP4UGjDjBSbZh57esfo7W7frnFHcpD"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Registry.sol",
    "id": 34482,
    "exportedSymbols": {
      "AddressUpgradeable": [
        28231
      ],
      "EnumerableMapUpgradeable": [
        31124
      ],
      "EnumerableSetUpgradeable": [
        31723
      ],
      "IRegistry": [
        36580
      ],
      "Initializable": [
        25834
      ],
      "Registry": [
        34481
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4935:52",
    "nodes": [
      {
        "id": 34236,
        "nodeType": "PragmaDirective",
        "src": "38:23:52",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 34237,
        "nodeType": "ImportDirective",
        "src": "63:46:52",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "openzeppelin-proxy/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34482,
        "sourceUnit": 25835,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34238,
        "nodeType": "ImportDirective",
        "src": "110:65:52",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol",
        "file": "openzeppelin-utils/structs/EnumerableSetUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34482,
        "sourceUnit": 31724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34239,
        "nodeType": "ImportDirective",
        "src": "176:65:52",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol",
        "file": "openzeppelin-utils/structs/EnumerableMapUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34482,
        "sourceUnit": 31125,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34240,
        "nodeType": "ImportDirective",
        "src": "242:36:52",
        "nodes": [],
        "absolutePath": "src/interfaces/IRegistry.sol",
        "file": "./interfaces/IRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34482,
        "sourceUnit": 36581,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34481,
        "nodeType": "ContractDefinition",
        "src": "405:4567:52",
        "nodes": [
          {
            "id": 34249,
            "nodeType": "UsingForDirective",
            "src": "457:71:52",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 34246,
              "name": "EnumerableSetUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31723,
              "src": "463:24:52"
            },
            "typeName": {
              "id": 34248,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34247,
                "name": "EnumerableSetUpgradeable.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31436,
                "src": "492:35:52"
              },
              "referencedDeclaration": 31436,
              "src": "492:35:52",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$31436_storage_ptr",
                "typeString": "struct EnumerableSetUpgradeable.AddressSet"
              }
            }
          },
          {
            "id": 34253,
            "nodeType": "UsingForDirective",
            "src": "533:77:52",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 34250,
              "name": "EnumerableMapUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31124,
              "src": "539:24:52"
            },
            "typeName": {
              "id": 34252,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34251,
                "name": "EnumerableMapUpgradeable.UintToAddressMap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30455,
                "src": "568:41:52"
              },
              "referencedDeclaration": 30455,
              "src": "568:41:52",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$30455_storage_ptr",
                "typeString": "struct EnumerableMapUpgradeable.UintToAddressMap"
              }
            }
          },
          {
            "id": 34255,
            "nodeType": "VariableDeclaration",
            "src": "636:34:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "futureVaultFactory",
            "nameLocation": "652:18:52",
            "scope": 34481,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34254,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 34258,
            "nodeType": "VariableDeclaration",
            "src": "676:56:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "futureVaults",
            "nameLocation": "720:12:52",
            "scope": 34481,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$31436_storage",
              "typeString": "struct EnumerableSetUpgradeable.AddressSet"
            },
            "typeName": {
              "id": 34257,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34256,
                "name": "EnumerableSetUpgradeable.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31436,
                "src": "676:35:52"
              },
              "referencedDeclaration": 31436,
              "src": "676:35:52",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$31436_storage_ptr",
                "typeString": "struct EnumerableSetUpgradeable.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "id": 34260,
            "nodeType": "VariableDeclaration",
            "src": "738:21:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "754:5:52",
            "scope": 34481,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34259,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "738:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 34264,
            "nodeType": "VariableDeclaration",
            "src": "765:49:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "poolFutureMap",
            "nameLocation": "801:13:52",
            "scope": 34481,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 34263,
              "keyType": {
                "id": 34261,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "773:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "765:27:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 34262,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "784:7:52",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 34266,
            "nodeType": "VariableDeclaration",
            "src": "820:20:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "zapDepositor",
            "nameLocation": "828:12:52",
            "scope": 34481,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34265,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34274,
            "nodeType": "EventDefinition",
            "src": "847:71:52",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a3e905c3f8091e43e1c20e325887a9596e786aefca993058675aeed52d516dce",
            "name": "RegistryUpdate",
            "nameLocation": "853:14:52",
            "parameters": {
              "id": 34273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34268,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_contractName",
                  "nameLocation": "875:13:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34274,
                  "src": "868:20:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34267,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34270,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_old",
                  "nameLocation": "898:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34274,
                  "src": "890:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34272,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_new",
                  "nameLocation": "912:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34274,
                  "src": "904:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "867:50:52"
            }
          },
          {
            "id": 34287,
            "nodeType": "ModifierDefinition",
            "src": "1130:113:52",
            "nodes": [],
            "body": {
              "id": 34286,
              "nodeType": "Block",
              "src": "1151:92:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 34278,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1169:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1169:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 34280,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34260,
                          "src": "1183:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1169:19:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a2043616c6c65722073686f756c642062652041646d696e",
                        "id": 34282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1190:34:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12f57a6a4c24bbac448b8b45fc52608401f9a930dbfe280122f6b95d8972ede7",
                          "typeString": "literal_string \"Registry: Caller should be Admin\""
                        },
                        "value": "Registry: Caller should be Admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12f57a6a4c24bbac448b8b45fc52608401f9a930dbfe280122f6b95d8972ede7",
                          "typeString": "literal_string \"Registry: Caller should be Admin\""
                        }
                      ],
                      "id": 34277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1161:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:64:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34284,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:64:52"
                },
                {
                  "id": 34285,
                  "nodeType": "PlaceholderStatement",
                  "src": "1235:1:52"
                }
              ]
            },
            "documentation": {
              "id": 34275,
              "nodeType": "StructuredDocumentation",
              "src": "1061:64:52",
              "text": "@notice A modifier that checks that the caller is the admin."
            },
            "name": "onlyAdmin",
            "nameLocation": "1139:9:52",
            "parameters": {
              "id": 34276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1148:2:52"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34300,
            "nodeType": "FunctionDefinition",
            "src": "1370:86:52",
            "nodes": [],
            "body": {
              "id": 34299,
              "nodeType": "Block",
              "src": "1425:31:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34295,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34260,
                      "src": "1435:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34296,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34290,
                      "src": "1443:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1435:14:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34298,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:14:52"
                }
              ]
            },
            "documentation": {
              "id": 34288,
              "nodeType": "StructuredDocumentation",
              "src": "1249:116:52",
              "text": " @notice Initializer of the contract\n @param _admin the address of the admin of the contract"
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34293,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34292,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25754,
                  "src": "1413:11:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "1413:11:52"
              }
            ],
            "name": "initialize",
            "nameLocation": "1379:10:52",
            "parameters": {
              "id": 34291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34290,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1398:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34300,
                  "src": "1390:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1389:16:52"
            },
            "returnParameters": {
              "id": 34294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:0:52"
            },
            "scope": 34481,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34314,
            "nodeType": "FunctionDefinition",
            "src": "1571:103:52",
            "nodes": [],
            "body": {
              "id": 34313,
              "nodeType": "Block",
              "src": "1638:36:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34309,
                      "name": "zapDepositor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34266,
                      "src": "1648:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34310,
                      "name": "_zap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34303,
                      "src": "1663:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1648:19:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34312,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:19:52"
                }
              ]
            },
            "baseFunctions": [
              36537
            ],
            "documentation": {
              "id": 34301,
              "nodeType": "StructuredDocumentation",
              "src": "1478:88:52",
              "text": " @notice set zap depositor\n @param _zap address of zap depositor"
            },
            "functionSelector": "a0bc97db",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34307,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34306,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34287,
                  "src": "1628:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "1628:9:52"
              }
            ],
            "name": "setZapDepositor",
            "nameLocation": "1580:15:52",
            "overrides": {
              "id": 34305,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1619:8:52"
            },
            "parameters": {
              "id": 34304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34303,
                  "mutability": "mutable",
                  "name": "_zap",
                  "nameLocation": "1604:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34314,
                  "src": "1596:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1596:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1595:14:52"
            },
            "returnParameters": {
              "id": 34308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:0:52"
            },
            "scope": 34481,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34323,
            "nodeType": "FunctionDefinition",
            "src": "1744:95:52",
            "nodes": [],
            "body": {
              "id": 34322,
              "nodeType": "Block",
              "src": "1803:36:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34320,
                    "name": "zapDepositor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34266,
                    "src": "1820:12:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34319,
                  "id": 34321,
                  "nodeType": "Return",
                  "src": "1813:19:52"
                }
              ]
            },
            "baseFunctions": [
              36579
            ],
            "documentation": {
              "id": 34315,
              "nodeType": "StructuredDocumentation",
              "src": "1680:59:52",
              "text": " @notice get the address of zap depositor"
            },
            "functionSelector": "0e5f99c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getZapDepositor",
            "nameLocation": "1753:15:52",
            "parameters": {
              "id": 34316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:2:52"
            },
            "returnParameters": {
              "id": 34319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34318,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34323,
                  "src": "1794:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:9:52"
            },
            "scope": 34481,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34343,
            "nodeType": "FunctionDefinition",
            "src": "2009:306:52",
            "nodes": [],
            "body": {
              "id": 34342,
              "nodeType": "Block",
              "src": "2114:201:52",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4675747572655661756c74466163746f7279",
                        "id": 34333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2157:20:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_573347319b65acdc3e254af866087b82543a230a53f0fd670e85e2576b668712",
                          "typeString": "literal_string \"FutureVaultFactory\""
                        },
                        "value": "FutureVaultFactory"
                      },
                      {
                        "id": 34334,
                        "name": "futureVaultFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34255,
                        "src": "2191:18:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34335,
                        "name": "_newFutureVaultFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34326,
                        "src": "2223:22:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_573347319b65acdc3e254af866087b82543a230a53f0fd670e85e2576b668712",
                          "typeString": "literal_string \"FutureVaultFactory\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34332,
                      "name": "RegistryUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34274,
                      "src": "2129:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 34336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:126:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34337,
                  "nodeType": "EmitStatement",
                  "src": "2124:131:52"
                },
                {
                  "expression": {
                    "id": 34340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34338,
                      "name": "futureVaultFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34255,
                      "src": "2265:18:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34339,
                      "name": "_newFutureVaultFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34326,
                      "src": "2286:22:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2265:43:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34341,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:43:52"
                }
              ]
            },
            "baseFunctions": [
              36513
            ],
            "documentation": {
              "id": 34324,
              "nodeType": "StructuredDocumentation",
              "src": "1864:140:52",
              "text": " @notice Setter for the future vault factory address\n @param _newFutureVaultFactory the address of the token factory"
            },
            "functionSelector": "8d722c05",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34330,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34329,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34287,
                  "src": "2104:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "2104:9:52"
              }
            ],
            "name": "setFutureVaultFactory",
            "nameLocation": "2018:21:52",
            "overrides": {
              "id": 34328,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2095:8:52"
            },
            "parameters": {
              "id": 34327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34326,
                  "mutability": "mutable",
                  "name": "_newFutureVaultFactory",
                  "nameLocation": "2057:22:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34343,
                  "src": "2049:30:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2039:46:52"
            },
            "returnParameters": {
              "id": 34331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2114:0:52"
            },
            "scope": 34481,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34361,
            "nodeType": "FunctionDefinition",
            "src": "2452:148:52",
            "nodes": [],
            "body": {
              "id": 34360,
              "nodeType": "Block",
              "src": "2521:79:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34355,
                            "name": "_future",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34346,
                            "src": "2556:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34353,
                            "name": "futureVaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34258,
                            "src": "2539:12:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$31436_storage",
                              "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                            }
                          },
                          "id": 34354,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31463,
                          "src": "2539:16:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$31436_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$31436_storage_ptr_$",
                            "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
                          }
                        },
                        "id": 34356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:25:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a204552525f4655545552455f414444",
                        "id": 34357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2566:26:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04bfe4c9c9f621f1183cc1e33f471457e39bee1464ddd71b05db7616ec0f3271",
                          "typeString": "literal_string \"Registry: ERR_FUTURE_ADD\""
                        },
                        "value": "Registry: ERR_FUTURE_ADD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04bfe4c9c9f621f1183cc1e33f471457e39bee1464ddd71b05db7616ec0f3271",
                          "typeString": "literal_string \"Registry: ERR_FUTURE_ADD\""
                        }
                      ],
                      "id": 34352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2531:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2531:62:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34359,
                  "nodeType": "ExpressionStatement",
                  "src": "2531:62:52"
                }
              ]
            },
            "baseFunctions": [
              36525
            ],
            "documentation": {
              "id": 34344,
              "nodeType": "StructuredDocumentation",
              "src": "2321:126:52",
              "text": " @notice Add a future to the registry\n @param _future the address of the future to add to the registry"
            },
            "functionSelector": "bc97cb18",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34349,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34287,
                  "src": "2511:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "2511:9:52"
              }
            ],
            "name": "addFutureVault",
            "nameLocation": "2461:14:52",
            "overrides": {
              "id": 34348,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2502:8:52"
            },
            "parameters": {
              "id": 34347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34346,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "2484:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34361,
                  "src": "2476:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2476:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2475:17:52"
            },
            "returnParameters": {
              "id": 34351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2521:0:52"
            },
            "scope": 34481,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34379,
            "nodeType": "FunctionDefinition",
            "src": "2747:153:52",
            "nodes": [],
            "body": {
              "id": 34378,
              "nodeType": "Block",
              "src": "2819:81:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34373,
                            "name": "_future",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34364,
                            "src": "2857:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34371,
                            "name": "futureVaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34258,
                            "src": "2837:12:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$31436_storage",
                              "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                            }
                          },
                          "id": 34372,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "remove",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31490,
                          "src": "2837:19:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$31436_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$31436_storage_ptr_$",
                            "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
                          }
                        },
                        "id": 34374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2837:28:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a204552525f4655545552455f524d",
                        "id": 34375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:25:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_626c0d4dcb397f867a112ed478f84e3b1008a51aeafc519a234f0368a520d145",
                          "typeString": "literal_string \"Registry: ERR_FUTURE_RM\""
                        },
                        "value": "Registry: ERR_FUTURE_RM"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_626c0d4dcb397f867a112ed478f84e3b1008a51aeafc519a234f0368a520d145",
                          "typeString": "literal_string \"Registry: ERR_FUTURE_RM\""
                        }
                      ],
                      "id": 34370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2829:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:64:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34377,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:64:52"
                }
              ]
            },
            "baseFunctions": [
              36531
            ],
            "documentation": {
              "id": 34362,
              "nodeType": "StructuredDocumentation",
              "src": "2606:136:52",
              "text": " @notice Remove a future from the registry\n @param _future the address of the future to remove from the registry"
            },
            "functionSelector": "b71c9b32",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34367,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34287,
                  "src": "2809:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "2809:9:52"
              }
            ],
            "name": "removeFutureVault",
            "nameLocation": "2756:17:52",
            "overrides": {
              "id": 34366,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2800:8:52"
            },
            "parameters": {
              "id": 34365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34364,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "2782:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34379,
                  "src": "2774:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2773:17:52"
            },
            "returnParameters": {
              "id": 34369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2819:0:52"
            },
            "scope": 34481,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34394,
            "nodeType": "FunctionDefinition",
            "src": "3102:154:52",
            "nodes": [],
            "body": {
              "id": 34393,
              "nodeType": "Block",
              "src": "3202:54:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34390,
                        "name": "_future",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34382,
                        "src": "3241:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34388,
                        "name": "futureVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34258,
                        "src": "3219:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31436_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 34389,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31517,
                      "src": "3219:21:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31436_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$31436_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 34391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3219:30:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 34387,
                  "id": 34392,
                  "nodeType": "Return",
                  "src": "3212:37:52"
                }
              ]
            },
            "baseFunctions": [
              36545
            ],
            "documentation": {
              "id": 34380,
              "nodeType": "StructuredDocumentation",
              "src": "2906:191:52",
              "text": " @notice Getter to check if a future is registered\n @param _future the address of the future to check the registration of\n @return true if it is, false otherwise"
            },
            "functionSelector": "e3dcc0f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredFutureVault",
            "nameLocation": "3111:23:52",
            "overrides": {
              "id": 34384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3178:8:52"
            },
            "parameters": {
              "id": 34383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34382,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "3152:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34394,
                  "src": "3144:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:31:52"
            },
            "returnParameters": {
              "id": 34387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34394,
                  "src": "3196:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3195:6:52"
            },
            "scope": 34481,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34409,
            "nodeType": "FunctionDefinition",
            "src": "3448:144:52",
            "nodes": [],
            "body": {
              "id": 34408,
              "nodeType": "Block",
              "src": "3545:47:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34405,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34397,
                        "src": "3578:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34403,
                        "name": "futureVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34258,
                        "src": "3562:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31436_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 34404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31559,
                      "src": "3562:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31436_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$31436_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 34406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:23:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34402,
                  "id": 34407,
                  "nodeType": "Return",
                  "src": "3555:30:52"
                }
              ]
            },
            "baseFunctions": [
              36553
            ],
            "documentation": {
              "id": 34395,
              "nodeType": "StructuredDocumentation",
              "src": "3262:181:52",
              "text": " @notice Getter for the future registered at an index\n @param _index the index of the future to return\n @return the address of the corresponding future"
            },
            "functionSelector": "1c93e128",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFutureVaultAt",
            "nameLocation": "3457:16:52",
            "overrides": {
              "id": 34399,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3518:8:52"
            },
            "parameters": {
              "id": 34398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34397,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "3491:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34409,
                  "src": "3483:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3483:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3473:30:52"
            },
            "returnParameters": {
              "id": 34402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34409,
                  "src": "3536:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3536:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3535:9:52"
            },
            "scope": 34481,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34421,
            "nodeType": "FunctionDefinition",
            "src": "3727:114:52",
            "nodes": [],
            "body": {
              "id": 34420,
              "nodeType": "Block",
              "src": "3796:45:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34416,
                        "name": "futureVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34258,
                        "src": "3813:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31436_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 34417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31532,
                      "src": "3813:19:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31436_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$31436_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 34418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:21:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34415,
                  "id": 34419,
                  "nodeType": "Return",
                  "src": "3806:28:52"
                }
              ]
            },
            "baseFunctions": [
              36559
            ],
            "documentation": {
              "id": 34410,
              "nodeType": "StructuredDocumentation",
              "src": "3598:124:52",
              "text": " @notice Getter for number of futureVaults registered\n @return the number of futureVaults registered"
            },
            "functionSelector": "56da7c28",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "futureVaultCount",
            "nameLocation": "3736:16:52",
            "overrides": {
              "id": 34412,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3769:8:52"
            },
            "parameters": {
              "id": 34411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3752:2:52"
            },
            "returnParameters": {
              "id": 34415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34414,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34421,
                  "src": "3787:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3787:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3786:9:52"
            },
            "scope": 34481,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34431,
            "nodeType": "FunctionDefinition",
            "src": "3973:159:52",
            "nodes": [],
            "body": {
              "id": 34430,
              "nodeType": "Block",
              "src": "4090:42:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34428,
                    "name": "futureVaultFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34255,
                    "src": "4107:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34427,
                  "id": 34429,
                  "nodeType": "Return",
                  "src": "4100:25:52"
                }
              ]
            },
            "baseFunctions": [
              36519
            ],
            "documentation": {
              "id": 34422,
              "nodeType": "StructuredDocumentation",
              "src": "3847:121:52",
              "text": " @notice Getter for the future vault's factory address\n @return the address of the tokens factory"
            },
            "functionSelector": "331c8fa3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFutureVaultFactoryAddress",
            "nameLocation": "3982:28:52",
            "overrides": {
              "id": 34424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4051:8:52"
            },
            "parameters": {
              "id": 34423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4010:2:52"
            },
            "returnParameters": {
              "id": 34427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34426,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34431,
                  "src": "4077:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4077:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4076:9:52"
            },
            "scope": 34481,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34466,
            "nodeType": "FunctionDefinition",
            "src": "4340:313:52",
            "nodes": [],
            "body": {
              "id": 34465,
              "nodeType": "Block",
              "src": "4407:246:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34442,
                            "name": "_future",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34436,
                            "src": "4462:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34441,
                          "name": "isRegisteredFutureVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34394,
                          "src": "4438:23:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 34443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4438:32:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a20554e524547495354455245445f465554555245",
                        "id": 34444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4484:31:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a6fabf7d8cd3b0226c27076013e25cc9dd13a6071a3af3a8aeb352efc1657",
                          "typeString": "literal_string \"Registry: UNREGISTERED_FUTURE\""
                        },
                        "value": "Registry: UNREGISTERED_FUTURE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a6fabf7d8cd3b0226c27076013e25cc9dd13a6071a3af3a8aeb352efc1657",
                          "typeString": "literal_string \"Registry: UNREGISTERED_FUTURE\""
                        }
                      ],
                      "id": 34440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4417:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4417:108:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34446,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:108:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 34448,
                            "name": "poolFutureMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34264,
                            "src": "4543:13:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 34450,
                          "indexExpression": {
                            "id": 34449,
                            "name": "_future",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34436,
                            "src": "4557:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4543:22:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 34453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4577:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 34452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4569:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34451,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4569:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4569:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4543:36:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a204552525f504f4f4c5f414444",
                        "id": 34456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4581:24:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a26642524f27b33e31b754fdc2419b28db3554842c4ea180b333e096cf716ad6",
                          "typeString": "literal_string \"Registry: ERR_POOL_ADD\""
                        },
                        "value": "Registry: ERR_POOL_ADD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a26642524f27b33e31b754fdc2419b28db3554842c4ea180b333e096cf716ad6",
                          "typeString": "literal_string \"Registry: ERR_POOL_ADD\""
                        }
                      ],
                      "id": 34447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4535:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4535:71:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34458,
                  "nodeType": "ExpressionStatement",
                  "src": "4535:71:52"
                },
                {
                  "expression": {
                    "id": 34463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 34459,
                        "name": "poolFutureMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34264,
                        "src": "4616:13:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 34461,
                      "indexExpression": {
                        "id": 34460,
                        "name": "_future",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34436,
                        "src": "4630:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4616:22:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34462,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34434,
                      "src": "4641:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4616:30:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34464,
                  "nodeType": "ExpressionStatement",
                  "src": "4616:30:52"
                }
              ]
            },
            "baseFunctions": [
              36566
            ],
            "documentation": {
              "id": 34432,
              "nodeType": "StructuredDocumentation",
              "src": "4155:180:52",
              "text": " @notice Add a pool to the registry\n @param _future the address of the future to add to the registry\n @param _pool the address of deployed PT/IBT pool"
            },
            "functionSelector": "eb511dd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPool",
            "nameLocation": "4349:7:52",
            "overrides": {
              "id": 34438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4398:8:52"
            },
            "parameters": {
              "id": 34437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34434,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "4365:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34466,
                  "src": "4357:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4357:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34436,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "4380:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34466,
                  "src": "4372:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4356:32:52"
            },
            "returnParameters": {
              "id": 34439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4407:0:52"
            },
            "scope": 34481,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34480,
            "nodeType": "FunctionDefinition",
            "src": "4849:121:52",
            "nodes": [],
            "body": {
              "id": 34479,
              "nodeType": "Block",
              "src": "4924:46:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 34475,
                      "name": "poolFutureMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34264,
                      "src": "4941:13:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 34477,
                    "indexExpression": {
                      "id": 34476,
                      "name": "_future",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34469,
                      "src": "4955:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4941:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34474,
                  "id": 34478,
                  "nodeType": "Return",
                  "src": "4934:29:52"
                }
              ]
            },
            "baseFunctions": [
              36573
            ],
            "documentation": {
              "id": 34467,
              "nodeType": "StructuredDocumentation",
              "src": "4659:185:52",
              "text": " @notice Getter for the pool registered with this future\n @param _future the address of the future to return\n @return the address of the corresponding pool"
            },
            "functionSelector": "bbe4f6db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "nameLocation": "4858:7:52",
            "overrides": {
              "id": 34471,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4897:8:52"
            },
            "parameters": {
              "id": 34470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34469,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "4874:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 34480,
                  "src": "4866:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4866:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4865:17:52"
            },
            "returnParameters": {
              "id": 34474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34473,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34480,
                  "src": "4915:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4915:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4914:9:52"
            },
            "scope": 34481,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34242,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25834,
              "src": "426:13:52"
            },
            "id": 34243,
            "nodeType": "InheritanceSpecifier",
            "src": "426:13:52"
          },
          {
            "baseName": {
              "id": 34244,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36580,
              "src": "441:9:52"
            },
            "id": 34245,
            "nodeType": "InheritanceSpecifier",
            "src": "441:9:52"
          }
        ],
        "canonicalName": "Registry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34241,
          "nodeType": "StructuredDocumentation",
          "src": "280:124:52",
          "text": " @title Registry Contract\n @notice Keeps a record of all valid contract addresses currently used in the protocol"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34481,
          36580,
          25834
        ],
        "name": "Registry",
        "nameLocation": "414:8:52",
        "scope": 34482,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 52
}