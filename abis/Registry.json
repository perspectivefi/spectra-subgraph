{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_contractName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_old",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "RegistryUpdate",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "addFutureVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "futureVaultCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFutureVaultAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFutureVaultFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getZapDepositor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "isRegisteredFutureVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_future",
          "type": "address"
        }
      ],
      "name": "removeFutureVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newFutureVaultFactory",
          "type": "address"
        }
      ],
      "name": "setFutureVaultFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zap",
          "type": "address"
        }
      ],
      "name": "setZapDepositor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b610096565b600180546001600160a01b031916905561004381610046602090811b6106dd17901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a7f806100a56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a0bc97db11610097578063e30c397811610066578063e30c397814610204578063e3dcc0f814610215578063eb511dd414610238578063f2fde38b1461024b57600080fd5b8063a0bc97db1461019f578063b71c9b32146101b2578063bbe4f6db146101c5578063bc97cb18146101f157600080fd5b8063715018a6116100d3578063715018a61461016957806379ba5097146101735780638d722c051461017b5780638da5cb5b1461018e57600080fd5b80630e5f99c5146101055780631c93e1281461012f578063331c8fa31461014257806356da7c2814610153575b600080fd5b6006546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61011261013d366004610975565b61025e565b6002546001600160a01b0316610112565b61015b610271565b604051908152602001610126565b610171610282565b005b610171610296565b6101716101893660046109aa565b610315565b6000546001600160a01b0316610112565b6101716101ad3660046109aa565b61042a565b6101716101c03660046109aa565b6104bb565b6101126101d33660046109aa565b6001600160a01b039081166000908152600560205260409020541690565b6101716101ff3660046109aa565b61051a565b6001546001600160a01b0316610112565b6102286102233660046109aa565b610579565b6040519015158152602001610126565b6101716102463660046109c5565b610586565b6101716102593660046109aa565b61066c565b600061026b60038361072d565b92915050565b600061027d6003610740565b905090565b61028a61074a565b61029460006107a4565b565b60015433906001600160a01b031681146103095760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b610312816107a4565b50565b61031d61074a565b6001600160a01b0381166103995760405162461bcd60e51b815260206004820152603860248201527f52656769737472793a2043616e6e6f7420736574206675747572655661756c7460448201527f20666163746f727920746f207a65726f206164647265737300000000000000006064820152608401610300565b600254604080516060808252601290820152714675747572655661756c74466163746f727960701b60808201526001600160a01b03928316602082015291831682820152517fa3e905c3f8091e43e1c20e325887a9596e786aefca993058675aeed52d516dce9181900360a00190a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b61043261074a565b6001600160a01b0381166104995760405162461bcd60e51b815260206004820152602860248201527f52656769737472793a2043616e6e6f7420736574207a617020746f207a65726f604482015267206164647265737360c01b6064820152608401610300565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6104c361074a565b6104ce6003826107bd565b6103125760405162461bcd60e51b815260206004820152601760248201527f52656769737472793a204552525f4655545552455f524d0000000000000000006044820152606401610300565b61052261074a565b61052d6003826107d2565b6103125760405162461bcd60e51b815260206004820152601860248201527f52656769737472793a204552525f4655545552455f41444400000000000000006044820152606401610300565b600061026b6003836107e7565b61058f81610579565b6105db5760405162461bcd60e51b815260206004820152601d60248201527f52656769737472793a20554e524547495354455245445f4655545552450000006044820152606401610300565b6001600160a01b03818116600090815260056020526040902054161561063c5760405162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c9e4e8811549497d413d3d317d0511160521b6044820152606401610300565b6001600160a01b0390811660009081526005602052604090208054919092166001600160a01b0319909116179055565b61067461074a565b600180546001600160a01b0383166001600160a01b031990911681179091556106a56000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006107398383610809565b9392505050565b600061026b825490565b6000546001600160a01b031633146102945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610300565b600180546001600160a01b0319169055610312816106dd565b6000610739836001600160a01b038416610833565b6000610739836001600160a01b038416610926565b6001600160a01b03811660009081526001830160205260408120541515610739565b6000826000018281548110610820576108206109f8565b9060005260206000200154905092915050565b6000818152600183016020526040812054801561091c576000610857600183610a0e565b855490915060009061086b90600190610a0e565b90508181146108d057600086600001828154811061088b5761088b6109f8565b90600052602060002001549050808760000184815481106108ae576108ae6109f8565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806108e1576108e1610a33565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061026b565b600091505061026b565b600081815260018301602052604081205461096d5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561026b565b50600061026b565b60006020828403121561098757600080fd5b5035919050565b80356001600160a01b03811681146109a557600080fd5b919050565b6000602082840312156109bc57600080fd5b6107398261098e565b600080604083850312156109d857600080fd5b6109e18361098e565b91506109ef6020840161098e565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600082821015610a2e57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c99243a4519ebf67e3f7af1e152a33a4e4b4f53690841add898d1e91a063ba0c64736f6c634300080d0033",
    "sourceMap": "467:4374:71:-:0;;;1017:26;;;;;;;;;-1:-1:-1;936:32:43;719:10:52;936:18:43;:32::i;:::-;467:4374:71;;1501:153:44;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:44;;;1613:34;1638:8;1613:24;;;;;;;:34;;:::i;:::-;1501:153;:::o;2433:187:43:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:43;;;-1:-1:-1;;;;;;2541:17:43;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;467:4374:71:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063a0bc97db11610097578063e30c397811610066578063e30c397814610204578063e3dcc0f814610215578063eb511dd414610238578063f2fde38b1461024b57600080fd5b8063a0bc97db1461019f578063b71c9b32146101b2578063bbe4f6db146101c5578063bc97cb18146101f157600080fd5b8063715018a6116100d3578063715018a61461016957806379ba5097146101735780638d722c051461017b5780638da5cb5b1461018e57600080fd5b80630e5f99c5146101055780631c93e1281461012f578063331c8fa31461014257806356da7c2814610153575b600080fd5b6006546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61011261013d366004610975565b61025e565b6002546001600160a01b0316610112565b61015b610271565b604051908152602001610126565b610171610282565b005b610171610296565b6101716101893660046109aa565b610315565b6000546001600160a01b0316610112565b6101716101ad3660046109aa565b61042a565b6101716101c03660046109aa565b6104bb565b6101126101d33660046109aa565b6001600160a01b039081166000908152600560205260409020541690565b6101716101ff3660046109aa565b61051a565b6001546001600160a01b0316610112565b6102286102233660046109aa565b610579565b6040519015158152602001610126565b6101716102463660046109c5565b610586565b6101716102593660046109aa565b61066c565b600061026b60038361072d565b92915050565b600061027d6003610740565b905090565b61028a61074a565b61029460006107a4565b565b60015433906001600160a01b031681146103095760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b610312816107a4565b50565b61031d61074a565b6001600160a01b0381166103995760405162461bcd60e51b815260206004820152603860248201527f52656769737472793a2043616e6e6f7420736574206675747572655661756c7460448201527f20666163746f727920746f207a65726f206164647265737300000000000000006064820152608401610300565b600254604080516060808252601290820152714675747572655661756c74466163746f727960701b60808201526001600160a01b03928316602082015291831682820152517fa3e905c3f8091e43e1c20e325887a9596e786aefca993058675aeed52d516dce9181900360a00190a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b61043261074a565b6001600160a01b0381166104995760405162461bcd60e51b815260206004820152602860248201527f52656769737472793a2043616e6e6f7420736574207a617020746f207a65726f604482015267206164647265737360c01b6064820152608401610300565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6104c361074a565b6104ce6003826107bd565b6103125760405162461bcd60e51b815260206004820152601760248201527f52656769737472793a204552525f4655545552455f524d0000000000000000006044820152606401610300565b61052261074a565b61052d6003826107d2565b6103125760405162461bcd60e51b815260206004820152601860248201527f52656769737472793a204552525f4655545552455f41444400000000000000006044820152606401610300565b600061026b6003836107e7565b61058f81610579565b6105db5760405162461bcd60e51b815260206004820152601d60248201527f52656769737472793a20554e524547495354455245445f4655545552450000006044820152606401610300565b6001600160a01b03818116600090815260056020526040902054161561063c5760405162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c9e4e8811549497d413d3d317d0511160521b6044820152606401610300565b6001600160a01b0390811660009081526005602052604090208054919092166001600160a01b0319909116179055565b61067461074a565b600180546001600160a01b0383166001600160a01b031990911681179091556106a56000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006107398383610809565b9392505050565b600061026b825490565b6000546001600160a01b031633146102945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610300565b600180546001600160a01b0319169055610312816106dd565b6000610739836001600160a01b038416610833565b6000610739836001600160a01b038416610926565b6001600160a01b03811660009081526001830160205260408120541515610739565b6000826000018281548110610820576108206109f8565b9060005260206000200154905092915050565b6000818152600183016020526040812054801561091c576000610857600183610a0e565b855490915060009061086b90600190610a0e565b90508181146108d057600086600001828154811061088b5761088b6109f8565b90600052602060002001549050808760000184815481106108ae576108ae6109f8565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806108e1576108e1610a33565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061026b565b600091505061026b565b600081815260018301602052604081205461096d5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561026b565b50600061026b565b60006020828403121561098757600080fd5b5035919050565b80356001600160a01b03811681146109a557600080fd5b919050565b6000602082840312156109bc57600080fd5b6107398261098e565b600080604083850312156109d857600080fd5b6109e18361098e565b91506109ef6020840161098e565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600082821015610a2e57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c99243a4519ebf67e3f7af1e152a33a4e4b4f53690841add898d1e91a063ba0c64736f6c634300080d0033",
    "sourceMap": "467:4374:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1425:95;1501:12;;-1:-1:-1;;;;;1501:12:71;1425:95;;;-1:-1:-1;;;;;178:32:99;;;160:51;;148:2;133:18;1425:95:71;;;;;;;;3317:144;;;;;;:::i;:::-;;:::i;3842:159::-;3976:18;;-1:-1:-1;;;;;3976:18:71;3842:159;;3596:114;;;:::i;:::-;;;553:25:99;;;541:2;526:18;3596:114:71;407:177:99;1831:101:43;;;:::i;:::-;;1734:206:44;;;:::i;1690:468:71:-;;;;;;:::i;:::-;;:::i;1201:85:43:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:43;1201:85;;1158:197:71;;;;;;:::i;:::-;;:::i;2603:166::-;;;;;;:::i;:::-;;:::i;4718:121::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4810:22:71;;;4784:7;4810:22;;;:13;:22;;;;;;;;4718:121;2295:161;;;;;;:::i;:::-;;:::i;847:99:44:-;926:13;;-1:-1:-1;;;;;926:13:44;847:99;;2971:154:71;;;;;;:::i;:::-;;:::i;:::-;;;1123:14:99;;1116:22;1098:41;;1086:2;1071:18;2971:154:71;958:187:99;4209:313:71;;;;;;:::i;:::-;;:::i;1139:178:44:-;;;;;;:::i;:::-;;:::i;3317:144:71:-;3405:7;3431:23;:12;3447:6;3431:15;:23::i;:::-;3424:30;3317:144;-1:-1:-1;;3317:144:71:o;3596:114::-;3656:7;3682:21;:12;:19;:21::i;:::-;3675:28;;3596:114;:::o;1831:101:43:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1734:206:44:-;926:13;;719:10:52;;-1:-1:-1;;;;;926:13:44;1827:24;;1819:78;;;;-1:-1:-1;;;1819:78:44;;1617:2:99;1819:78:44;;;1599:21:99;1656:2;1636:18;;;1629:30;1695:34;1675:18;;;1668:62;-1:-1:-1;;;1746:18:99;;;1739:39;1795:19;;1819:78:44;;;;;;;;;1907:26;1926:6;1907:18;:26::i;:::-;1770:170;1734:206::o;1690:468:71:-;1795:13;:11;:13::i;:::-;-1:-1:-1;;;;;1839:36:71;;1818:139;;;;-1:-1:-1;;;1818:139:71;;2027:2:99;1818:139:71;;;2009:21:99;2066:2;2046:18;;;2039:30;2105:34;2085:18;;;2078:62;2176:26;2156:18;;;2149:54;2220:19;;1818:139:71;1825:420:99;1818:139:71;2034:18;;1972:126;;;2508:2:99;2490:21;;;2547:2;2527:18;;;2520:30;-1:-1:-1;;;2581:3:99;2566:19;;2559:49;-1:-1:-1;;;;;2034:18:71;;;2713:4:99;2698:20;;2691:45;2772:15;;;2752:18;;;2745:43;1972:126:71;;;;;;2640:3:99;1972:126:71;;;2108:18;:43;;-1:-1:-1;;;;;;2108:43:71;-1:-1:-1;;;;;2108:43:71;;;;;;;;;;1690:468::o;1158:197::-;1225:13;:11;:13::i;:::-;-1:-1:-1;;;;;1256:18:71;;1248:71;;;;-1:-1:-1;;;1248:71:71;;3001:2:99;1248:71:71;;;2983:21:99;3040:2;3020:18;;;3013:30;3079:34;3059:18;;;3052:62;-1:-1:-1;;;3130:18:99;;;3123:38;3178:19;;1248:71:71;2799:404:99;1248:71:71;1329:12;:19;;-1:-1:-1;;;;;;1329:19:71;-1:-1:-1;;;;;1329:19:71;;;;;;;;;;1158:197::o;2603:166::-;2675:13;:11;:13::i;:::-;2706:28;:12;2726:7;2706:19;:28::i;:::-;2698:64;;;;-1:-1:-1;;;2698:64:71;;3410:2:99;2698:64:71;;;3392:21:99;3449:2;3429:18;;;3422:30;3488:25;3468:18;;;3461:53;3531:18;;2698:64:71;3208:347:99;2295:161:71;2364:13;:11;:13::i;:::-;2395:25;:12;2412:7;2395:16;:25::i;:::-;2387:62;;;;-1:-1:-1;;;2387:62:71;;3762:2:99;2387:62:71;;;3744:21:99;3801:2;3781:18;;;3774:30;3840:26;3820:18;;;3813:54;3884:18;;2387:62:71;3560:348:99;2971:154:71;3065:4;3088:30;:12;3110:7;3088:21;:30::i;4209:313::-;4307:32;4331:7;4307:23;:32::i;:::-;4286:108;;;;-1:-1:-1;;;4286:108:71;;4115:2:99;4286:108:71;;;4097:21:99;4154:2;4134:18;;;4127:30;4193:31;4173:18;;;4166:59;4242:18;;4286:108:71;3913:353:99;4286:108:71;-1:-1:-1;;;;;4412:22:71;;;4446:1;4412:22;;;:13;:22;;;;;;;:36;4404:71;;;;-1:-1:-1;;;4404:71:71;;4473:2:99;4404:71:71;;;4455:21:99;4512:2;4492:18;;;4485:30;-1:-1:-1;;;4531:18:99;;;4524:52;4593:18;;4404:71:71;4271:346:99;4404:71:71;-1:-1:-1;;;;;4485:22:71;;;;;;;:13;:22;;;;;:30;;;;;;-1:-1:-1;;;;;;4485:30:71;;;;;;4209:313::o;1139:178:44:-;1094:13:43;:11;:13::i;:::-;1228::44::1;:24:::0;;-1:-1:-1;;;;;1228:24:44;::::1;-1:-1:-1::0;;;;;;1228:24:44;;::::1;::::0;::::1;::::0;;;1292:7:::1;1247::43::0;1273:6;-1:-1:-1;;;;;1273:6:43;;1201:85;1292:7:44::1;-1:-1:-1::0;;;;;1267:43:44::1;;;;;;;;;;;1139:178:::0;:::o;2433:187:43:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:43;;;-1:-1:-1;;;;;;2541:17:43;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;9566:156:42:-;9640:7;9690:22;9694:3;9706:5;9690:3;:22::i;:::-;9682:31;9566:156;-1:-1:-1;;;9566:156:42:o;9109:115::-;9172:7;9198:19;9206:3;4548:18;;4466:107;1359:130:43;1247:7;1273:6;-1:-1:-1;;;;;1273:6:43;719:10:52;1422:23:43;1414:68;;;;-1:-1:-1;;;1414:68:43;;4824:2:99;1414:68:43;;;4806:21:99;;;4843:18;;;4836:30;4902:34;4882:18;;;4875:62;4954:18;;1414:68:43;4622:356:99;1501:153:44;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:44;;;1613:34;1638:8;1613:24;:34::i;8626:156:42:-;8699:4;8722:53;8730:3;-1:-1:-1;;;;;8750:23:42;;8722:7;:53::i;8308:150::-;8378:4;8401:50;8406:3;-1:-1:-1;;;;;8426:23:42;;8401:4;:50::i;8863:165::-;-1:-1:-1;;;;;8996:23:42;;8943:4;4354:19;;;:12;;;:19;;;;;;:24;;8966:55;4258:127;4915:118;4982:7;5008:3;:11;;5020:5;5008:18;;;;;;;;:::i;:::-;;;;;;;;;5001:25;;4915:118;;;;:::o;2789:1388::-;2855:4;2992:19;;;:12;;;:19;;;;;;3026:15;;3022:1149;;3395:21;3419:14;3432:1;3419:10;:14;:::i;:::-;3467:18;;3395:38;;-1:-1:-1;3447:17:42;;3467:22;;3488:1;;3467:22;:::i;:::-;3447:42;;3521:13;3508:9;:26;3504:398;;3554:17;3574:3;:11;;3586:9;3574:22;;;;;;;;:::i;:::-;;;;;;;;;3554:42;;3725:9;3696:3;:11;;3708:13;3696:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3808:23;;;:12;;;:23;;;;;:36;;;3504:398;3980:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4072:3;:12;;:19;4085:5;4072:19;;;;;;;;;;;4065:26;;;4113:4;4106:11;;;;;;;3022:1149;4155:5;4148:12;;;;;2217:404;2280:4;4354:19;;;:12;;;:19;;;;;;2296:319;;-1:-1:-1;2338:23:42;;;;;;;;:11;:23;;;;;;;;;;;;;2518:18;;2496:19;;;:12;;;:19;;;;;;:40;;;;2550:11;;2296:319;-1:-1:-1;2599:5:42;2592:12;;222:180:99;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:99;;222:180;-1:-1:-1;222:180:99:o;589:173::-;657:20;;-1:-1:-1;;;;;706:31:99;;696:42;;686:70;;752:1;749;742:12;686:70;589:173;;;:::o;767:186::-;826:6;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;918:29;937:9;918:29;:::i;1150:260::-;1218:6;1226;1279:2;1267:9;1258:7;1254:23;1250:32;1247:52;;;1295:1;1292;1285:12;1247:52;1318:29;1337:9;1318:29;:::i;:::-;1308:39;;1366:38;1400:2;1389:9;1385:18;1366:38;:::i;:::-;1356:48;;1150:260;;;;;:::o;4983:127::-;5044:10;5039:3;5035:20;5032:1;5025:31;5075:4;5072:1;5065:15;5099:4;5096:1;5089:15;5115:222;5155:4;5183:1;5180;5177:8;5174:131;;;5227:10;5222:3;5218:20;5215:1;5208:31;5262:4;5259:1;5252:15;5290:4;5287:1;5280:15;5174:131;-1:-1:-1;5322:9:99;;5115:222::o;5342:127::-;5403:10;5398:3;5394:20;5391:1;5384:31;5434:4;5431:1;5424:15;5458:4;5455:1;5448:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addFutureVault(address)": "bc97cb18",
    "addPool(address,address)": "eb511dd4",
    "futureVaultCount()": "56da7c28",
    "getFutureVaultAt(uint256)": "1c93e128",
    "getFutureVaultFactoryAddress()": "331c8fa3",
    "getPool(address)": "bbe4f6db",
    "getZapDepositor()": "0e5f99c5",
    "isRegisteredFutureVault(address)": "e3dcc0f8",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "removeFutureVault(address)": "b71c9b32",
    "renounceOwnership()": "715018a6",
    "setFutureVaultFactory(address)": "8d722c05",
    "setZapDepositor(address)": "a0bc97db",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_contractName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"RegistryUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"addFutureVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futureVaultCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFutureVaultAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFutureVaultFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZapDepositor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"isRegisteredFutureVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_future\",\"type\":\"address\"}],\"name\":\"removeFutureVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFutureVaultFactory\",\"type\":\"address\"}],\"name\":\"setFutureVaultFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zap\",\"type\":\"address\"}],\"name\":\"setZapDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addFutureVault(address)\":{\"params\":{\"_future\":\"the address of the future to add to the registry\"}},\"addPool(address,address)\":{\"params\":{\"_future\":\"the address of the future to add to the registry\",\"_pool\":\"the address of deployed PT/IBT pool\"}},\"futureVaultCount()\":{\"returns\":{\"_0\":\"the number of futureVaults registered\"}},\"getFutureVaultAt(uint256)\":{\"params\":{\"_index\":\"the index of the future to return\"},\"returns\":{\"_0\":\"the address of the corresponding future\"}},\"getFutureVaultFactoryAddress()\":{\"returns\":{\"_0\":\"the address of the tokens factory\"}},\"getPool(address)\":{\"params\":{\"_future\":\"the address of the future to return\"},\"returns\":{\"_0\":\"the address of the corresponding pool\"}},\"isRegisteredFutureVault(address)\":{\"params\":{\"_future\":\"the address of the future to check the registration of\"},\"returns\":{\"_0\":\"true if it is, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"removeFutureVault(address)\":{\"params\":{\"_future\":\"the address of the future to remove from the registry\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFutureVaultFactory(address)\":{\"params\":{\"_newFutureVaultFactory\":\"the address of the token factory\"}},\"setZapDepositor(address)\":{\"params\":{\"_zap\":\"address of zap depositor\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"title\":\"Registry Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addFutureVault(address)\":{\"notice\":\"Add a future to the registry\"},\"addPool(address,address)\":{\"notice\":\"Add a pool to the registry\"},\"constructor\":{\"notice\":\"Constructor of the contract\"},\"futureVaultCount()\":{\"notice\":\"Getter for number of futureVaults registered\"},\"getFutureVaultAt(uint256)\":{\"notice\":\"Getter for the future registered at an index\"},\"getFutureVaultFactoryAddress()\":{\"notice\":\"Getter for the future vault's factory address\"},\"getPool(address)\":{\"notice\":\"Getter for the pool registered with this future\"},\"getZapDepositor()\":{\"notice\":\"get the address of zap depositor\"},\"isRegisteredFutureVault(address)\":{\"notice\":\"Getter to check if a future is registered\"},\"removeFutureVault(address)\":{\"notice\":\"Remove a future from the registry\"},\"setFutureVaultFactory(address)\":{\"notice\":\"Setter for the future vault factory address\"},\"setZapDepositor(address)\":{\"notice\":\"set zap depositor\"}},\"notice\":\"Keeps a record of all valid contract addresses currently used in the protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Registry.sol\":\"Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/\",\":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/\",\":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/\",\":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/\",\":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/\",\":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol\":{\"keccak256\":\"0x5c22b3800033bada8a582efcb05c6ff1c18e904e0001ed8fc902fc93662d91fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dbe206a04f5093f5f3ae12ba1f5a6bbcd93fa5d9363662f821a9681b0cf5e55\",\"dweb:/ipfs/QmXbcEbWfNFhLfkFcGLZGs2D7VLvtnjjvyqVC9zqH8WQgW\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x28f1a545faf59421a03601dbc35a292cbf2321c3abd121feb64dda5710a9a055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd3c6b31eabee3270cf57116a7c4674688b6b433169e85ce48de22c9bd7f218b\",\"dweb:/ipfs/QmRcULPrt9BQphN9m2cSMt9shKA9nfa7vywmKMmm9x5i1k\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb210cdef017f9813af368e17ea1573bc26094dd8dba8b5db8bec4cc90883d0a\",\"dweb:/ipfs/QmdixQwckiNVVWHaJD9ps5ALWsHkZGRAePkuUPw1ZhhJhM\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/Registry.sol\":{\"keccak256\":\"0xaef4a5f3f14cad76ed890d1e4bdb30bf6dcd7b129a7545cda85793064c83f8f1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27d07b6162097f6c87e1ca11fa86b4609be758417d1e9fb29fbce4343c26db50\",\"dweb:/ipfs/QmeaJK6oDrofsxoDjhrP83AsjAkswUhDHLtfASd7bWhhcW\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x41384cee7cd390107b94448c6f3d985a392fff762843b09cc9afc731f30079a5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6e92c1971200f1836d55ad644d65e97e330271525b69bf0d81063256f041fd61\",\"dweb:/ipfs/QmXao4uATA85kurzoP4UGjDjBSbZh57esfo7W7frnFHcpD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_contractName",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_old",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_new",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RegistryUpdate",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFutureVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPool"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "futureVaultCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFutureVaultAt",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFutureVaultFactoryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getZapDepositor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegisteredFutureVault",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_future",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFutureVault"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFutureVaultFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFutureVaultFactory"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_zap",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setZapDepositor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "addFutureVault(address)": {
            "params": {
              "_future": "the address of the future to add to the registry"
            }
          },
          "addPool(address,address)": {
            "params": {
              "_future": "the address of the future to add to the registry",
              "_pool": "the address of deployed PT/IBT pool"
            }
          },
          "futureVaultCount()": {
            "returns": {
              "_0": "the number of futureVaults registered"
            }
          },
          "getFutureVaultAt(uint256)": {
            "params": {
              "_index": "the index of the future to return"
            },
            "returns": {
              "_0": "the address of the corresponding future"
            }
          },
          "getFutureVaultFactoryAddress()": {
            "returns": {
              "_0": "the address of the tokens factory"
            }
          },
          "getPool(address)": {
            "params": {
              "_future": "the address of the future to return"
            },
            "returns": {
              "_0": "the address of the corresponding pool"
            }
          },
          "isRegisteredFutureVault(address)": {
            "params": {
              "_future": "the address of the future to check the registration of"
            },
            "returns": {
              "_0": "true if it is, false otherwise"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "removeFutureVault(address)": {
            "params": {
              "_future": "the address of the future to remove from the registry"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setFutureVaultFactory(address)": {
            "params": {
              "_newFutureVaultFactory": "the address of the token factory"
            }
          },
          "setZapDepositor(address)": {
            "params": {
              "_zap": "address of zap depositor"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addFutureVault(address)": {
            "notice": "Add a future to the registry"
          },
          "addPool(address,address)": {
            "notice": "Add a pool to the registry"
          },
          "constructor": {
            "notice": "Constructor of the contract"
          },
          "futureVaultCount()": {
            "notice": "Getter for number of futureVaults registered"
          },
          "getFutureVaultAt(uint256)": {
            "notice": "Getter for the future registered at an index"
          },
          "getFutureVaultFactoryAddress()": {
            "notice": "Getter for the future vault's factory address"
          },
          "getPool(address)": {
            "notice": "Getter for the pool registered with this future"
          },
          "getZapDepositor()": {
            "notice": "get the address of zap depositor"
          },
          "isRegisteredFutureVault(address)": {
            "notice": "Getter to check if a future is registered"
          },
          "removeFutureVault(address)": {
            "notice": "Remove a future from the registry"
          },
          "setFutureVaultFactory(address)": {
            "notice": "Setter for the future vault factory address"
          },
          "setZapDepositor(address)": {
            "notice": "set zap depositor"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/",
        ":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/",
        ":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/",
        ":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/",
        ":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/",
        ":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Registry.sol": "Registry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol": {
        "keccak256": "0x5c22b3800033bada8a582efcb05c6ff1c18e904e0001ed8fc902fc93662d91fc",
        "urls": [
          "bzz-raw://3dbe206a04f5093f5f3ae12ba1f5a6bbcd93fa5d9363662f821a9681b0cf5e55",
          "dweb:/ipfs/QmXbcEbWfNFhLfkFcGLZGs2D7VLvtnjjvyqVC9zqH8WQgW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x28f1a545faf59421a03601dbc35a292cbf2321c3abd121feb64dda5710a9a055",
        "urls": [
          "bzz-raw://bd3c6b31eabee3270cf57116a7c4674688b6b433169e85ce48de22c9bd7f218b",
          "dweb:/ipfs/QmRcULPrt9BQphN9m2cSMt9shKA9nfa7vywmKMmm9x5i1k"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b",
        "urls": [
          "bzz-raw://fb210cdef017f9813af368e17ea1573bc26094dd8dba8b5db8bec4cc90883d0a",
          "dweb:/ipfs/QmdixQwckiNVVWHaJD9ps5ALWsHkZGRAePkuUPw1ZhhJhM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/Registry.sol": {
        "keccak256": "0xaef4a5f3f14cad76ed890d1e4bdb30bf6dcd7b129a7545cda85793064c83f8f1",
        "urls": [
          "bzz-raw://27d07b6162097f6c87e1ca11fa86b4609be758417d1e9fb29fbce4343c26db50",
          "dweb:/ipfs/QmeaJK6oDrofsxoDjhrP83AsjAkswUhDHLtfASd7bWhhcW"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0x41384cee7cd390107b94448c6f3d985a392fff762843b09cc9afc731f30079a5",
        "urls": [
          "bzz-raw://6e92c1971200f1836d55ad644d65e97e330271525b69bf0d81063256f041fd61",
          "dweb:/ipfs/QmXao4uATA85kurzoP4UGjDjBSbZh57esfo7W7frnFHcpD"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Registry.sol",
    "id": 36974,
    "exportedSymbols": {
      "Context": [
        33443
      ],
      "EnumerableMapUpgradeable": [
        31751
      ],
      "EnumerableSetUpgradeable": [
        32364
      ],
      "IRegistry": [
        39223
      ],
      "Ownable": [
        32477
      ],
      "Ownable2Step": [
        32560
      ],
      "Registry": [
        36973
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4804:71",
    "nodes": [
      {
        "id": 36724,
        "nodeType": "PragmaDirective",
        "src": "38:23:71",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 36725,
        "nodeType": "ImportDirective",
        "src": "63:65:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol",
        "file": "openzeppelin-utils/structs/EnumerableSetUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36974,
        "sourceUnit": 32365,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36726,
        "nodeType": "ImportDirective",
        "src": "129:65:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol",
        "file": "openzeppelin-utils/structs/EnumerableMapUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36974,
        "sourceUnit": 31752,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36727,
        "nodeType": "ImportDirective",
        "src": "195:56:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "openzeppelin-contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36974,
        "sourceUnit": 32561,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36728,
        "nodeType": "ImportDirective",
        "src": "252:51:71",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36974,
        "sourceUnit": 32478,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36729,
        "nodeType": "ImportDirective",
        "src": "304:36:71",
        "nodes": [],
        "absolutePath": "src/interfaces/IRegistry.sol",
        "file": "./interfaces/IRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36974,
        "sourceUnit": 39224,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36973,
        "nodeType": "ContractDefinition",
        "src": "467:4374:71",
        "nodes": [
          {
            "id": 36738,
            "nodeType": "UsingForDirective",
            "src": "518:71:71",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 36735,
              "name": "EnumerableSetUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32364,
              "src": "524:24:71"
            },
            "typeName": {
              "id": 36737,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36736,
                "name": "EnumerableSetUpgradeable.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32077,
                "src": "553:35:71"
              },
              "referencedDeclaration": 32077,
              "src": "553:35:71",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$32077_storage_ptr",
                "typeString": "struct EnumerableSetUpgradeable.AddressSet"
              }
            }
          },
          {
            "id": 36742,
            "nodeType": "UsingForDirective",
            "src": "594:77:71",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 36739,
              "name": "EnumerableMapUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31751,
              "src": "600:24:71"
            },
            "typeName": {
              "id": 36741,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36740,
                "name": "EnumerableMapUpgradeable.UintToAddressMap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31082,
                "src": "629:41:71"
              },
              "referencedDeclaration": 31082,
              "src": "629:41:71",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$31082_storage_ptr",
                "typeString": "struct EnumerableMapUpgradeable.UintToAddressMap"
              }
            }
          },
          {
            "id": 36744,
            "nodeType": "VariableDeclaration",
            "src": "697:34:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "futureVaultFactory",
            "nameLocation": "713:18:71",
            "scope": 36973,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36743,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:71",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 36747,
            "nodeType": "VariableDeclaration",
            "src": "737:56:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "futureVaults",
            "nameLocation": "781:12:71",
            "scope": 36973,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$32077_storage",
              "typeString": "struct EnumerableSetUpgradeable.AddressSet"
            },
            "typeName": {
              "id": 36746,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36745,
                "name": "EnumerableSetUpgradeable.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32077,
                "src": "737:35:71"
              },
              "referencedDeclaration": 32077,
              "src": "737:35:71",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$32077_storage_ptr",
                "typeString": "struct EnumerableSetUpgradeable.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "id": 36751,
            "nodeType": "VariableDeclaration",
            "src": "799:49:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "poolFutureMap",
            "nameLocation": "835:13:71",
            "scope": 36973,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 36750,
              "keyType": {
                "id": 36748,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "807:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "799:27:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 36749,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "818:7:71",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 36753,
            "nodeType": "VariableDeclaration",
            "src": "854:20:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "zapDepositor",
            "nameLocation": "862:12:71",
            "scope": 36973,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36752,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "854:7:71",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 36761,
            "nodeType": "EventDefinition",
            "src": "881:71:71",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a3e905c3f8091e43e1c20e325887a9596e786aefca993058675aeed52d516dce",
            "name": "RegistryUpdate",
            "nameLocation": "887:14:71",
            "parameters": {
              "id": 36760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36755,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_contractName",
                  "nameLocation": "909:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36761,
                  "src": "902:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36754,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36757,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_old",
                  "nameLocation": "932:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36761,
                  "src": "924:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36759,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_new",
                  "nameLocation": "946:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36761,
                  "src": "938:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:50:71"
            }
          },
          {
            "id": 36768,
            "nodeType": "FunctionDefinition",
            "src": "1017:26:71",
            "nodes": [],
            "body": {
              "id": 36767,
              "nodeType": "Block",
              "src": "1041:2:71",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 36762,
              "nodeType": "StructuredDocumentation",
              "src": "958:54:71",
              "text": " @notice Constructor of the contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 36765,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 36764,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32477,
                  "src": "1031:7:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "1031:9:71"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 36763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:2:71"
            },
            "returnParameters": {
              "id": 36766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:71"
            },
            "scope": 36973,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36793,
            "nodeType": "FunctionDefinition",
            "src": "1158:197:71",
            "nodes": [],
            "body": {
              "id": 36792,
              "nodeType": "Block",
              "src": "1215:140:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36775,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32419,
                      "src": "1225:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:13:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36777,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:13:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36779,
                          "name": "_zap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36771,
                          "src": "1256:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1272:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1264:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36780,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1264:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1264:10:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1256:18:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a2043616e6e6f7420736574207a617020746f207a65726f2061646472657373",
                        "id": 36785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1276:42:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a9be8fa80f937bed5858a57703dcf17b1c7032ae62512cd3d483cf37ea3e081",
                          "typeString": "literal_string \"Registry: Cannot set zap to zero address\""
                        },
                        "value": "Registry: Cannot set zap to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a9be8fa80f937bed5858a57703dcf17b1c7032ae62512cd3d483cf37ea3e081",
                          "typeString": "literal_string \"Registry: Cannot set zap to zero address\""
                        }
                      ],
                      "id": 36778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1248:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:71:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36787,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:71:71"
                },
                {
                  "expression": {
                    "id": 36790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36788,
                      "name": "zapDepositor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36753,
                      "src": "1329:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36789,
                      "name": "_zap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36771,
                      "src": "1344:4:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1329:19:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36791,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:19:71"
                }
              ]
            },
            "baseFunctions": [
              39180
            ],
            "documentation": {
              "id": 36769,
              "nodeType": "StructuredDocumentation",
              "src": "1065:88:71",
              "text": " @notice set zap depositor\n @param _zap address of zap depositor"
            },
            "functionSelector": "a0bc97db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setZapDepositor",
            "nameLocation": "1167:15:71",
            "overrides": {
              "id": 36773,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1206:8:71"
            },
            "parameters": {
              "id": 36772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36771,
                  "mutability": "mutable",
                  "name": "_zap",
                  "nameLocation": "1191:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36793,
                  "src": "1183:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:14:71"
            },
            "returnParameters": {
              "id": 36774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:0:71"
            },
            "scope": 36973,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36802,
            "nodeType": "FunctionDefinition",
            "src": "1425:95:71",
            "nodes": [],
            "body": {
              "id": 36801,
              "nodeType": "Block",
              "src": "1484:36:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36799,
                    "name": "zapDepositor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36753,
                    "src": "1501:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 36798,
                  "id": 36800,
                  "nodeType": "Return",
                  "src": "1494:19:71"
                }
              ]
            },
            "baseFunctions": [
              39222
            ],
            "documentation": {
              "id": 36794,
              "nodeType": "StructuredDocumentation",
              "src": "1361:59:71",
              "text": " @notice get the address of zap depositor"
            },
            "functionSelector": "0e5f99c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getZapDepositor",
            "nameLocation": "1434:15:71",
            "parameters": {
              "id": 36795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:71"
            },
            "returnParameters": {
              "id": 36798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36802,
                  "src": "1475:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1474:9:71"
            },
            "scope": 36973,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36833,
            "nodeType": "FunctionDefinition",
            "src": "1690:468:71",
            "nodes": [],
            "body": {
              "id": 36832,
              "nodeType": "Block",
              "src": "1785:373:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36809,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32419,
                      "src": "1795:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:13:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36811,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:13:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36813,
                          "name": "_newFutureVaultFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36805,
                          "src": "1839:22:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1873:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1865:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36814,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1865:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1865:10:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1839:36:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a2043616e6e6f7420736574206675747572655661756c7420666163746f727920746f207a65726f2061646472657373",
                        "id": 36819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1889:58:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02b5f9411faa5eeab5884bf688a72c654923c67e3cf4c13ee25b3bdd84ff7485",
                          "typeString": "literal_string \"Registry: Cannot set futureVault factory to zero address\""
                        },
                        "value": "Registry: Cannot set futureVault factory to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02b5f9411faa5eeab5884bf688a72c654923c67e3cf4c13ee25b3bdd84ff7485",
                          "typeString": "literal_string \"Registry: Cannot set futureVault factory to zero address\""
                        }
                      ],
                      "id": 36812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1818:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:139:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36821,
                  "nodeType": "ExpressionStatement",
                  "src": "1818:139:71"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4675747572655661756c74466163746f7279",
                        "id": 36823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2000:20:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_573347319b65acdc3e254af866087b82543a230a53f0fd670e85e2576b668712",
                          "typeString": "literal_string \"FutureVaultFactory\""
                        },
                        "value": "FutureVaultFactory"
                      },
                      {
                        "id": 36824,
                        "name": "futureVaultFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36744,
                        "src": "2034:18:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36825,
                        "name": "_newFutureVaultFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36805,
                        "src": "2066:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_573347319b65acdc3e254af866087b82543a230a53f0fd670e85e2576b668712",
                          "typeString": "literal_string \"FutureVaultFactory\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36822,
                      "name": "RegistryUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36761,
                      "src": "1972:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 36826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:126:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36827,
                  "nodeType": "EmitStatement",
                  "src": "1967:131:71"
                },
                {
                  "expression": {
                    "id": 36830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36828,
                      "name": "futureVaultFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36744,
                      "src": "2108:18:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36829,
                      "name": "_newFutureVaultFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36805,
                      "src": "2129:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2108:43:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36831,
                  "nodeType": "ExpressionStatement",
                  "src": "2108:43:71"
                }
              ]
            },
            "baseFunctions": [
              39156
            ],
            "documentation": {
              "id": 36803,
              "nodeType": "StructuredDocumentation",
              "src": "1545:140:71",
              "text": " @notice Setter for the future vault factory address\n @param _newFutureVaultFactory the address of the token factory"
            },
            "functionSelector": "8d722c05",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFutureVaultFactory",
            "nameLocation": "1699:21:71",
            "overrides": {
              "id": 36807,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1776:8:71"
            },
            "parameters": {
              "id": 36806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36805,
                  "mutability": "mutable",
                  "name": "_newFutureVaultFactory",
                  "nameLocation": "1738:22:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36833,
                  "src": "1730:30:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:46:71"
            },
            "returnParameters": {
              "id": 36808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1785:0:71"
            },
            "scope": 36973,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36852,
            "nodeType": "FunctionDefinition",
            "src": "2295:161:71",
            "nodes": [],
            "body": {
              "id": 36851,
              "nodeType": "Block",
              "src": "2354:102:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36840,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32419,
                      "src": "2364:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2364:13:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36842,
                  "nodeType": "ExpressionStatement",
                  "src": "2364:13:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 36846,
                            "name": "_future",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36836,
                            "src": "2412:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 36844,
                            "name": "futureVaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36747,
                            "src": "2395:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$32077_storage",
                              "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                            }
                          },
                          "id": 36845,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32104,
                          "src": "2395:16:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$32077_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$32077_storage_ptr_$",
                            "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
                          }
                        },
                        "id": 36847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2395:25:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a204552525f4655545552455f414444",
                        "id": 36848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2422:26:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04bfe4c9c9f621f1183cc1e33f471457e39bee1464ddd71b05db7616ec0f3271",
                          "typeString": "literal_string \"Registry: ERR_FUTURE_ADD\""
                        },
                        "value": "Registry: ERR_FUTURE_ADD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04bfe4c9c9f621f1183cc1e33f471457e39bee1464ddd71b05db7616ec0f3271",
                          "typeString": "literal_string \"Registry: ERR_FUTURE_ADD\""
                        }
                      ],
                      "id": 36843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2387:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2387:62:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36850,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:62:71"
                }
              ]
            },
            "baseFunctions": [
              39168
            ],
            "documentation": {
              "id": 36834,
              "nodeType": "StructuredDocumentation",
              "src": "2164:126:71",
              "text": " @notice Add a future to the registry\n @param _future the address of the future to add to the registry"
            },
            "functionSelector": "bc97cb18",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addFutureVault",
            "nameLocation": "2304:14:71",
            "overrides": {
              "id": 36838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2345:8:71"
            },
            "parameters": {
              "id": 36837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36836,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "2327:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36852,
                  "src": "2319:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2318:17:71"
            },
            "returnParameters": {
              "id": 36839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2354:0:71"
            },
            "scope": 36973,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36871,
            "nodeType": "FunctionDefinition",
            "src": "2603:166:71",
            "nodes": [],
            "body": {
              "id": 36870,
              "nodeType": "Block",
              "src": "2665:104:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36859,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32419,
                      "src": "2675:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:13:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36861,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:13:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 36865,
                            "name": "_future",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36855,
                            "src": "2726:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 36863,
                            "name": "futureVaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36747,
                            "src": "2706:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$32077_storage",
                              "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                            }
                          },
                          "id": 36864,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "remove",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32131,
                          "src": "2706:19:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$32077_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$32077_storage_ptr_$",
                            "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
                          }
                        },
                        "id": 36866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2706:28:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a204552525f4655545552455f524d",
                        "id": 36867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2736:25:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_626c0d4dcb397f867a112ed478f84e3b1008a51aeafc519a234f0368a520d145",
                          "typeString": "literal_string \"Registry: ERR_FUTURE_RM\""
                        },
                        "value": "Registry: ERR_FUTURE_RM"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_626c0d4dcb397f867a112ed478f84e3b1008a51aeafc519a234f0368a520d145",
                          "typeString": "literal_string \"Registry: ERR_FUTURE_RM\""
                        }
                      ],
                      "id": 36862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2698:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2698:64:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36869,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:64:71"
                }
              ]
            },
            "baseFunctions": [
              39174
            ],
            "documentation": {
              "id": 36853,
              "nodeType": "StructuredDocumentation",
              "src": "2462:136:71",
              "text": " @notice Remove a future from the registry\n @param _future the address of the future to remove from the registry"
            },
            "functionSelector": "b71c9b32",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFutureVault",
            "nameLocation": "2612:17:71",
            "overrides": {
              "id": 36857,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2656:8:71"
            },
            "parameters": {
              "id": 36856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36855,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "2638:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36871,
                  "src": "2630:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2629:17:71"
            },
            "returnParameters": {
              "id": 36858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2665:0:71"
            },
            "scope": 36973,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36886,
            "nodeType": "FunctionDefinition",
            "src": "2971:154:71",
            "nodes": [],
            "body": {
              "id": 36885,
              "nodeType": "Block",
              "src": "3071:54:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36882,
                        "name": "_future",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36874,
                        "src": "3110:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 36880,
                        "name": "futureVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36747,
                        "src": "3088:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$32077_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 36881,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32158,
                      "src": "3088:21:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$32077_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$32077_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 36883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3088:30:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 36879,
                  "id": 36884,
                  "nodeType": "Return",
                  "src": "3081:37:71"
                }
              ]
            },
            "baseFunctions": [
              39188
            ],
            "documentation": {
              "id": 36872,
              "nodeType": "StructuredDocumentation",
              "src": "2775:191:71",
              "text": " @notice Getter to check if a future is registered\n @param _future the address of the future to check the registration of\n @return true if it is, false otherwise"
            },
            "functionSelector": "e3dcc0f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredFutureVault",
            "nameLocation": "2980:23:71",
            "overrides": {
              "id": 36876,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3047:8:71"
            },
            "parameters": {
              "id": 36875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36874,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "3021:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36886,
                  "src": "3013:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3003:31:71"
            },
            "returnParameters": {
              "id": 36879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36886,
                  "src": "3065:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36877,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3065:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3064:6:71"
            },
            "scope": 36973,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36901,
            "nodeType": "FunctionDefinition",
            "src": "3317:144:71",
            "nodes": [],
            "body": {
              "id": 36900,
              "nodeType": "Block",
              "src": "3414:47:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36897,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36889,
                        "src": "3447:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 36895,
                        "name": "futureVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36747,
                        "src": "3431:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$32077_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 36896,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32200,
                      "src": "3431:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$32077_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$32077_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 36898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3431:23:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 36894,
                  "id": 36899,
                  "nodeType": "Return",
                  "src": "3424:30:71"
                }
              ]
            },
            "baseFunctions": [
              39196
            ],
            "documentation": {
              "id": 36887,
              "nodeType": "StructuredDocumentation",
              "src": "3131:181:71",
              "text": " @notice Getter for the future registered at an index\n @param _index the index of the future to return\n @return the address of the corresponding future"
            },
            "functionSelector": "1c93e128",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFutureVaultAt",
            "nameLocation": "3326:16:71",
            "overrides": {
              "id": 36891,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3387:8:71"
            },
            "parameters": {
              "id": 36890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36889,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "3360:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36901,
                  "src": "3352:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3352:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3342:30:71"
            },
            "returnParameters": {
              "id": 36894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36901,
                  "src": "3405:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3404:9:71"
            },
            "scope": 36973,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36913,
            "nodeType": "FunctionDefinition",
            "src": "3596:114:71",
            "nodes": [],
            "body": {
              "id": 36912,
              "nodeType": "Block",
              "src": "3665:45:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 36908,
                        "name": "futureVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36747,
                        "src": "3682:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$32077_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 36909,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32173,
                      "src": "3682:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$32077_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$32077_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 36910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3682:21:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 36907,
                  "id": 36911,
                  "nodeType": "Return",
                  "src": "3675:28:71"
                }
              ]
            },
            "baseFunctions": [
              39202
            ],
            "documentation": {
              "id": 36902,
              "nodeType": "StructuredDocumentation",
              "src": "3467:124:71",
              "text": " @notice Getter for number of futureVaults registered\n @return the number of futureVaults registered"
            },
            "functionSelector": "56da7c28",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "futureVaultCount",
            "nameLocation": "3605:16:71",
            "overrides": {
              "id": 36904,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3638:8:71"
            },
            "parameters": {
              "id": 36903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3621:2:71"
            },
            "returnParameters": {
              "id": 36907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36913,
                  "src": "3656:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3655:9:71"
            },
            "scope": 36973,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36923,
            "nodeType": "FunctionDefinition",
            "src": "3842:159:71",
            "nodes": [],
            "body": {
              "id": 36922,
              "nodeType": "Block",
              "src": "3959:42:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36920,
                    "name": "futureVaultFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36744,
                    "src": "3976:18:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 36919,
                  "id": 36921,
                  "nodeType": "Return",
                  "src": "3969:25:71"
                }
              ]
            },
            "baseFunctions": [
              39162
            ],
            "documentation": {
              "id": 36914,
              "nodeType": "StructuredDocumentation",
              "src": "3716:121:71",
              "text": " @notice Getter for the future vault's factory address\n @return the address of the tokens factory"
            },
            "functionSelector": "331c8fa3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFutureVaultFactoryAddress",
            "nameLocation": "3851:28:71",
            "overrides": {
              "id": 36916,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3920:8:71"
            },
            "parameters": {
              "id": 36915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3879:2:71"
            },
            "returnParameters": {
              "id": 36919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36923,
                  "src": "3946:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:9:71"
            },
            "scope": 36973,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36958,
            "nodeType": "FunctionDefinition",
            "src": "4209:313:71",
            "nodes": [],
            "body": {
              "id": 36957,
              "nodeType": "Block",
              "src": "4276:246:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 36934,
                            "name": "_future",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36928,
                            "src": "4331:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 36933,
                          "name": "isRegisteredFutureVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36886,
                          "src": "4307:23:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 36935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4307:32:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a20554e524547495354455245445f465554555245",
                        "id": 36936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4353:31:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a6fabf7d8cd3b0226c27076013e25cc9dd13a6071a3af3a8aeb352efc1657",
                          "typeString": "literal_string \"Registry: UNREGISTERED_FUTURE\""
                        },
                        "value": "Registry: UNREGISTERED_FUTURE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a6fabf7d8cd3b0226c27076013e25cc9dd13a6071a3af3a8aeb352efc1657",
                          "typeString": "literal_string \"Registry: UNREGISTERED_FUTURE\""
                        }
                      ],
                      "id": 36932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4286:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4286:108:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36938,
                  "nodeType": "ExpressionStatement",
                  "src": "4286:108:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 36940,
                            "name": "poolFutureMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36751,
                            "src": "4412:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 36942,
                          "indexExpression": {
                            "id": 36941,
                            "name": "_future",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36928,
                            "src": "4426:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4412:22:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4446:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4438:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36943,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4438:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4438:10:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4412:36:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52656769737472793a204552525f504f4f4c5f414444",
                        "id": 36948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4450:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a26642524f27b33e31b754fdc2419b28db3554842c4ea180b333e096cf716ad6",
                          "typeString": "literal_string \"Registry: ERR_POOL_ADD\""
                        },
                        "value": "Registry: ERR_POOL_ADD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a26642524f27b33e31b754fdc2419b28db3554842c4ea180b333e096cf716ad6",
                          "typeString": "literal_string \"Registry: ERR_POOL_ADD\""
                        }
                      ],
                      "id": 36939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4404:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4404:71:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36950,
                  "nodeType": "ExpressionStatement",
                  "src": "4404:71:71"
                },
                {
                  "expression": {
                    "id": 36955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36951,
                        "name": "poolFutureMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36751,
                        "src": "4485:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 36953,
                      "indexExpression": {
                        "id": 36952,
                        "name": "_future",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36928,
                        "src": "4499:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4485:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36954,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36926,
                      "src": "4510:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4485:30:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36956,
                  "nodeType": "ExpressionStatement",
                  "src": "4485:30:71"
                }
              ]
            },
            "baseFunctions": [
              39209
            ],
            "documentation": {
              "id": 36924,
              "nodeType": "StructuredDocumentation",
              "src": "4024:180:71",
              "text": " @notice Add a pool to the registry\n @param _future the address of the future to add to the registry\n @param _pool the address of deployed PT/IBT pool"
            },
            "functionSelector": "eb511dd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPool",
            "nameLocation": "4218:7:71",
            "overrides": {
              "id": 36930,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4267:8:71"
            },
            "parameters": {
              "id": 36929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36926,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "4234:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36958,
                  "src": "4226:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4226:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36928,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "4249:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36958,
                  "src": "4241:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4241:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4225:32:71"
            },
            "returnParameters": {
              "id": 36931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4276:0:71"
            },
            "scope": 36973,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36972,
            "nodeType": "FunctionDefinition",
            "src": "4718:121:71",
            "nodes": [],
            "body": {
              "id": 36971,
              "nodeType": "Block",
              "src": "4793:46:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 36967,
                      "name": "poolFutureMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36751,
                      "src": "4810:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 36969,
                    "indexExpression": {
                      "id": 36968,
                      "name": "_future",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36961,
                      "src": "4824:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4810:22:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 36966,
                  "id": 36970,
                  "nodeType": "Return",
                  "src": "4803:29:71"
                }
              ]
            },
            "baseFunctions": [
              39216
            ],
            "documentation": {
              "id": 36959,
              "nodeType": "StructuredDocumentation",
              "src": "4528:185:71",
              "text": " @notice Getter for the pool registered with this future\n @param _future the address of the future to return\n @return the address of the corresponding pool"
            },
            "functionSelector": "bbe4f6db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "nameLocation": "4727:7:71",
            "overrides": {
              "id": 36963,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4766:8:71"
            },
            "parameters": {
              "id": 36962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36961,
                  "mutability": "mutable",
                  "name": "_future",
                  "nameLocation": "4743:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 36972,
                  "src": "4735:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4735:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4734:17:71"
            },
            "returnParameters": {
              "id": 36966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36965,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36972,
                  "src": "4784:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4784:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4783:9:71"
            },
            "scope": 36973,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36731,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39223,
              "src": "488:9:71"
            },
            "id": 36732,
            "nodeType": "InheritanceSpecifier",
            "src": "488:9:71"
          },
          {
            "baseName": {
              "id": 36733,
              "name": "Ownable2Step",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32560,
              "src": "499:12:71"
            },
            "id": 36734,
            "nodeType": "InheritanceSpecifier",
            "src": "499:12:71"
          }
        ],
        "canonicalName": "Registry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36730,
          "nodeType": "StructuredDocumentation",
          "src": "342:124:71",
          "text": " @title Registry Contract\n @notice Keeps a record of all valid contract addresses currently used in the protocol"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          36973,
          32560,
          32477,
          33443,
          39223
        ],
        "name": "Registry",
        "nameLocation": "476:8:71",
        "scope": 36974,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 71
}