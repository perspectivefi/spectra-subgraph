{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_futureVaultBeaconUpgradable",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ytBeaconUpgradable",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "curveAddressProvider",
          "type": "address"
        }
      ],
      "name": "CurveAddressProviderSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newFactory",
          "type": "address"
        }
      ],
      "name": "CurveFactoryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "ibt",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pt",
          "type": "address"
        }
      ],
      "name": "CurvePoolDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_futureVault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_poolCreator",
          "type": "address"
        }
      ],
      "name": "FutureVaultDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldRegistry",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRegistry",
          "type": "address"
        }
      ],
      "name": "RegistryUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveAddressProvider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "asset_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ibt_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maturity_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max_fees_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "registry_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "futureVaultAdmin",
          "type": "address"
        }
      ],
      "name": "deployFutureVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "futureVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "curvePoolAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "futureIbtPoolMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurveFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "futureVault",
          "type": "address"
        }
      ],
      "name": "getCurvePoolForFuture",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "curveAddressProvider_",
          "type": "address"
        }
      ],
      "name": "setCurveAddressProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newRegistry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162001ef838038062001ef88339810160408190526200003491620001fc565b6200003f3362000165565b306080526001600160a01b038216620000cf5760405162461bcd60e51b815260206004820152604160248201527f4675747572655661756c74466163746f72793a206675747572655661756c742060448201527f626561636f6e20616464726573732073686f756c64206e6f74206265207a65726064820152606f60f81b608482015260a4015b60405180910390fd5b6001600160a01b0381166200014d5760405162461bcd60e51b815260206004820152603860248201527f4675747572655661756c74466163746f72793a20797420626561636f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f00000000000000006064820152608401620000c6565b6001600160a01b0391821660a0521660c05262000234565b600180546001600160a01b03191690556200018c816200018f602090811b6200076c17901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001f757600080fd5b919050565b600080604083850312156200021057600080fd5b6200021b83620001df565b91506200022b60208401620001df565b90509250929050565b60805160a05160c051611c8d6200026b600039600061032101526000818161025b01526102f1015260006107c70152611c8d6000f3fe60806040523480156200001157600080fd5b5060043610620000e05760003560e01c80639bc3d0981162000097578063d1136096116200006e578063d113609614620001ff578063e30c39781462000211578063f21de1e81462000223578063f2fde38b146200023557600080fd5b80639bc3d09814620001a2578063a91ee0dc14620001b9578063d0d1f3c114620001d057600080fd5b80630556c69e14620000e55780633079184014620001215780633d6e73881462000166578063715018a6146200017a57806379ba509714620001865780638da5cb5b1462000190575b600080fd5b620000fc620000f636600462000e89565b6200024c565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6200014d6200013236600462000f5c565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200162000118565b6004546200014d906001600160a01b031681565b620001846200048f565b005b62000184620004a7565b6000546001600160a01b03166200014d565b62000184620001b336600462000f5c565b62000525565b62000184620001ca36600462000f5c565b62000614565b6200014d620001e136600462000f5c565b6001600160a01b039081166000908152600560205260409020541690565b6002546001600160a01b03166200014d565b6001546001600160a01b03166200014d565b6003546001600160a01b03166200014d565b620001846200024636600462000f5c565b620006f8565b60008062000259620007bc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620002ef5760405162461bcd60e51b815260206004820152603160248201527f4675747572655661756c74466163746f72793a204675747572655661756c742060448201527010995858dbdb881a5cc81b9bdd081cd95d607a1b60648201526084015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063a1116dc460e01b8b8b8a8c8b8b8b7f00000000000000000000000000000000000000000000000000000000000000006040516024016200035998979695949392919062000fe4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620003989062000d9c565b620003a592919062001053565b604051809103906000f080158015620003c2573d6000803e3d6000fd5b5060405190925033906001600160a01b038416907ff2e9c5a829e7edb160874d831d5e5dd7b7a39eee7cb6edf273681bd46449284090600090a360405163f2fde38b60e01b81526001600160a01b03848116600483015283169063f2fde38b90602401600060405180830381600087803b1580156200044057600080fd5b505af115801562000455573d6000803e3d6000fd5b505050506200046482620007f2565b506001600160a01b03808216600090815260056020526040902054919a911698509650505050505050565b6200049962000b8c565b620004a5600062000be8565b565b60015433906001600160a01b03168114620005175760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401620002e6565b620005228162000be8565b50565b6200052f62000b8c565b6001600160a01b038116620005bb5760405162461bcd60e51b815260206004820152604560248201527f4675747572655661756c74466163746f72793a2043616e6e6f7420736574206360448201527f7572766520616464726573732070726f766964657220746f207a65726f206164606482015264647265737360d81b608482015260a401620002e6565b6040516001600160a01b038216907f48595b0c6ad20fb5dc4bbce6134112d1c63908e36de330ff3ae2588af19fa9ea90600090a2600480546001600160a01b0319166001600160a01b0383161790556200052262000c03565b6200061e62000b8c565b6001600160a01b0381166200069c5760405162461bcd60e51b815260206004820152603760248201527f4675747572655661756c74466163746f72793a2043616e6e6f7420736574207260448201527f6567697374727920746f207a65726f20616464726573730000000000000000006064820152608401620002e6565b6003546040516001600160a01b038084169216907f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8290600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6200070262000b8c565b600180546001600160a01b0383166001600160a01b03199091168117909155620007346000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620004a557600080fd5b620007fc62000daa565b816001600160a01b031663c644fe946040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200083d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000863919062001081565b6001600160a01b039081168083529083166020808401919091526040805163313ce56760e01b815290516000939263313ce56792600480820193918290030181865afa158015620008b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008de9190620010a1565b620008eb90600a620011db565b6040516363737ac960e11b8152600481018290529091506000906001600160a01b0385169063c6e6f59290602401602060405180830381865afa15801562000937573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200095d9190620011ec565b6002549091506001600160a01b0316620009d75760405162461bcd60e51b815260206004820152603460248201527f4675747572655661756c74466163746f72793a20637572766520666163746f726044820152731e481859191c995cdcc81a5cc81b9bdd081cd95d60621b6064820152608401620002e6565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663c955fa0486630bebc200655af3107a400062e4e1c06302faf0806402540be4006611c37937e08000650500918bd80064012a05f2006102588e60405160240162000a4f9b9a9998979695949392919062001234565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405162000a8a919062001325565b6000604051808303816000865af19150503d806000811462000ac9576040519150601f19603f3d011682016040523d82523d6000602084013e62000ace565b606091505b50915091508162000b165760405162461bcd60e51b815260206004820152601160248201527019195c1b1bde5b595b9d0819985a5b1959607a1b6044820152606401620002e6565b6020818101516001600160a01b0388811660008181526005855260409081902080549484166001600160a01b03199095168517905589518151931683529382015290917f3c7b686d948efcba31c9cfd1aeae78faac70fe0c1ed90d151d49c75e85027a91910160405180910390a2505050505050565b6000546001600160a01b03163314620004a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002e6565b600180546001600160a01b031916905562000522816200076c565b600454604080516006602480830182905283518084039091018152604490920183526020820180516001600160e01b031663124fd3dd60e21b1790529151919260009283926001600160a01b039092169162000c5f9162001325565b6000604051808303816000865af19150503d806000811462000c9e576040519150601f19603f3d011682016040523d82523d6000602084013e62000ca3565b606091505b50915091508162000d395760405162461bcd60e51b815260206004820152605360248201527f4675747572655661756c74466163746f72793a20436f756c64206e6f7420666560448201527f74636820637572766520666163746f727920616464726573732066726f6d207460648201527234329030b2323932b9b990383937bb34b232b960691b608482015260a401620002e6565b8080602001905181019062000d4f919062001081565b600280546001600160a01b0319166001600160a01b039290921691821790556040517f6c3db3b505f1ce26138fce10683cfc5e051aa53990b272acf8944fb87c76b9fb90600090a2505050565b610914806200134483390190565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011262000df057600080fd5b813567ffffffffffffffff8082111562000e0e5762000e0e62000dc8565b604051601f8301601f19908116603f0116810190828211818310171562000e395762000e3962000dc8565b8160405283815286602085880101111562000e5357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b03811681146200052257600080fd5b600080600080600080600080610100898b03121562000ea757600080fd5b883567ffffffffffffffff8082111562000ec057600080fd5b62000ece8c838d0162000dde565b995060208b013591508082111562000ee557600080fd5b5062000ef48b828c0162000dde565b975050604089013562000f078162000e73565b9550606089013562000f198162000e73565b94506080890135935060a0890135925060c089013562000f398162000e73565b915060e089013562000f4b8162000e73565b809150509295985092959890939650565b60006020828403121562000f6f57600080fd5b813562000f7c8162000e73565b9392505050565b60005b8381101562000fa057818101518382015260200162000f86565b8381111562000fb0576000848401525b50505050565b6000815180845262000fd081602086016020860162000f83565b601f01601f19169290920160200192915050565b600061010080835262000ffa8184018c62000fb6565b9050828103602084015262001010818b62000fb6565b6001600160a01b03998a16604085015297891660608401525050608081019490945260a0840192909252841660c083015290921660e09092019190915292915050565b6001600160a01b0383168152604060208201819052600090620010799083018462000fb6565b949350505050565b6000602082840312156200109457600080fd5b815162000f7c8162000e73565b600060208284031215620010b457600080fd5b815160ff8116811462000f7c57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200111d578160001904821115620011015762001101620010c6565b808516156200110f57918102915b93841c9390800290620010e1565b509250929050565b6000826200113657506001620011d5565b816200114557506000620011d5565b81600181146200115e5760028114620011695762001189565b6001915050620011d5565b60ff8411156200117d576200117d620010c6565b50506001821b620011d5565b5060208310610133831016604e8410600b8410161715620011ae575081810a620011d5565b620011ba8383620010dc565b8060001904821115620011d157620011d1620010c6565b0290505b92915050565b600062000f7c60ff84168362001125565b600060208284031215620011ff57600080fd5b5051919050565b8060005b600281101562000fb05781516001600160a01b03168452602093840193909101906001016200120a565b60006101c0808352600b81840152506a46565f504f4f4c5f41505760a81b6101e083015261020080602084015262001285818401600a815269105415cbd4150bd2509560b21b602082015260400190565b91505062001297604083018e62001206565b63ffffffff8c16608083015265ffffffffffff8b1660a083015262ffffff8a1660c083015263ffffffff891660e083015264ffffffffff881661010083015266ffffffffffffff871661012083015265ffffffffffff861661014083015264ffffffffff851661016083015261ffff8416610180830152826101a08301529c9b505050505050505050505050565b600082516200133981846020870162000f83565b919091019291505056fe608060405260405161091438038061091483398101604081905261002291610463565b61002e82826000610035565b505061058d565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610523565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610523565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108ed602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053e565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b8152600401610169919061055a565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b838111156100f95750506000910152565b6000806040838503121561047657600080fd5b61047f83610405565b60208401519092506001600160401b038082111561049c57600080fd5b818501915085601f8301126104b057600080fd5b8151818111156104c2576104c2610421565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea610421565b8160405282815288602084870101111561050357600080fd5b610514836020830160208801610437565b80955050505050509250929050565b60006020828403121561053557600080fd5b6102c882610405565b60008251610550818460208701610437565b9190910192915050565b6020815260008251806020840152610579816040850160208701610437565b601f01601f19169190910160400192915050565b6103518061059c6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f560279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a5565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102c1565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b8381111561029f576000848401525b50505050565b600082516102b7818460208701610275565b9190910192915050565b60208152600082518060208401526102e0816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206ea3749d3f44f7b5a93ef58b0fb6c9847a4ee4b69872c58535c03f2899109cf464736f6c634300080d0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122089fe94b3e2860dc8020bfb01200dc26e699cde2ae5c47eb0a9d78cc1f23aaf1064736f6c634300080d0033",
    "sourceMap": "653:9144:74:-:0;;;1636:546;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:43;719:10:52;936:18:43;:32::i;:::-;592:4:87;573:24;;-1:-1:-1;;;;;1778:42:74;::::1;1757:154;;;::::0;-1:-1:-1;;;1757:154:74;;696:2:99;1757:154:74::1;::::0;::::1;678:21:99::0;735:2;715:18;;;708:30;774:34;754:18;;;747:62;845:34;825:18;;;818:62;-1:-1:-1;;;896:19:99;;;889:32;938:19;;1757:154:74::1;;;;;;;;;-1:-1:-1::0;;;;;1942:33:74;::::1;1921:136;;;::::0;-1:-1:-1;;;1921:136:74;;1170:2:99;1921:136:74::1;::::0;::::1;1152:21:99::0;1209:2;1189:18;;;1182:30;1248:34;1228:18;;;1221:62;1319:26;1299:18;;;1292:54;1363:19;;1921:136:74::1;968:420:99::0;1921:136:74::1;-1:-1:-1::0;;;;;2067:58:74;;::::1;;::::0;2135:40:::1;;::::0;653:9144;;1501:153:44;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:44;;;1613:34;1638:8;1613:24;;;;;;;:34;;:::i;:::-;1501:153;:::o;2433:187:43:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:43;;;-1:-1:-1;;;;;;2541:17:43;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:99:-;93:13;;-1:-1:-1;;;;;135:31:99;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;968:420::-;653:9144:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000e05760003560e01c80639bc3d0981162000097578063d1136096116200006e578063d113609614620001ff578063e30c39781462000211578063f21de1e81462000223578063f2fde38b146200023557600080fd5b80639bc3d09814620001a2578063a91ee0dc14620001b9578063d0d1f3c114620001d057600080fd5b80630556c69e14620000e55780633079184014620001215780633d6e73881462000166578063715018a6146200017a57806379ba509714620001865780638da5cb5b1462000190575b600080fd5b620000fc620000f636600462000e89565b6200024c565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6200014d6200013236600462000f5c565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200162000118565b6004546200014d906001600160a01b031681565b620001846200048f565b005b62000184620004a7565b6000546001600160a01b03166200014d565b62000184620001b336600462000f5c565b62000525565b62000184620001ca36600462000f5c565b62000614565b6200014d620001e136600462000f5c565b6001600160a01b039081166000908152600560205260409020541690565b6002546001600160a01b03166200014d565b6001546001600160a01b03166200014d565b6003546001600160a01b03166200014d565b620001846200024636600462000f5c565b620006f8565b60008062000259620007bc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620002ef5760405162461bcd60e51b815260206004820152603160248201527f4675747572655661756c74466163746f72793a204675747572655661756c742060448201527010995858dbdb881a5cc81b9bdd081cd95d607a1b60648201526084015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063a1116dc460e01b8b8b8a8c8b8b8b7f00000000000000000000000000000000000000000000000000000000000000006040516024016200035998979695949392919062000fe4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620003989062000d9c565b620003a592919062001053565b604051809103906000f080158015620003c2573d6000803e3d6000fd5b5060405190925033906001600160a01b038416907ff2e9c5a829e7edb160874d831d5e5dd7b7a39eee7cb6edf273681bd46449284090600090a360405163f2fde38b60e01b81526001600160a01b03848116600483015283169063f2fde38b90602401600060405180830381600087803b1580156200044057600080fd5b505af115801562000455573d6000803e3d6000fd5b505050506200046482620007f2565b506001600160a01b03808216600090815260056020526040902054919a911698509650505050505050565b6200049962000b8c565b620004a5600062000be8565b565b60015433906001600160a01b03168114620005175760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401620002e6565b620005228162000be8565b50565b6200052f62000b8c565b6001600160a01b038116620005bb5760405162461bcd60e51b815260206004820152604560248201527f4675747572655661756c74466163746f72793a2043616e6e6f7420736574206360448201527f7572766520616464726573732070726f766964657220746f207a65726f206164606482015264647265737360d81b608482015260a401620002e6565b6040516001600160a01b038216907f48595b0c6ad20fb5dc4bbce6134112d1c63908e36de330ff3ae2588af19fa9ea90600090a2600480546001600160a01b0319166001600160a01b0383161790556200052262000c03565b6200061e62000b8c565b6001600160a01b0381166200069c5760405162461bcd60e51b815260206004820152603760248201527f4675747572655661756c74466163746f72793a2043616e6e6f7420736574207260448201527f6567697374727920746f207a65726f20616464726573730000000000000000006064820152608401620002e6565b6003546040516001600160a01b038084169216907f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8290600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6200070262000b8c565b600180546001600160a01b0383166001600160a01b03199091168117909155620007346000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620004a557600080fd5b620007fc62000daa565b816001600160a01b031663c644fe946040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200083d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000863919062001081565b6001600160a01b039081168083529083166020808401919091526040805163313ce56760e01b815290516000939263313ce56792600480820193918290030181865afa158015620008b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008de9190620010a1565b620008eb90600a620011db565b6040516363737ac960e11b8152600481018290529091506000906001600160a01b0385169063c6e6f59290602401602060405180830381865afa15801562000937573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200095d9190620011ec565b6002549091506001600160a01b0316620009d75760405162461bcd60e51b815260206004820152603460248201527f4675747572655661756c74466163746f72793a20637572766520666163746f726044820152731e481859191c995cdcc81a5cc81b9bdd081cd95d60621b6064820152608401620002e6565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663c955fa0486630bebc200655af3107a400062e4e1c06302faf0806402540be4006611c37937e08000650500918bd80064012a05f2006102588e60405160240162000a4f9b9a9998979695949392919062001234565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405162000a8a919062001325565b6000604051808303816000865af19150503d806000811462000ac9576040519150601f19603f3d011682016040523d82523d6000602084013e62000ace565b606091505b50915091508162000b165760405162461bcd60e51b815260206004820152601160248201527019195c1b1bde5b595b9d0819985a5b1959607a1b6044820152606401620002e6565b6020818101516001600160a01b0388811660008181526005855260409081902080549484166001600160a01b03199095168517905589518151931683529382015290917f3c7b686d948efcba31c9cfd1aeae78faac70fe0c1ed90d151d49c75e85027a91910160405180910390a2505050505050565b6000546001600160a01b03163314620004a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002e6565b600180546001600160a01b031916905562000522816200076c565b600454604080516006602480830182905283518084039091018152604490920183526020820180516001600160e01b031663124fd3dd60e21b1790529151919260009283926001600160a01b039092169162000c5f9162001325565b6000604051808303816000865af19150503d806000811462000c9e576040519150601f19603f3d011682016040523d82523d6000602084013e62000ca3565b606091505b50915091508162000d395760405162461bcd60e51b815260206004820152605360248201527f4675747572655661756c74466163746f72793a20436f756c64206e6f7420666560448201527f74636820637572766520666163746f727920616464726573732066726f6d207460648201527234329030b2323932b9b990383937bb34b232b960691b608482015260a401620002e6565b8080602001905181019062000d4f919062001081565b600280546001600160a01b0319166001600160a01b039290921691821790556040517f6c3db3b505f1ce26138fce10683cfc5e051aa53990b272acf8944fb87c76b9fb90600090a2505050565b610914806200134483390190565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011262000df057600080fd5b813567ffffffffffffffff8082111562000e0e5762000e0e62000dc8565b604051601f8301601f19908116603f0116810190828211818310171562000e395762000e3962000dc8565b8160405283815286602085880101111562000e5357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b03811681146200052257600080fd5b600080600080600080600080610100898b03121562000ea757600080fd5b883567ffffffffffffffff8082111562000ec057600080fd5b62000ece8c838d0162000dde565b995060208b013591508082111562000ee557600080fd5b5062000ef48b828c0162000dde565b975050604089013562000f078162000e73565b9550606089013562000f198162000e73565b94506080890135935060a0890135925060c089013562000f398162000e73565b915060e089013562000f4b8162000e73565b809150509295985092959890939650565b60006020828403121562000f6f57600080fd5b813562000f7c8162000e73565b9392505050565b60005b8381101562000fa057818101518382015260200162000f86565b8381111562000fb0576000848401525b50505050565b6000815180845262000fd081602086016020860162000f83565b601f01601f19169290920160200192915050565b600061010080835262000ffa8184018c62000fb6565b9050828103602084015262001010818b62000fb6565b6001600160a01b03998a16604085015297891660608401525050608081019490945260a0840192909252841660c083015290921660e09092019190915292915050565b6001600160a01b0383168152604060208201819052600090620010799083018462000fb6565b949350505050565b6000602082840312156200109457600080fd5b815162000f7c8162000e73565b600060208284031215620010b457600080fd5b815160ff8116811462000f7c57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200111d578160001904821115620011015762001101620010c6565b808516156200110f57918102915b93841c9390800290620010e1565b509250929050565b6000826200113657506001620011d5565b816200114557506000620011d5565b81600181146200115e5760028114620011695762001189565b6001915050620011d5565b60ff8411156200117d576200117d620010c6565b50506001821b620011d5565b5060208310610133831016604e8410600b8410161715620011ae575081810a620011d5565b620011ba8383620010dc565b8060001904821115620011d157620011d1620010c6565b0290505b92915050565b600062000f7c60ff84168362001125565b600060208284031215620011ff57600080fd5b5051919050565b8060005b600281101562000fb05781516001600160a01b03168452602093840193909101906001016200120a565b60006101c0808352600b81840152506a46565f504f4f4c5f41505760a81b6101e083015261020080602084015262001285818401600a815269105415cbd4150bd2509560b21b602082015260400190565b91505062001297604083018e62001206565b63ffffffff8c16608083015265ffffffffffff8b1660a083015262ffffff8a1660c083015263ffffffff891660e083015264ffffffffff881661010083015266ffffffffffffff871661012083015265ffffffffffff861661014083015264ffffffffff851661016083015261ffff8416610180830152826101a08301529c9b505050505050505050505050565b600082516200133981846020870162000f83565b919091019291505056fe608060405260405161091438038061091483398101604081905261002291610463565b61002e82826000610035565b505061058d565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610523565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610523565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108ed602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053e565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b8152600401610169919061055a565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b838111156100f95750506000910152565b6000806040838503121561047657600080fd5b61047f83610405565b60208401519092506001600160401b038082111561049c57600080fd5b818501915085601f8301126104b057600080fd5b8151818111156104c2576104c2610421565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea610421565b8160405282815288602084870101111561050357600080fd5b610514836020830160208801610437565b80955050505050509250929050565b60006020828403121561053557600080fd5b6102c882610405565b60008251610550818460208701610437565b9190910192915050565b6020815260008251806020840152610579816040850160208701610437565b601f01601f19169190910160400192915050565b6103518061059c6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f560279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a5565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102c1565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b8381111561029f576000848401525b50505050565b600082516102b7818460208701610275565b9190910192915050565b60208152600082518060208401526102e0816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206ea3749d3f44f7b5a93ef58b0fb6c9847a4ee4b69872c58535c03f2899109cf464736f6c634300080d0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122089fe94b3e2860dc8020bfb01200dc26e699cde2ae5c47eb0a9d78cc1f23aaf1064736f6c634300080d0033",
    "sourceMap": "653:9144:74:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3464:1441;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2483:15:99;;;2465:34;;2535:15;;;;2530:2;2515:18;;2508:43;2400:18;3464:1441:74;;;;;;;;966:51;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;966:51:74;;;;;;-1:-1:-1;;;;;2978:32:99;;;2960:51;;2948:2;2933:18;966:51:74;2814:203:99;925:35:74;;;;;-1:-1:-1;;;;;925:35:74;;;1831:101:43;;;:::i;:::-;;1734:206:44;;;:::i;1201:85:43:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:43;1201:85;;5148:430:74;;;;;;:::i;:::-;;:::i;6108:305::-;;;;;;:::i;:::-;;:::i;5785:160::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5909:29:74;;;5883:7;5909:29;;;:16;:29;;;;;;;;5785:160;6771:109;6861:12;;-1:-1:-1;;;;;6861:12:74;6771:109;;847:99:44;926:13;;-1:-1:-1;;;;;926:13:44;847:99;;6557:92:74;6634:8;;-1:-1:-1;;;;;6634:8:74;6557:92;;1139:178:44;;;;;;:::i;:::-;;:::i;3464:1441:74:-;3792:19;3813:24;1037:22:87;:20;:22::i;:::-;3882:27:74::1;-1:-1:-1::0;;;;;3874:50:74::1;3853:146;;;::::0;-1:-1:-1;;;3853:146:74;;3224:2:99;3853:146:74::1;::::0;::::1;3206:21:99::0;3263:2;3243:18;;;3236:30;3302:34;3282:18;;;3275:62;-1:-1:-1;;;3353:18:99;;;3346:47;3410:19;;3853:146:74::1;;;;;;;;;4078:27;4167:43;;;4232:5;4259:7;4288:4;4314:6;4342:9;4373;4404;4435:18;4123:348;;;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;4123:348:74;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4123:348:74::1;-1:-1:-1::0;;;;;;4123:348:74;;::::1;::::0;;;::::1;::::0;;;4045:440;;::::1;::::0;::::1;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;4511:44:74::1;::::0;4010:485;;-1:-1:-1;4544:10:74::1;::::0;-1:-1:-1;;;;;4511:44:74;::::1;::::0;::::1;::::0;;;::::1;4642:94;::::0;-1:-1:-1;;;4642:94:74;;-1:-1:-1;;;;;2978:32:99;;;4642:94:74::1;::::0;::::1;2960:51:99::0;4642:54:74;::::1;::::0;::::1;::::0;2933:18:99;;4642:94:74::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4811:29;4828:11;4811:16;:29::i;:::-;-1:-1:-1::0;;;;;;4869:29:74;;::::1;;::::0;;;:16:::1;:29;::::0;;;;;4886:11;;4869:29;::::1;::::0;-1:-1:-1;3464:1441:74;-1:-1:-1;;;;;;;3464:1441:74:o;1831:101:43:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1734:206:44:-;926:13;;719:10:52;;-1:-1:-1;;;;;926:13:44;1827:24;;1819:78;;;;-1:-1:-1;;;1819:78:44;;5402:2:99;1819:78:44;;;5384:21:99;5441:2;5421:18;;;5414:30;5480:34;5460:18;;;5453:62;-1:-1:-1;;;5531:18:99;;;5524:39;5580:19;;1819:78:44;5200:405:99;1819:78:44;1907:26;1926:6;1907:18;:26::i;:::-;1770:170;1734:206::o;5148:430:74:-;5254:13;:11;:13::i;:::-;-1:-1:-1;;;;;5298:35:74;;5277:151;;;;-1:-1:-1;;;5277:151:74;;5812:2:99;5277:151:74;;;5794:21:99;5851:2;5831:18;;;5824:30;5890:34;5870:18;;;5863:62;5961:34;5941:18;;;5934:62;-1:-1:-1;;;6012:19:99;;;6005:36;6058:19;;5277:151:74;5610:473:99;5277:151:74;5443:46;;-1:-1:-1;;;;;5443:46:74;;;;;;;;5499:20;:44;;-1:-1:-1;;;;;;5499:44:74;-1:-1:-1;;;;;5499:44:74;;;;;5553:18;:16;:18::i;6108:305::-;6168:13;:11;:13::i;:::-;-1:-1:-1;;;;;6212:26:74;;6191:128;;;;-1:-1:-1;;;6191:128:74;;6290:2:99;6191:128:74;;;6272:21:99;6329:2;6309:18;;;6302:30;6368:34;6348:18;;;6341:62;6439:25;6419:18;;;6412:53;6482:19;;6191:128:74;6088:419:99;6191:128:74;6350:8;;6334:39;;-1:-1:-1;;;;;6334:39:74;;;;6350:8;;6334:39;;6350:8;;6334:39;6383:8;:23;;-1:-1:-1;;;;;;6383:23:74;-1:-1:-1;;;;;6383:23:74;;;;;;;;;;6108:305::o;1139:178:44:-;1094:13:43;:11;:13::i;:::-;1228::44::1;:24:::0;;-1:-1:-1;;;;;1228:24:44;::::1;-1:-1:-1::0;;;;;;1228:24:44;;::::1;::::0;::::1;::::0;;;1292:7:::1;1247::43::0;1273:6;-1:-1:-1;;;;;1273:6:43;;1201:85;1292:7:44::1;-1:-1:-1::0;;;;;1267:43:44::1;;;;;;;;;;;1139:178:::0;:::o;2433:187:43:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:43;;;-1:-1:-1;;;;;;2541:17:43;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;836:96:87:-;907:4;-1:-1:-1;;;;;916:8:87;899:25;;891:34;;;;;7052:1427:74;7118:23;;:::i;:::-;7175:11;-1:-1:-1;;;;;7162:32:74;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7151:45:74;;;;;;7206:22;;;7151:8;7206;;;:22;;;;7277:46;;;-1:-1:-1;;;7277:46:74;;;;7157:1;;7151:45;7277:44;;:46;;;;;;;;;;;7151:45;7277:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7259:64;;:2;:64;:::i;:::-;7356:75;;-1:-1:-1;;;7356:75:74;;;;;8839:25:99;;;7238:85:74;;-1:-1:-1;7333:20:74;;-1:-1:-1;;;;;7356:41:74;;;;;8812:18:99;;7356:75:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7462:12;;7333:98;;-1:-1:-1;;;;;;7462:12:74;7441:125;;;;-1:-1:-1;;;7441:125:74;;9266:2:99;7441:125:74;;;9248:21:99;9305:2;9285:18;;;9278:30;9344:34;9324:18;;;9317:62;-1:-1:-1;;;9395:18:99;;;9388:50;9455:19;;7441:125:74;9064:416:99;7441:125:74;7577:12;7591:25;7620:12;;;;;;;;;-1:-1:-1;;;;;7620:12:74;-1:-1:-1;;;;;7620:17:74;7691:10;7780:5;7814:9;7846:15;7888:8;7924;7960:11;8012:16;8058:13;8107:10;8147:3;8183:12;7651:574;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7651:574:74;;;;;;;;;;;7620:615;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7576:659;;;;8254:7;8246:37;;;;-1:-1:-1;;;8246:37:74;;12943:2:99;8246:37:74;;;12925:21:99;12982:2;12962:18;;;12955:30;-1:-1:-1;;;13001:18:99;;;12994:47;13058:18;;8246:37:74;12741:341:99;8246:37:74;8818:22;;;;8812:29;-1:-1:-1;;;;;8860:20:74;;;8759:12;8860:20;;;:16;:20;;;;;;;:27;;;;;-1:-1:-1;;;;;;8860:27:74;;;;;;;8429:8;;8355:117;;2483:15:99;;2465:34;;2515:18;;;2508:43;8860:27:74;;8355:117;;2400:18:99;8355:117:74;;;;;;;7108:1371;;;;;7052:1427;:::o;1359:130:43:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:43;719:10:52;1422:23:43;1414:68;;;;-1:-1:-1;;;1414:68:43;;13289:2:99;1414:68:43;;;13271:21:99;;;13308:18;;;13301:30;13367:34;13347:18;;;13340:62;13419:18;;1414:68:43;13087:356:99;1501:153:44;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:44;;;1613:34;1638:8;1613:24;:34::i;9045:750:74:-;9443:20;;9482:41;;;9320:1;9482:41;;;;8839:25:99;;;9482:41:74;;;;;;;;;;8812:18:99;;;;9482:41:74;;;;;;;-1:-1:-1;;;;;9482:41:74;-1:-1:-1;;;9482:41:74;;;9443:90;;9320:1;;9304:13;;;;-1:-1:-1;;;;;9443:20:74;;;;:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9399:134;;;;9564:7;9543:137;;;;-1:-1:-1;;;9543:137:74;;13650:2:99;9543:137:74;;;13632:21:99;13689:2;13669:18;;;13662:30;13728:34;13708:18;;;13701:62;13799:34;13779:18;;;13772:62;-1:-1:-1;;;13850:19:99;;;13843:50;13910:19;;9543:137:74;13448:487:99;9543:137:74;9716:12;9705:35;;;;;;;;;;;;:::i;:::-;9690:12;:50;;-1:-1:-1;;;;;;9690:50:74;-1:-1:-1;;;;;9690:50:74;;;;;;;;;9755:33;;;;-1:-1:-1;;9755:33:74;9082:713;;;9045:750::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:99:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:99;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:131::-;-1:-1:-1;;;;;945:31:99;;935:42;;925:70;;991:1;988;981:12;1006:1242;1148:6;1156;1164;1172;1180;1188;1196;1204;1257:3;1245:9;1236:7;1232:23;1228:33;1225:53;;;1274:1;1271;1264:12;1225:53;1314:9;1301:23;1343:18;1384:2;1376:6;1373:14;1370:34;;;1400:1;1397;1390:12;1370:34;1423:50;1465:7;1456:6;1445:9;1441:22;1423:50;:::i;:::-;1413:60;;1526:2;1515:9;1511:18;1498:32;1482:48;;1555:2;1545:8;1542:16;1539:36;;;1571:1;1568;1561:12;1539:36;;1594:52;1638:7;1627:8;1616:9;1612:24;1594:52;:::i;:::-;1584:62;;;1696:2;1685:9;1681:18;1668:32;1709:31;1734:5;1709:31;:::i;:::-;1759:5;-1:-1:-1;1816:2:99;1801:18;;1788:32;1829:33;1788:32;1829:33;:::i;:::-;1881:7;-1:-1:-1;1935:3:99;1920:19;;1907:33;;-1:-1:-1;1987:3:99;1972:19;;1959:33;;-1:-1:-1;2044:3:99;2029:19;;2016:33;2058;2016;2058;:::i;:::-;2110:7;-1:-1:-1;2169:3:99;2154:19;;2141:33;2183;2141;2183;:::i;:::-;2235:7;2225:17;;;1006:1242;;;;;;;;;;;:::o;2562:247::-;2621:6;2674:2;2662:9;2653:7;2649:23;2645:32;2642:52;;;2690:1;2687;2680:12;2642:52;2729:9;2716:23;2748:31;2773:5;2748:31;:::i;:::-;2798:5;2562:247;-1:-1:-1;;;2562:247:99:o;3440:258::-;3512:1;3522:113;3536:6;3533:1;3530:13;3522:113;;;3612:11;;;3606:18;3593:11;;;3586:39;3558:2;3551:10;3522:113;;;3653:6;3650:1;3647:13;3644:48;;;3688:1;3679:6;3674:3;3670:16;3663:27;3644:48;;3440:258;;;:::o;3703:::-;3745:3;3783:5;3777:12;3810:6;3805:3;3798:19;3826:63;3882:6;3875:4;3870:3;3866:14;3859:4;3852:5;3848:16;3826:63;:::i;:::-;3943:2;3922:15;-1:-1:-1;;3918:29:99;3909:39;;;;3950:4;3905:50;;3703:258;-1:-1:-1;;3703:258:99:o;3966:909::-;4294:4;4323:3;4353:2;4342:9;4335:21;4379:45;4420:2;4409:9;4405:18;4397:6;4379:45;:::i;:::-;4365:59;;4472:9;4464:6;4460:22;4455:2;4444:9;4440:18;4433:50;4500:33;4526:6;4518;4500:33;:::i;:::-;-1:-1:-1;;;;;4607:15:99;;;4602:2;4587:18;;4580:43;4659:15;;;4654:2;4639:18;;4632:43;-1:-1:-1;;4706:3:99;4691:19;;4684:35;;;;4560:3;4735:19;;4728:35;;;;4800:15;;4794:3;4779:19;;4772:44;4853:15;;;4847:3;4832:19;;;4825:44;;;;4492:41;3966:909;-1:-1:-1;;3966:909:99:o;4880:315::-;-1:-1:-1;;;;;5055:32:99;;5037:51;;5124:2;5119;5104:18;;5097:30;;;-1:-1:-1;;5144:45:99;;5170:18;;5162:6;5144:45;:::i;:::-;5136:53;4880:315;-1:-1:-1;;;;4880:315:99:o;6512:251::-;6582:6;6635:2;6623:9;6614:7;6610:23;6606:32;6603:52;;;6651:1;6648;6641:12;6603:52;6683:9;6677:16;6702:31;6727:5;6702:31;:::i;6900:273::-;6968:6;7021:2;7009:9;7000:7;6996:23;6992:32;6989:52;;;7037:1;7034;7027:12;6989:52;7069:9;7063:16;7119:4;7112:5;7108:16;7101:5;7098:27;7088:55;;7139:1;7136;7129:12;7178:127;7239:10;7234:3;7230:20;7227:1;7220:31;7270:4;7267:1;7260:15;7294:4;7291:1;7284:15;7310:422;7399:1;7442:5;7399:1;7456:270;7477:7;7467:8;7464:21;7456:270;;;7536:4;7532:1;7528:6;7524:17;7518:4;7515:27;7512:53;;;7545:18;;:::i;:::-;7595:7;7585:8;7581:22;7578:55;;;7615:16;;;;7578:55;7694:22;;;;7654:15;;;;7456:270;;;7460:3;7310:422;;;;;:::o;7737:806::-;7786:5;7816:8;7806:80;;-1:-1:-1;7857:1:99;7871:5;;7806:80;7905:4;7895:76;;-1:-1:-1;7942:1:99;7956:5;;7895:76;7987:4;8005:1;8000:59;;;;8073:1;8068:130;;;;7980:218;;8000:59;8030:1;8021:10;;8044:5;;;8068:130;8105:3;8095:8;8092:17;8089:43;;;8112:18;;:::i;:::-;-1:-1:-1;;8168:1:99;8154:16;;8183:5;;7980:218;;8282:2;8272:8;8269:16;8263:3;8257:4;8254:13;8250:36;8244:2;8234:8;8231:16;8226:2;8220:4;8217:12;8213:35;8210:77;8207:159;;;-1:-1:-1;8319:19:99;;;8351:5;;8207:159;8398:34;8423:8;8417:4;8398:34;:::i;:::-;8468:6;8464:1;8460:6;8456:19;8447:7;8444:32;8441:58;;;8479:18;;:::i;:::-;8517:20;;-1:-1:-1;7737:806:99;;;;;:::o;8548:140::-;8606:5;8635:47;8676:4;8666:8;8662:19;8656:4;8635:47;:::i;8875:184::-;8945:6;8998:2;8986:9;8977:7;8973:23;8969:32;8966:52;;;9014:1;9011;9004:12;8966:52;-1:-1:-1;9037:16:99;;8875:184;-1:-1:-1;8875:184:99:o;9649:352::-;9742:5;9765:1;9775:220;9789:4;9786:1;9783:11;9775:220;;;9852:13;;-1:-1:-1;;;;;9848:39:99;9836:52;;9911:4;9935:12;;;;9970:15;;;;9884:1;9802:9;9775:220;;10686:1771;11454:4;11483:3;11513:2;11502:9;11495:21;11552:2;11547;11536:9;11532:18;11525:30;;-1:-1:-1;;;11586:3:99;11575:9;11571:19;11564:42;11625:3;11666:2;11659:4;11648:9;11644:20;11637:32;11686:49;11731:2;11720:9;11716:18;9562:2;9550:15;;-1:-1:-1;;;9590:4:99;9581:14;;9574:36;9635:2;9626:12;;9485:159;11686:49;11678:57;;;11744:52;11792:2;11781:9;11777:18;11769:6;11744:52;:::i;:::-;10087:10;10076:22;;11851:3;11836:19;;10064:35;10201:14;10190:26;;11921:3;11906:19;;10178:39;10319:8;10308:20;;11991:3;11976:19;;10296:33;10087:10;10076:22;;12051:3;12036:19;;10064:35;10431:12;10420:24;;12121:3;12106:19;;10408:37;10547:16;10536:28;;12191:3;12176:19;;10524:41;10201:14;10190:26;;12261:3;12246:19;;10178:39;10431:12;10420:24;;12331:3;12316:19;;10408:37;10667:6;10656:18;;12401:3;12386:19;;10644:31;12443:7;12437:3;12426:9;12422:19;12415:36;10686:1771;;;;;;;;;;;;;;:::o;12462:274::-;12591:3;12629:6;12623:13;12645:53;12691:6;12686:3;12679:4;12671:6;12667:17;12645:53;:::i;:::-;12714:16;;;;;12462:274;-1:-1:-1;;12462:274:99:o",
    "linkReferences": {},
    "immutableReferences": {
      "38328": [
        {
          "start": 603,
          "length": 32
        },
        {
          "start": 753,
          "length": 32
        }
      ],
      "38330": [
        {
          "start": 801,
          "length": 32
        }
      ],
      "42693": [
        {
          "start": 1991,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "curveAddressProvider()": "3d6e7388",
    "deployFutureVault(string,string,address,address,uint256,uint256,address,address)": "0556c69e",
    "futureIbtPoolMap(address)": "30791840",
    "getCurveFactoryAddress()": "d1136096",
    "getCurvePoolForFuture(address)": "d0d1f3c1",
    "getRegistryAddress()": "f21de1e8",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "renounceOwnership()": "715018a6",
    "setCurveAddressProvider(address)": "9bc3d098",
    "setRegistry(address)": "a91ee0dc",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_futureVaultBeaconUpgradable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ytBeaconUpgradable\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curveAddressProvider\",\"type\":\"address\"}],\"name\":\"CurveAddressProviderSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"CurveFactoryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ibt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pt\",\"type\":\"address\"}],\"name\":\"CurvePoolDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_futureVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_poolCreator\",\"type\":\"address\"}],\"name\":\"FutureVaultDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRegistry\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveAddressProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"asset_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ibt_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maturity_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_fees_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"registry_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"futureVaultAdmin\",\"type\":\"address\"}],\"name\":\"deployFutureVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"futureVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"curvePoolAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"futureIbtPoolMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurveFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"futureVault\",\"type\":\"address\"}],\"name\":\"getCurvePoolForFuture\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curveAddressProvider_\",\"type\":\"address\"}],\"name\":\"setCurveAddressProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRegistry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"deployFutureVault(string,string,address,address,uint256,uint256,address,address)\":{\"params\":{\"asset_\":\"Address of the asset of the FutureVault.\",\"ibt_\":\"Address of the ibt of the FutureVault.\",\"maturity_\":\"The maturity time of the FutureVault.\",\"max_fees_\":\"Maximum fees of the FutureVault.\",\"name_\":\"Name of the FutureVault.\",\"registry_\":\"Address of the Registry contract of the FutureVault.\",\"symbol_\":\"Symbol of the FutureVault.\"},\"returns\":{\"curvePoolAddress\":\"The address of the curve Pool deployed for ibt/pt.\",\"futureVault\":\"The address of the futureVault deployed.\"}},\"getCurveFactoryAddress()\":{\"returns\":{\"_0\":\"the address of the curve factory\"}},\"getCurvePoolForFuture(address)\":{\"params\":{\"futureVault\":\"The address of the futureVault against which to to get the curve pool address.\"}},\"getRegistryAddress()\":{\"returns\":{\"_0\":\"the address of the tokens factory\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCurveAddressProvider(address)\":{\"params\":{\"curveAddressProvider_\":\"The address of the curveAddressProvider.\"}},\"setRegistry(address)\":{\"params\":{\"_newRegistry\":\"the address of the token factory\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"The constructor of the FutureVaultFactory contract. Sets the value of futureVault and yt beacon.\"},\"deployFutureVault(string,string,address,address,uint256,uint256,address,address)\":{\"notice\":\"Deploys the FutureVault contract implementation.\"},\"getCurveFactoryAddress()\":{\"notice\":\"Getter for the curve factory address\"},\"getCurvePoolForFuture(address)\":{\"notice\":\"Getter for the curve pool against the associated futureVault\"},\"getRegistryAddress()\":{\"notice\":\"Getter for the registry address\"},\"setCurveAddressProvider(address)\":{\"notice\":\"Function which sets the curveAddressProvider address used in getting the curve factory address. Can only be called by owner.\"},\"setRegistry(address)\":{\"notice\":\"Setter for the registry address, Can only be called by the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/factory/FutureVaultFactory.sol\":\"FutureVaultFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/\",\":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/\",\":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/\",\":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/\",\":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/\",\":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x7dce633611f5149fa8dec27ccd28b88dc590fecbebdb7785d1f6728dae1e1c4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9974683c1eec209863fdec01d0c45d262302d62d7b972bc2ddcb25c33bc53fb\",\"dweb:/ipfs/QmSrcmeTka7VTz5HbjktmZdsMycARfadbCpjWTHiqwiqZC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol\":{\"keccak256\":\"0xe3d54e1a1a10fbc86fdfaf9100ba99c9c808588fd20d0c919457b903b5cae61a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e2f616c3ebcf6db05b9242b870f69bf902533cc3248e352b0e1e1a04d6da8b8\",\"dweb:/ipfs/QmbNV3EejvPoLWVXTjLRyHyFnaxdQoxpFkXMbZbPvDf7eq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a\",\"dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC4626Upgradeable.sol\":{\"keccak256\":\"0x6a198681b522c536328050c34b419775d9bde12295488155d6068821d2e131cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07c6e2a07689a960285b1c55c399cf2ea23ce932855265bd189beaf13d484e1\",\"dweb:/ipfs/QmaZ8rJTPYNs8Etb83wVNE7EriXNZFCtVm6dAR9BayXxYG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xea49d64cd4c5556e61f1edc117cc74f2e69f14b524386ef6a336a58794191b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a3e700c25793a01bb63bb38f10b6dd4d0569280fd393d9b95a142ecfa247838\",\"dweb:/ipfs/QmX1FPaRMbMo22EudVK2xQsdcVcbNk3XKkcrzuQfQQEtMH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x4586689c55edb37fc3cac296d75d3851b3aee3f378aaa54d8a9258a384fbf541\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fb638e6f0d5279f6000579a71a482a7d3655aed62439549906e3584443c40\",\"dweb:/ipfs/QmangQhgXTvji3sAgNcvdnTs7ZR3KEwmHfw5DEAybxB7cw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3\",\"dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xba55137b57f58e805ab97462fbfc7e4b66c093a6813e29cc3f5d1569d39c27cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4bb6347403c2f3b1cf02b6108cc659730a564b0c5e629762dde8f5efe1e2a84\",\"dweb:/ipfs/QmTndaLNN7gioSQHg6Zu55Ysj7wUNCq11MV7JE7zt9nsGz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x5c04e814be62473d494fb8884c56327d98237df4d77668a4ab979ace139ff204\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a17916be90701e95b591bf18797c7e64bb614fa7bd3824533dde8594922e3979\",\"dweb:/ipfs/QmSRhaSy3g2Mp7MGxT6Ttfy7jiBeXr6iMVh2WNLRCzpZAF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xb49137b771712774960cca0acf428499e2aa85f179fe03712e5c06c5a6ab6316\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec66760482c33d84dda577e3a7a4b81000a92e37cae5c8b55339e2d83abfce03\",\"dweb:/ipfs/QmVDSFsp9dnW8P92Yrq2jAjr9piKke8gjuZX5QjtFuZRfx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb210cdef017f9813af368e17ea1573bc26094dd8dba8b5db8bec4cc90883d0a\",\"dweb:/ipfs/QmdixQwckiNVVWHaJD9ps5ALWsHkZGRAePkuUPw1ZhhJhM\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x89bfffcd03b05b01af8dea42646c8118151e4fba967cde7064eb4acb697226d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13867b2b35c572397a233373750e30025c79ee32e23650b2bc3e384565e78d5f\",\"dweb:/ipfs/QmQscnGYq2XxbyvLgtyQNPT8ZwSbNsLxeH4pZyyae5yKA4\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"src/factory/FutureVaultFactory.sol\":{\"keccak256\":\"0x1c91824967d95f3d10d5d351dd0fec451584c1d7cfad0c328cee4025922c7e13\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8098bcf20c6e048fc71952a0fdda4b35cf6c3cc78cba107d3ef8e085a91eb01d\",\"dweb:/ipfs/Qme3EEe4r3Xn8wmL4HzW1EQrF6b3MCAcyERpUmKA7dDqnG\"]},\"src/interfaces/IFutureVault.sol\":{\"keccak256\":\"0x0523d49ece7f1564ad51d6a76299c152156ed8f791df76505c7bd723ee85827e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c4e9a0841bb4db3136fbcb9b1322225054a5f265fdb849ffc5a3e21610369ac4\",\"dweb:/ipfs/QmZgK3sf7sRNSwg6uYan3EB6JVMSvyMaG7UG7AmBLnDNH3\"]},\"src/interfaces/IFutureVaultFactory.sol\":{\"keccak256\":\"0x6a780a97d9a34d63e5c043ffc9f556b028f81d87108f2bf833cbac55f8f3fc71\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c9f740b6cd269a656995ce1e9681a8ab95b56047e82d0559021cd5673b9a828b\",\"dweb:/ipfs/QmX3z5oh1xjHS4GzsN7iFZCnr7CqejwfAgYbUjsbCN9NUL\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x41384cee7cd390107b94448c6f3d985a392fff762843b09cc9afc731f30079a5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6e92c1971200f1836d55ad644d65e97e330271525b69bf0d81063256f041fd61\",\"dweb:/ipfs/QmXao4uATA85kurzoP4UGjDjBSbZh57esfo7W7frnFHcpD\"]},\"src/interfaces/IYT.sol\":{\"keccak256\":\"0x080e1e2a73d078540ba1c5df1363ca1e6dd0a9868aafa751e7f7992b5bec7434\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3022340179362a27b3e486624b2e51cd2403988c9b09e0380ba3e8db272523d9\",\"dweb:/ipfs/QmWP87SpebEQSomZggfcsxqEWuqZJatDwDJGPKygmmHRo6\"]},\"src/tokens/APWineERC4626Upgradeable.sol\":{\"keccak256\":\"0x3ec78aff3c90da826258f911692bed1b5040fe7e882ff2b05143849b9882a844\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6940614a2533a4f56b94b12798782fa66b172a36adff6e67adc99b19f8210d1f\",\"dweb:/ipfs/QmStXegDmSsybgWgJ35qjPiMc9AGaRkGeKz3va7yvpib3X\"]},\"src/tokens/FutureVault.sol\":{\"keccak256\":\"0x98bbd6fd7243c00acb6d5f7cf5cfd1c6c059c8774daf414714cb9be2f53edd6d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://035b32c3f44753b03fc447535794ba59119bb019fb94a0e5e3b84681d26edd33\",\"dweb:/ipfs/QmXBkZAQqGxnGwrhJ3JjHUBtMSUKqYD7N7byWdPnAc3KUF\"]},\"src/tokens/YT.sol\":{\"keccak256\":\"0x8971d38eb3c16b428d49ac9d95bce4e21267995c85232d2edcdfa9216f171885\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://48b21d38ed79bb383a84b7e0913b84eed80de88e9131ad5fac58711c0751b4e6\",\"dweb:/ipfs/QmTmKkg8JuEvoRAa8bykBLem2pKcdyDFM3kd1CTnRB3g4s\"]},\"src/util/NoDelegateCall.sol\":{\"keccak256\":\"0x6baf60ac8d7668648ac1a92438ad2523b7c438b70cb3f38fee4c3e380785db6b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://29431d3863626cd5598103606fc7829b2242384ad2157e5ea8b9b512a5b4bc0a\",\"dweb:/ipfs/QmNhoymJAC7VmSsHE1BWEeAHzXJaH57kba7Lyzagf6QFCt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_futureVaultBeaconUpgradable",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_ytBeaconUpgradable",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "curveAddressProvider",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CurveAddressProviderSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newFactory",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CurveFactoryChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "ibt",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "pt",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CurvePoolDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_futureVault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_poolCreator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FutureVaultDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldRegistry",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newRegistry",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RegistryUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "curveAddressProvider",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "asset_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "ibt_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maturity_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max_fees_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "registry_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "futureVaultAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployFutureVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "futureVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "curvePoolAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "futureIbtPoolMap",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurveFactoryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "futureVault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurvePoolForFuture",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "curveAddressProvider_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCurveAddressProvider"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "deployFutureVault(string,string,address,address,uint256,uint256,address,address)": {
            "params": {
              "asset_": "Address of the asset of the FutureVault.",
              "ibt_": "Address of the ibt of the FutureVault.",
              "maturity_": "The maturity time of the FutureVault.",
              "max_fees_": "Maximum fees of the FutureVault.",
              "name_": "Name of the FutureVault.",
              "registry_": "Address of the Registry contract of the FutureVault.",
              "symbol_": "Symbol of the FutureVault."
            },
            "returns": {
              "curvePoolAddress": "The address of the curve Pool deployed for ibt/pt.",
              "futureVault": "The address of the futureVault deployed."
            }
          },
          "getCurveFactoryAddress()": {
            "returns": {
              "_0": "the address of the curve factory"
            }
          },
          "getCurvePoolForFuture(address)": {
            "params": {
              "futureVault": "The address of the futureVault against which to to get the curve pool address."
            }
          },
          "getRegistryAddress()": {
            "returns": {
              "_0": "the address of the tokens factory"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setCurveAddressProvider(address)": {
            "params": {
              "curveAddressProvider_": "The address of the curveAddressProvider."
            }
          },
          "setRegistry(address)": {
            "params": {
              "_newRegistry": "the address of the token factory"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "The constructor of the FutureVaultFactory contract. Sets the value of futureVault and yt beacon."
          },
          "deployFutureVault(string,string,address,address,uint256,uint256,address,address)": {
            "notice": "Deploys the FutureVault contract implementation."
          },
          "getCurveFactoryAddress()": {
            "notice": "Getter for the curve factory address"
          },
          "getCurvePoolForFuture(address)": {
            "notice": "Getter for the curve pool against the associated futureVault"
          },
          "getRegistryAddress()": {
            "notice": "Getter for the registry address"
          },
          "setCurveAddressProvider(address)": {
            "notice": "Function which sets the curveAddressProvider address used in getting the curve factory address. Can only be called by owner."
          },
          "setRegistry(address)": {
            "notice": "Setter for the registry address, Can only be called by the owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/",
        ":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/",
        ":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/",
        ":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/",
        ":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/",
        ":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/factory/FutureVaultFactory.sol": "FutureVaultFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x7dce633611f5149fa8dec27ccd28b88dc590fecbebdb7785d1f6728dae1e1c4f",
        "urls": [
          "bzz-raw://e9974683c1eec209863fdec01d0c45d262302d62d7b972bc2ddcb25c33bc53fb",
          "dweb:/ipfs/QmSrcmeTka7VTz5HbjktmZdsMycARfadbCpjWTHiqwiqZC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol": {
        "keccak256": "0xe3d54e1a1a10fbc86fdfaf9100ba99c9c808588fd20d0c919457b903b5cae61a",
        "urls": [
          "bzz-raw://7e2f616c3ebcf6db05b9242b870f69bf902533cc3248e352b0e1e1a04d6da8b8",
          "dweb:/ipfs/QmbNV3EejvPoLWVXTjLRyHyFnaxdQoxpFkXMbZbPvDf7eq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
        "urls": [
          "bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
          "dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275",
        "urls": [
          "bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a",
          "dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC4626Upgradeable.sol": {
        "keccak256": "0x6a198681b522c536328050c34b419775d9bde12295488155d6068821d2e131cd",
        "urls": [
          "bzz-raw://e07c6e2a07689a960285b1c55c399cf2ea23ce932855265bd189beaf13d484e1",
          "dweb:/ipfs/QmaZ8rJTPYNs8Etb83wVNE7EriXNZFCtVm6dAR9BayXxYG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0xea49d64cd4c5556e61f1edc117cc74f2e69f14b524386ef6a336a58794191b34",
        "urls": [
          "bzz-raw://2a3e700c25793a01bb63bb38f10b6dd4d0569280fd393d9b95a142ecfa247838",
          "dweb:/ipfs/QmX1FPaRMbMo22EudVK2xQsdcVcbNk3XKkcrzuQfQQEtMH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x4586689c55edb37fc3cac296d75d3851b3aee3f378aaa54d8a9258a384fbf541",
        "urls": [
          "bzz-raw://0f3fb638e6f0d5279f6000579a71a482a7d3655aed62439549906e3584443c40",
          "dweb:/ipfs/QmangQhgXTvji3sAgNcvdnTs7ZR3KEwmHfw5DEAybxB7cw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
        "urls": [
          "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
          "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69",
        "urls": [
          "bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3",
          "dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xba55137b57f58e805ab97462fbfc7e4b66c093a6813e29cc3f5d1569d39c27cf",
        "urls": [
          "bzz-raw://c4bb6347403c2f3b1cf02b6108cc659730a564b0c5e629762dde8f5efe1e2a84",
          "dweb:/ipfs/QmTndaLNN7gioSQHg6Zu55Ysj7wUNCq11MV7JE7zt9nsGz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x5c04e814be62473d494fb8884c56327d98237df4d77668a4ab979ace139ff204",
        "urls": [
          "bzz-raw://a17916be90701e95b591bf18797c7e64bb614fa7bd3824533dde8594922e3979",
          "dweb:/ipfs/QmSRhaSy3g2Mp7MGxT6Ttfy7jiBeXr6iMVh2WNLRCzpZAF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xb49137b771712774960cca0acf428499e2aa85f179fe03712e5c06c5a6ab6316",
        "urls": [
          "bzz-raw://ec66760482c33d84dda577e3a7a4b81000a92e37cae5c8b55339e2d83abfce03",
          "dweb:/ipfs/QmVDSFsp9dnW8P92Yrq2jAjr9piKke8gjuZX5QjtFuZRfx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol": {
        "keccak256": "0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49",
        "urls": [
          "bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e",
          "dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b",
        "urls": [
          "bzz-raw://fb210cdef017f9813af368e17ea1573bc26094dd8dba8b5db8bec4cc90883d0a",
          "dweb:/ipfs/QmdixQwckiNVVWHaJD9ps5ALWsHkZGRAePkuUPw1ZhhJhM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x89bfffcd03b05b01af8dea42646c8118151e4fba967cde7064eb4acb697226d1",
        "urls": [
          "bzz-raw://13867b2b35c572397a233373750e30025c79ee32e23650b2bc3e384565e78d5f",
          "dweb:/ipfs/QmQscnGYq2XxbyvLgtyQNPT8ZwSbNsLxeH4pZyyae5yKA4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95",
        "urls": [
          "bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c",
          "dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d",
        "urls": [
          "bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4",
          "dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B"
        ],
        "license": "MIT"
      },
      "src/factory/FutureVaultFactory.sol": {
        "keccak256": "0x1c91824967d95f3d10d5d351dd0fec451584c1d7cfad0c328cee4025922c7e13",
        "urls": [
          "bzz-raw://8098bcf20c6e048fc71952a0fdda4b35cf6c3cc78cba107d3ef8e085a91eb01d",
          "dweb:/ipfs/Qme3EEe4r3Xn8wmL4HzW1EQrF6b3MCAcyERpUmKA7dDqnG"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IFutureVault.sol": {
        "keccak256": "0x0523d49ece7f1564ad51d6a76299c152156ed8f791df76505c7bd723ee85827e",
        "urls": [
          "bzz-raw://c4e9a0841bb4db3136fbcb9b1322225054a5f265fdb849ffc5a3e21610369ac4",
          "dweb:/ipfs/QmZgK3sf7sRNSwg6uYan3EB6JVMSvyMaG7UG7AmBLnDNH3"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IFutureVaultFactory.sol": {
        "keccak256": "0x6a780a97d9a34d63e5c043ffc9f556b028f81d87108f2bf833cbac55f8f3fc71",
        "urls": [
          "bzz-raw://c9f740b6cd269a656995ce1e9681a8ab95b56047e82d0559021cd5673b9a828b",
          "dweb:/ipfs/QmX3z5oh1xjHS4GzsN7iFZCnr7CqejwfAgYbUjsbCN9NUL"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0x41384cee7cd390107b94448c6f3d985a392fff762843b09cc9afc731f30079a5",
        "urls": [
          "bzz-raw://6e92c1971200f1836d55ad644d65e97e330271525b69bf0d81063256f041fd61",
          "dweb:/ipfs/QmXao4uATA85kurzoP4UGjDjBSbZh57esfo7W7frnFHcpD"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IYT.sol": {
        "keccak256": "0x080e1e2a73d078540ba1c5df1363ca1e6dd0a9868aafa751e7f7992b5bec7434",
        "urls": [
          "bzz-raw://3022340179362a27b3e486624b2e51cd2403988c9b09e0380ba3e8db272523d9",
          "dweb:/ipfs/QmWP87SpebEQSomZggfcsxqEWuqZJatDwDJGPKygmmHRo6"
        ],
        "license": "BUSL-1.1"
      },
      "src/tokens/APWineERC4626Upgradeable.sol": {
        "keccak256": "0x3ec78aff3c90da826258f911692bed1b5040fe7e882ff2b05143849b9882a844",
        "urls": [
          "bzz-raw://6940614a2533a4f56b94b12798782fa66b172a36adff6e67adc99b19f8210d1f",
          "dweb:/ipfs/QmStXegDmSsybgWgJ35qjPiMc9AGaRkGeKz3va7yvpib3X"
        ],
        "license": "BUSL-1.1"
      },
      "src/tokens/FutureVault.sol": {
        "keccak256": "0x98bbd6fd7243c00acb6d5f7cf5cfd1c6c059c8774daf414714cb9be2f53edd6d",
        "urls": [
          "bzz-raw://035b32c3f44753b03fc447535794ba59119bb019fb94a0e5e3b84681d26edd33",
          "dweb:/ipfs/QmXBkZAQqGxnGwrhJ3JjHUBtMSUKqYD7N7byWdPnAc3KUF"
        ],
        "license": "BUSL-1.1"
      },
      "src/tokens/YT.sol": {
        "keccak256": "0x8971d38eb3c16b428d49ac9d95bce4e21267995c85232d2edcdfa9216f171885",
        "urls": [
          "bzz-raw://48b21d38ed79bb383a84b7e0913b84eed80de88e9131ad5fac58711c0751b4e6",
          "dweb:/ipfs/QmTmKkg8JuEvoRAa8bykBLem2pKcdyDFM3kd1CTnRB3g4s"
        ],
        "license": "BUSL-1.1"
      },
      "src/util/NoDelegateCall.sol": {
        "keccak256": "0x6baf60ac8d7668648ac1a92438ad2523b7c438b70cb3f38fee4c3e380785db6b",
        "urls": [
          "bzz-raw://29431d3863626cd5598103606fc7829b2242384ad2157e5ea8b9b512a5b4bc0a",
          "dweb:/ipfs/QmNhoymJAC7VmSsHE1BWEeAHzXJaH57kba7Lyzagf6QFCt"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/factory/FutureVaultFactory.sol",
    "id": 38789,
    "exportedSymbols": {
      "APWineERC4626Upgradeable": [
        39760
      ],
      "Address": [
        33421
      ],
      "AddressUpgradeable": [
        28594
      ],
      "BeaconProxy": [
        33006
      ],
      "Context": [
        33443
      ],
      "ContextUpgradeable": [
        28636
      ],
      "CountersUpgradeable": [
        28710
      ],
      "ECDSAUpgradeable": [
        29246
      ],
      "EIP712Upgradeable": [
        29396
      ],
      "ERC1967Upgrade": [
        32888
      ],
      "ERC20PermitUpgradeable": [
        27993
      ],
      "ERC20Upgradeable": [
        26994
      ],
      "ERC4626Upgradeable": [
        27777
      ],
      "FutureVault": [
        42476
      ],
      "FutureVaultFactory": [
        38788
      ],
      "IBeacon": [
        33016
      ],
      "IERC1822Proxiable": [
        32570
      ],
      "IERC20MetadataUpgradeable": [
        27802
      ],
      "IERC20PermitUpgradeable": [
        28029
      ],
      "IERC20Upgradeable": [
        27072
      ],
      "IERC4626Upgradeable": [
        25920
      ],
      "IFutureVault": [
        39100
      ],
      "IFutureVaultFactory": [
        39147
      ],
      "IRegistry": [
        39223
      ],
      "IYT": [
        39238
      ],
      "Initializable": [
        26089
      ],
      "MathUpgradeable": [
        30317
      ],
      "NoDelegateCall": [
        42727
      ],
      "Ownable": [
        32477
      ],
      "Ownable2Step": [
        32560
      ],
      "Ownable2StepUpgradeable": [
        25617
      ],
      "OwnableUpgradeable": [
        25749
      ],
      "PausableUpgradeable": [
        26216
      ],
      "Proxy": [
        32940
      ],
      "SafeERC20Upgradeable": [
        28310
      ],
      "SafeMathUpgradeable": [
        30629
      ],
      "StorageSlot": [
        33503
      ],
      "StringsUpgradeable": [
        28885
      ],
      "YT": [
        42687
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:9760:74",
    "nodes": [
      {
        "id": 38306,
        "nodeType": "PragmaDirective",
        "src": "38:23:74",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 38307,
        "nodeType": "ImportDirective",
        "src": "63:36:74",
        "nodes": [],
        "absolutePath": "src/util/NoDelegateCall.sol",
        "file": "../util/NoDelegateCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 42728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38308,
        "nodeType": "ImportDirective",
        "src": "100:69:74",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "file": "openzeppelin-erc20-extensions/IERC20MetadataUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 27803,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38309,
        "nodeType": "ImportDirective",
        "src": "170:79:74",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/interfaces/IERC4626Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 25921,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38310,
        "nodeType": "ImportDirective",
        "src": "250:79:74",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 25618,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38311,
        "nodeType": "ImportDirective",
        "src": "330:47:74",
        "nodes": [],
        "absolutePath": "src/interfaces/IFutureVaultFactory.sol",
        "file": "../interfaces/IFutureVaultFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 39148,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38312,
        "nodeType": "ImportDirective",
        "src": "378:40:74",
        "nodes": [],
        "absolutePath": "src/interfaces/IFutureVault.sol",
        "file": "../interfaces/IFutureVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 39101,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38313,
        "nodeType": "ImportDirective",
        "src": "419:35:74",
        "nodes": [],
        "absolutePath": "src/tokens/FutureVault.sol",
        "file": "../tokens/FutureVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 42477,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38314,
        "nodeType": "ImportDirective",
        "src": "455:61:74",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "openzeppelin-contracts/proxy/beacon/BeaconProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 33007,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38315,
        "nodeType": "ImportDirective",
        "src": "517:56:74",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "openzeppelin-contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 32561,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38316,
        "nodeType": "ImportDirective",
        "src": "574:51:74",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38789,
        "sourceUnit": 32478,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38788,
        "nodeType": "ContractDefinition",
        "src": "653:9144:74",
        "nodes": [
          {
            "id": 38324,
            "nodeType": "VariableDeclaration",
            "src": "752:28:74",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "curveFactory",
            "nameLocation": "768:12:74",
            "scope": 38788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38323,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "752:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38326,
            "nodeType": "VariableDeclaration",
            "src": "786:24:74",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "registry",
            "nameLocation": "802:8:74",
            "scope": 38788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38325,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "786:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38328,
            "nodeType": "VariableDeclaration",
            "src": "816:53:74",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "futureVaultBeaconUpgradable",
            "nameLocation": "842:27:74",
            "scope": 38788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38327,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "816:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38330,
            "nodeType": "VariableDeclaration",
            "src": "875:44:74",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "ytBeaconUpgradable",
            "nameLocation": "901:18:74",
            "scope": 38788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38329,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "875:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38332,
            "nodeType": "VariableDeclaration",
            "src": "925:35:74",
            "nodes": [],
            "constant": false,
            "functionSelector": "3d6e7388",
            "mutability": "mutable",
            "name": "curveAddressProvider",
            "nameLocation": "940:20:74",
            "scope": 38788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38331,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "925:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38336,
            "nodeType": "VariableDeclaration",
            "src": "966:51:74",
            "nodes": [],
            "constant": false,
            "functionSelector": "30791840",
            "mutability": "mutable",
            "name": "futureIbtPoolMap",
            "nameLocation": "1001:16:74",
            "scope": 38788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 38335,
              "keyType": {
                "id": 38333,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "974:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "966:27:74",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 38334,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:74",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 38342,
            "nodeType": "EventDefinition",
            "src": "1041:108:74",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f2e9c5a829e7edb160874d831d5e5dd7b7a39eee7cb6edf273681bd464492840",
            "name": "FutureVaultDeployed",
            "nameLocation": "1047:19:74",
            "parameters": {
              "id": 38341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38338,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_futureVault",
                  "nameLocation": "1092:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38342,
                  "src": "1076:28:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38340,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_poolCreator",
                  "nameLocation": "1130:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38342,
                  "src": "1114:28:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1066:82:74"
            }
          },
          {
            "id": 38346,
            "nodeType": "EventDefinition",
            "src": "1154:54:74",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6c3db3b505f1ce26138fce10683cfc5e051aa53990b272acf8944fb87c76b9fb",
            "name": "CurveFactoryChanged",
            "nameLocation": "1160:19:74",
            "parameters": {
              "id": 38345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38344,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newFactory",
                  "nameLocation": "1196:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38346,
                  "src": "1180:26:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1179:28:74"
            }
          },
          {
            "id": 38350,
            "nodeType": "EventDefinition",
            "src": "1213:68:74",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "48595b0c6ad20fb5dc4bbce6134112d1c63908e36de330ff3ae2588af19fa9ea",
            "name": "CurveAddressProviderSet",
            "nameLocation": "1219:23:74",
            "parameters": {
              "id": 38349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38348,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "curveAddressProvider",
                  "nameLocation": "1259:20:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38350,
                  "src": "1243:36:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:38:74"
            }
          },
          {
            "id": 38358,
            "nodeType": "EventDefinition",
            "src": "1286:108:74",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "3c7b686d948efcba31c9cfd1aeae78faac70fe0c1ed90d151d49c75e85027a91",
            "name": "CurvePoolDeployed",
            "nameLocation": "1292:17:74",
            "parameters": {
              "id": 38357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38352,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "1335:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38358,
                  "src": "1319:27:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38354,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ibt",
                  "nameLocation": "1364:3:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38358,
                  "src": "1356:11:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pt",
                  "nameLocation": "1385:2:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38358,
                  "src": "1377:10:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1309:84:74"
            }
          },
          {
            "id": 38364,
            "nodeType": "EventDefinition",
            "src": "1399:102:74",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b82",
            "name": "RegistryUpdated",
            "nameLocation": "1405:15:74",
            "parameters": {
              "id": 38363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38360,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldRegistry",
                  "nameLocation": "1446:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38364,
                  "src": "1430:27:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38362,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newRegistry",
                  "nameLocation": "1483:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38364,
                  "src": "1467:27:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1420:80:74"
            }
          },
          {
            "id": 38403,
            "nodeType": "FunctionDefinition",
            "src": "1636:546:74",
            "nodes": [],
            "body": {
              "id": 38402,
              "nodeType": "Block",
              "src": "1747:435:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38375,
                          "name": "_futureVaultBeaconUpgradable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38367,
                          "src": "1778:28:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1818:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1810:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38376,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1810:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1810:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1778:42:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4675747572655661756c74466163746f72793a206675747572655661756c7420626561636f6e20616464726573732073686f756c64206e6f74206265207a65726f",
                        "id": 38381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1834:67:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0091c354c285b84d865703ec7abfcafa0e156a00e02a551b741ab7e2d6e77de",
                          "typeString": "literal_string \"FutureVaultFactory: futureVault beacon address should not be zero\""
                        },
                        "value": "FutureVaultFactory: futureVault beacon address should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0091c354c285b84d865703ec7abfcafa0e156a00e02a551b741ab7e2d6e77de",
                          "typeString": "literal_string \"FutureVaultFactory: futureVault beacon address should not be zero\""
                        }
                      ],
                      "id": 38374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1757:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1757:154:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38383,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:154:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38385,
                          "name": "_ytBeaconUpgradable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38369,
                          "src": "1942:19:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1973:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1965:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38386,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1965:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1965:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1942:33:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4675747572655661756c74466163746f72793a20797420626561636f6e20616464726573732073686f756c64206e6f74206265207a65726f",
                        "id": 38391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1989:58:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98d1956825c5f4da260786e2303f2bec90eee18e8ecffa358381746da194e5cc",
                          "typeString": "literal_string \"FutureVaultFactory: yt beacon address should not be zero\""
                        },
                        "value": "FutureVaultFactory: yt beacon address should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98d1956825c5f4da260786e2303f2bec90eee18e8ecffa358381746da194e5cc",
                          "typeString": "literal_string \"FutureVaultFactory: yt beacon address should not be zero\""
                        }
                      ],
                      "id": 38384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1921:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:136:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38393,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:136:74"
                },
                {
                  "expression": {
                    "id": 38396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38394,
                      "name": "futureVaultBeaconUpgradable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38328,
                      "src": "2067:27:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38395,
                      "name": "_futureVaultBeaconUpgradable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38367,
                      "src": "2097:28:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2067:58:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38397,
                  "nodeType": "ExpressionStatement",
                  "src": "2067:58:74"
                },
                {
                  "expression": {
                    "id": 38400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38398,
                      "name": "ytBeaconUpgradable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38330,
                      "src": "2135:18:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38399,
                      "name": "_ytBeaconUpgradable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38369,
                      "src": "2156:19:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2135:40:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38401,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:40:74"
                }
              ]
            },
            "documentation": {
              "id": 38365,
              "nodeType": "StructuredDocumentation",
              "src": "1507:124:74",
              "text": "@notice The constructor of the FutureVaultFactory contract.\nSets the value of futureVault and yt beacon."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 38372,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 38371,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32477,
                  "src": "1737:7:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "1737:9:74"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38367,
                  "mutability": "mutable",
                  "name": "_futureVaultBeaconUpgradable",
                  "nameLocation": "1665:28:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38403,
                  "src": "1657:36:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38369,
                  "mutability": "mutable",
                  "name": "_ytBeaconUpgradable",
                  "nameLocation": "1711:19:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38403,
                  "src": "1703:27:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:89:74"
            },
            "returnParameters": {
              "id": 38373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1747:0:74"
            },
            "scope": 38788,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38428,
            "nodeType": "StructDefinition",
            "src": "2188:444:74",
            "nodes": [],
            "canonicalName": "FutureVaultFactory.PoolSetting",
            "members": [
              {
                "constant": false,
                "id": 38405,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "2320:4:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2313:11:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 38404,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2313:6:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38407,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "2341:6:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2334:13:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 38406,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2334:6:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38409,
                "mutability": "mutable",
                "name": "A",
                "nameLocation": "2365:1:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2357:9:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38408,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2357:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38411,
                "mutability": "mutable",
                "name": "gamma",
                "nameLocation": "2384:5:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2376:13:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38410,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2376:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38413,
                "mutability": "mutable",
                "name": "mid_fee",
                "nameLocation": "2407:7:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2399:15:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38412,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2399:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38415,
                "mutability": "mutable",
                "name": "out_fee",
                "nameLocation": "2432:7:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2424:15:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38414,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2424:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38417,
                "mutability": "mutable",
                "name": "allowed_extra_profit",
                "nameLocation": "2457:20:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2449:28:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38416,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2449:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38419,
                "mutability": "mutable",
                "name": "fee_gamma",
                "nameLocation": "2495:9:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2487:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38418,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2487:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38421,
                "mutability": "mutable",
                "name": "adjustment_step",
                "nameLocation": "2522:15:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2514:23:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38420,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2514:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38423,
                "mutability": "mutable",
                "name": "admin_fee",
                "nameLocation": "2555:9:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2547:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38422,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2547:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38425,
                "mutability": "mutable",
                "name": "ma_half_time",
                "nameLocation": "2582:12:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2574:20:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38424,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2574:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38427,
                "mutability": "mutable",
                "name": "initial_price",
                "nameLocation": "2612:13:74",
                "nodeType": "VariableDeclaration",
                "scope": 38428,
                "src": "2604:21:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38426,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2604:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PoolSetting",
            "nameLocation": "2195:11:74",
            "scope": 38788,
            "visibility": "public"
          },
          {
            "id": 38433,
            "nodeType": "StructDefinition",
            "src": "2638:179:74",
            "nodes": [],
            "canonicalName": "FutureVaultFactory.DeploymentResponse",
            "members": [
              {
                "constant": false,
                "id": 38430,
                "mutability": "mutable",
                "name": "success",
                "nameLocation": "2775:7:74",
                "nodeType": "VariableDeclaration",
                "scope": 38433,
                "src": "2770:12:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 38429,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2770:4:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38432,
                "mutability": "mutable",
                "name": "responseData",
                "nameLocation": "2798:12:74",
                "nodeType": "VariableDeclaration",
                "scope": 38433,
                "src": "2792:18:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 38431,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "2792:5:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DeploymentResponse",
            "nameLocation": "2645:18:74",
            "scope": 38788,
            "visibility": "public"
          },
          {
            "id": 38527,
            "nodeType": "FunctionDefinition",
            "src": "3464:1441:74",
            "nodes": [],
            "body": {
              "id": 38526,
              "nodeType": "Block",
              "src": "3843:1062:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 38463,
                              "name": "futureVaultBeaconUpgradable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38328,
                              "src": "3882:27:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3874:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38461,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3874:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3874:36:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3922:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3914:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38465,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3914:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3914:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3874:50:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4675747572655661756c74466163746f72793a204675747572655661756c7420426561636f6e206973206e6f7420736574",
                        "id": 38470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3938:51:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eae197ea73afee6393897881dfc47087de4cea5a2feddb7834a787919bf34627",
                          "typeString": "literal_string \"FutureVaultFactory: FutureVault Beacon is not set\""
                        },
                        "value": "FutureVaultFactory: FutureVault Beacon is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eae197ea73afee6393897881dfc47087de4cea5a2feddb7834a787919bf34627",
                          "typeString": "literal_string \"FutureVaultFactory: FutureVault Beacon is not set\""
                        }
                      ],
                      "id": 38460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3853:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3853:146:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38472,
                  "nodeType": "ExpressionStatement",
                  "src": "3853:146:74"
                },
                {
                  "expression": {
                    "id": 38501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38473,
                      "name": "futureVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38456,
                      "src": "4010:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 38479,
                              "name": "futureVaultBeaconUpgradable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38328,
                              "src": "4078:27:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "30",
                                              "id": 38485,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "4187:1:74",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              }
                                            ],
                                            "id": 38484,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4179:7:74",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 38483,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4179:7:74",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 38486,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4179:10:74",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 38482,
                                        "name": "FutureVault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 42476,
                                        "src": "4167:11:74",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_FutureVault_$42476_$",
                                          "typeString": "type(contract FutureVault)"
                                        }
                                      },
                                      "id": 38487,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4167:23:74",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_FutureVault_$42476",
                                        "typeString": "contract FutureVault"
                                      }
                                    },
                                    "id": 38488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initialize",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40312,
                                    "src": "4167:34:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_contract$_IERC20MetadataUpgradeable_$27802_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                                      "typeString": "function (string memory,string memory,address,contract IERC20MetadataUpgradeable,uint256,uint256,address,address) external"
                                    }
                                  },
                                  "id": 38489,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "4167:43:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 38490,
                                  "name": "name_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38436,
                                  "src": "4232:5:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 38491,
                                  "name": "symbol_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38438,
                                  "src": "4259:7:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 38492,
                                  "name": "ibt_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38442,
                                  "src": "4288:4:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 38493,
                                  "name": "asset_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38440,
                                  "src": "4314:6:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 38494,
                                  "name": "maturity_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38444,
                                  "src": "4342:9:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 38495,
                                  "name": "max_fees_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38446,
                                  "src": "4373:9:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 38496,
                                  "name": "registry_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38448,
                                  "src": "4404:9:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 38497,
                                  "name": "ytBeaconUpgradable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38330,
                                  "src": "4435:18:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 38480,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4123:3:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 38481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "4123:22:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 38498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4123:348:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 38478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "4045:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$33006_$",
                              "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                            },
                            "typeName": {
                              "id": 38477,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 38476,
                                "name": "BeaconProxy",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 33006,
                                "src": "4049:11:74"
                              },
                              "referencedDeclaration": 33006,
                              "src": "4049:11:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeaconProxy_$33006",
                                "typeString": "contract BeaconProxy"
                              }
                            }
                          },
                          "id": 38499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4045:440:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeaconProxy_$33006",
                            "typeString": "contract BeaconProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeaconProxy_$33006",
                            "typeString": "contract BeaconProxy"
                          }
                        ],
                        "id": 38475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4024:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 38474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4024:7:74",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 38500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4024:471:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4010:485:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38502,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:485:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38504,
                        "name": "futureVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38456,
                        "src": "4531:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 38505,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4544:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4544:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38503,
                      "name": "FutureVaultDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38342,
                      "src": "4511:19:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 38507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4511:44:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38508,
                  "nodeType": "EmitStatement",
                  "src": "4506:49:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38513,
                        "name": "futureVaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38450,
                        "src": "4710:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 38510,
                            "name": "futureVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38456,
                            "src": "4666:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38509,
                          "name": "Ownable2StepUpgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25617,
                          "src": "4642:23:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Ownable2StepUpgradeable_$25617_$",
                            "typeString": "type(contract Ownable2StepUpgradeable)"
                          }
                        },
                        "id": 38511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4642:36:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable2StepUpgradeable_$25617",
                          "typeString": "contract Ownable2StepUpgradeable"
                        }
                      },
                      "id": 38512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25572,
                      "src": "4642:54:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 38514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4642:94:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38515,
                  "nodeType": "ExpressionStatement",
                  "src": "4642:94:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38517,
                        "name": "futureVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38456,
                        "src": "4828:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38516,
                      "name": "_deployCurvePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38727,
                      "src": "4811:16:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:29:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38519,
                  "nodeType": "ExpressionStatement",
                  "src": "4811:29:74"
                },
                {
                  "expression": {
                    "id": 38524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38520,
                      "name": "curvePoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38458,
                      "src": "4850:16:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 38521,
                        "name": "futureIbtPoolMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38336,
                        "src": "4869:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 38523,
                      "indexExpression": {
                        "id": 38522,
                        "name": "futureVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38456,
                        "src": "4886:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4869:29:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4850:48:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38525,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:48:74"
                }
              ]
            },
            "baseFunctions": [
              39126
            ],
            "documentation": {
              "id": 38434,
              "nodeType": "StructuredDocumentation",
              "src": "2823:636:74",
              "text": " @notice Deploys the FutureVault contract implementation.\n @param name_ Name of the FutureVault.\n @param symbol_ Symbol of the FutureVault.\n @param asset_ Address of the asset of the FutureVault.\n @param ibt_ Address of the ibt of the FutureVault.\n @param maturity_ The maturity time of the FutureVault.\n @param max_fees_ Maximum fees of the FutureVault.\n @param registry_ Address of the Registry contract of the FutureVault.\n @return futureVault The address of the futureVault deployed.\n @return curvePoolAddress The address of the curve Pool deployed for ibt/pt."
            },
            "functionSelector": "0556c69e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38454,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38453,
                  "name": "noDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42726,
                  "src": "3760:14:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "3760:14:74"
              }
            ],
            "name": "deployFutureVault",
            "nameLocation": "3473:17:74",
            "overrides": {
              "id": 38452,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3743:8:74"
            },
            "parameters": {
              "id": 38451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38436,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "3514:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3500:19:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38435,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38438,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "3543:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3529:21:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38437,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3529:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38440,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "3568:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3560:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3560:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38442,
                  "mutability": "mutable",
                  "name": "ibt_",
                  "nameLocation": "3592:4:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3584:12:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38444,
                  "mutability": "mutable",
                  "name": "maturity_",
                  "nameLocation": "3614:9:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3606:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38446,
                  "mutability": "mutable",
                  "name": "max_fees_",
                  "nameLocation": "3641:9:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3633:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3633:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38448,
                  "mutability": "mutable",
                  "name": "registry_",
                  "nameLocation": "3668:9:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3660:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38450,
                  "mutability": "mutable",
                  "name": "futureVaultAdmin",
                  "nameLocation": "3695:16:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3687:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3687:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3490:227:74"
            },
            "returnParameters": {
              "id": 38459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38456,
                  "mutability": "mutable",
                  "name": "futureVault",
                  "nameLocation": "3800:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3792:19:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38458,
                  "mutability": "mutable",
                  "name": "curvePoolAddress",
                  "nameLocation": "3821:16:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38527,
                  "src": "3813:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3813:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3791:47:74"
            },
            "scope": 38788,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38559,
            "nodeType": "FunctionDefinition",
            "src": "5148:430:74",
            "nodes": [],
            "body": {
              "id": 38558,
              "nodeType": "Block",
              "src": "5244:334:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38534,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32419,
                      "src": "5254:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 38535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5254:13:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38536,
                  "nodeType": "ExpressionStatement",
                  "src": "5254:13:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38538,
                          "name": "curveAddressProvider_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38530,
                          "src": "5298:21:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5331:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5323:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38539,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5323:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5323:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5298:35:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4675747572655661756c74466163746f72793a2043616e6e6f742073657420637572766520616464726573732070726f766964657220746f207a65726f2061646472657373",
                        "id": 38544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5347:71:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4105726bfb01fff8d12ce8e59924dccc1f955ea9ce2d8d534d73f9ed3ce520ab",
                          "typeString": "literal_string \"FutureVaultFactory: Cannot set curve address provider to zero address\""
                        },
                        "value": "FutureVaultFactory: Cannot set curve address provider to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4105726bfb01fff8d12ce8e59924dccc1f955ea9ce2d8d534d73f9ed3ce520ab",
                          "typeString": "literal_string \"FutureVaultFactory: Cannot set curve address provider to zero address\""
                        }
                      ],
                      "id": 38537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5277:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5277:151:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38546,
                  "nodeType": "ExpressionStatement",
                  "src": "5277:151:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38548,
                        "name": "curveAddressProvider_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38530,
                        "src": "5467:21:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38547,
                      "name": "CurveAddressProviderSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38350,
                      "src": "5443:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5443:46:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38550,
                  "nodeType": "EmitStatement",
                  "src": "5438:51:74"
                },
                {
                  "expression": {
                    "id": 38553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38551,
                      "name": "curveAddressProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38332,
                      "src": "5499:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38552,
                      "name": "curveAddressProvider_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38530,
                      "src": "5522:21:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5499:44:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38554,
                  "nodeType": "ExpressionStatement",
                  "src": "5499:44:74"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38555,
                      "name": "_setCurveFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38787,
                      "src": "5553:16:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:18:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38557,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:18:74"
                }
              ]
            },
            "baseFunctions": [
              39132
            ],
            "documentation": {
              "id": 38528,
              "nodeType": "StructuredDocumentation",
              "src": "4911:232:74",
              "text": " @notice Function which sets the curveAddressProvider address used in\ngetting the curve factory address. Can only be called by owner.\n @param curveAddressProvider_ The address of the curveAddressProvider."
            },
            "functionSelector": "9bc3d098",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCurveAddressProvider",
            "nameLocation": "5157:23:74",
            "overrides": {
              "id": 38532,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5235:8:74"
            },
            "parameters": {
              "id": 38531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38530,
                  "mutability": "mutable",
                  "name": "curveAddressProvider_",
                  "nameLocation": "5198:21:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38559,
                  "src": "5190:29:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5190:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5180:45:74"
            },
            "returnParameters": {
              "id": 38533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5244:0:74"
            },
            "scope": 38788,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38573,
            "nodeType": "FunctionDefinition",
            "src": "5785:160:74",
            "nodes": [],
            "body": {
              "id": 38572,
              "nodeType": "Block",
              "src": "5892:53:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 38568,
                      "name": "futureIbtPoolMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38336,
                      "src": "5909:16:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 38570,
                    "indexExpression": {
                      "id": 38569,
                      "name": "futureVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38562,
                      "src": "5926:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5909:29:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 38567,
                  "id": 38571,
                  "nodeType": "Return",
                  "src": "5902:36:74"
                }
              ]
            },
            "baseFunctions": [
              39146
            ],
            "documentation": {
              "id": 38560,
              "nodeType": "StructuredDocumentation",
              "src": "5584:196:74",
              "text": " @notice Getter for the curve pool against the associated futureVault\n @param futureVault The address of the futureVault against which to\nto get the curve pool address."
            },
            "functionSelector": "d0d1f3c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurvePoolForFuture",
            "nameLocation": "5794:21:74",
            "overrides": {
              "id": 38564,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5865:8:74"
            },
            "parameters": {
              "id": 38563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38562,
                  "mutability": "mutable",
                  "name": "futureVault",
                  "nameLocation": "5833:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38573,
                  "src": "5825:19:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5825:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5815:35:74"
            },
            "returnParameters": {
              "id": 38567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38566,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38573,
                  "src": "5883:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5883:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5882:9:74"
            },
            "scope": 38788,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38602,
            "nodeType": "FunctionDefinition",
            "src": "6108:305:74",
            "nodes": [],
            "body": {
              "id": 38601,
              "nodeType": "Block",
              "src": "6158:255:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38579,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32419,
                      "src": "6168:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 38580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6168:13:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38581,
                  "nodeType": "ExpressionStatement",
                  "src": "6168:13:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38583,
                          "name": "_newRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38576,
                          "src": "6212:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6236:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6228:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38584,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6228:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6228:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6212:26:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4675747572655661756c74466163746f72793a2043616e6e6f742073657420726567697374727920746f207a65726f2061646472657373",
                        "id": 38589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6252:57:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_062027423c9d65dc5aaca89426fe03b879924be35f5ced3270391fdf985219fa",
                          "typeString": "literal_string \"FutureVaultFactory: Cannot set registry to zero address\""
                        },
                        "value": "FutureVaultFactory: Cannot set registry to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_062027423c9d65dc5aaca89426fe03b879924be35f5ced3270391fdf985219fa",
                          "typeString": "literal_string \"FutureVaultFactory: Cannot set registry to zero address\""
                        }
                      ],
                      "id": 38582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6191:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6191:128:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38591,
                  "nodeType": "ExpressionStatement",
                  "src": "6191:128:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38593,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38326,
                        "src": "6350:8:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38594,
                        "name": "_newRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38576,
                        "src": "6360:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38592,
                      "name": "RegistryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38364,
                      "src": "6334:15:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 38595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6334:39:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38596,
                  "nodeType": "EmitStatement",
                  "src": "6329:44:74"
                },
                {
                  "expression": {
                    "id": 38599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38597,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38326,
                      "src": "6383:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38598,
                      "name": "_newRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38576,
                      "src": "6394:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6383:23:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38600,
                  "nodeType": "ExpressionStatement",
                  "src": "6383:23:74"
                }
              ]
            },
            "documentation": {
              "id": 38574,
              "nodeType": "StructuredDocumentation",
              "src": "5951:152:74",
              "text": " @notice Setter for the registry address, Can only be called by the owner.\n @param _newRegistry the address of the token factory"
            },
            "functionSelector": "a91ee0dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRegistry",
            "nameLocation": "6117:11:74",
            "parameters": {
              "id": 38577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38576,
                  "mutability": "mutable",
                  "name": "_newRegistry",
                  "nameLocation": "6137:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38602,
                  "src": "6129:20:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6129:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6128:22:74"
            },
            "returnParameters": {
              "id": 38578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6158:0:74"
            },
            "scope": 38788,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38611,
            "nodeType": "FunctionDefinition",
            "src": "6557:92:74",
            "nodes": [],
            "body": {
              "id": 38610,
              "nodeType": "Block",
              "src": "6617:32:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38608,
                    "name": "registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38326,
                    "src": "6634:8:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 38607,
                  "id": 38609,
                  "nodeType": "Return",
                  "src": "6627:15:74"
                }
              ]
            },
            "documentation": {
              "id": 38603,
              "nodeType": "StructuredDocumentation",
              "src": "6445:107:74",
              "text": " @notice Getter for the registry address\n @return the address of the tokens factory"
            },
            "functionSelector": "f21de1e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistryAddress",
            "nameLocation": "6566:18:74",
            "parameters": {
              "id": 38604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6584:2:74"
            },
            "returnParameters": {
              "id": 38607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38611,
                  "src": "6608:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6608:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6607:9:74"
            },
            "scope": 38788,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38621,
            "nodeType": "FunctionDefinition",
            "src": "6771:109:74",
            "nodes": [],
            "body": {
              "id": 38620,
              "nodeType": "Block",
              "src": "6844:36:74",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38618,
                    "name": "curveFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38324,
                    "src": "6861:12:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 38617,
                  "id": 38619,
                  "nodeType": "Return",
                  "src": "6854:19:74"
                }
              ]
            },
            "baseFunctions": [
              39138
            ],
            "documentation": {
              "id": 38612,
              "nodeType": "StructuredDocumentation",
              "src": "6655:111:74",
              "text": " @notice Getter for the curve factory address\n @return the address of the curve factory"
            },
            "functionSelector": "d1136096",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurveFactoryAddress",
            "nameLocation": "6780:22:74",
            "overrides": {
              "id": 38614,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6817:8:74"
            },
            "parameters": {
              "id": 38613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6802:2:74"
            },
            "returnParameters": {
              "id": 38617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38621,
                  "src": "6835:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6835:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6834:9:74"
            },
            "scope": 38788,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38727,
            "nodeType": "FunctionDefinition",
            "src": "7052:1427:74",
            "nodes": [],
            "body": {
              "id": 38726,
              "nodeType": "Block",
              "src": "7108:1371:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38632,
                      "mutability": "mutable",
                      "name": "coins",
                      "nameLocation": "7136:5:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38726,
                      "src": "7118:23:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7118:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38631,
                        "length": {
                          "hexValue": "32",
                          "id": 38629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7126:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "7118:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38633,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7118:23:74"
                },
                {
                  "expression": {
                    "id": 38642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 38634,
                        "name": "coins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38632,
                        "src": "7151:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      "id": 38636,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 38635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7157:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7151:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 38638,
                              "name": "futureVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38624,
                              "src": "7175:11:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38637,
                            "name": "IFutureVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39100,
                            "src": "7162:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFutureVault_$39100_$",
                              "typeString": "type(contract IFutureVault)"
                            }
                          },
                          "id": 38639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7162:25:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFutureVault_$39100",
                            "typeString": "contract IFutureVault"
                          }
                        },
                        "id": 38640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getIBT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39069,
                        "src": "7162:32:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () external returns (address)"
                        }
                      },
                      "id": 38641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7162:34:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7151:45:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38643,
                  "nodeType": "ExpressionStatement",
                  "src": "7151:45:74"
                },
                {
                  "expression": {
                    "id": 38648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 38644,
                        "name": "coins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38632,
                        "src": "7206:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                          "typeString": "address[2] memory"
                        }
                      },
                      "id": 38646,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 38645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7212:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7206:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38647,
                      "name": "futureVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38624,
                      "src": "7217:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7206:22:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38649,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:22:74"
                },
                {
                  "assignments": [
                    38651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38651,
                      "mutability": "mutable",
                      "name": "ASSET_UNIT",
                      "nameLocation": "7246:10:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38726,
                      "src": "7238:18:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7238:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38661,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 38652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7259:2:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 38654,
                                "name": "coins",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38632,
                                "src": "7303:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 38656,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 38655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7309:1:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7303:8:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38653,
                            "name": "IERC20MetadataUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27802,
                            "src": "7277:25:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20MetadataUpgradeable_$27802_$",
                              "typeString": "type(contract IERC20MetadataUpgradeable)"
                            }
                          },
                          "id": 38657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7277:35:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20MetadataUpgradeable_$27802",
                            "typeString": "contract IERC20MetadataUpgradeable"
                          }
                        },
                        "id": 38658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27801,
                        "src": "7277:44:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 38659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7277:46:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "7259:64:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7238:85:74"
                },
                {
                  "assignments": [
                    38663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38663,
                      "mutability": "mutable",
                      "name": "intitalPrice",
                      "nameLocation": "7341:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38726,
                      "src": "7333:20:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7333:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38670,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38668,
                        "name": "ASSET_UNIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38651,
                        "src": "7411:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 38665,
                            "name": "futureVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38624,
                            "src": "7369:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38664,
                          "name": "IFutureVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39100,
                          "src": "7356:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFutureVault_$39100_$",
                            "typeString": "type(contract IFutureVault)"
                          }
                        },
                        "id": 38666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7356:25:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFutureVault_$39100",
                          "typeString": "contract IFutureVault"
                        }
                      },
                      "id": 38667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "convertToShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25803,
                      "src": "7356:41:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 38669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7356:75:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7333:98:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38672,
                          "name": "curveFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38324,
                          "src": "7462:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7486:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7478:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38673,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7478:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7478:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7462:26:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4675747572655661756c74466163746f72793a20637572766520666163746f72792061646472657373206973206e6f7420736574",
                        "id": 38678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7502:54:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_218a45c57823c006eb289eeb90259a5ac718b3943cd9a1841195f7c8c1a13104",
                          "typeString": "literal_string \"FutureVaultFactory: curve factory address is not set\""
                        },
                        "value": "FutureVaultFactory: curve factory address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_218a45c57823c006eb289eeb90259a5ac718b3943cd9a1841195f7c8c1a13104",
                          "typeString": "literal_string \"FutureVaultFactory: curve factory address is not set\""
                        }
                      ],
                      "id": 38671,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7441:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7441:125:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38680,
                  "nodeType": "ExpressionStatement",
                  "src": "7441:125:74"
                },
                {
                  "assignments": [
                    38682,
                    38684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38682,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7582:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38726,
                      "src": "7577:12:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 38681,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7577:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38684,
                      "mutability": "mutable",
                      "name": "responseData",
                      "nameLocation": "7604:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38726,
                      "src": "7591:25:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 38683,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7591:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38705,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30786339353566613034",
                            "id": 38689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7691:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3377854980_by_1",
                              "typeString": "int_const 3377854980"
                            },
                            "value": "0xc955fa04"
                          },
                          {
                            "hexValue": "46565f504f4f4c5f415057",
                            "id": 38690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7719:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3327f20cd10f7cff267d039ffced8edb06ffc04cd01551cb6b49ccdc916fb703",
                              "typeString": "literal_string \"FV_POOL_APW\""
                            },
                            "value": "FV_POOL_APW"
                          },
                          {
                            "hexValue": "4150572f50542f494254",
                            "id": 38691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7750:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_63b33086eb3098539866b1fd6060f33c3d7530bb4d54136c0b482b01945499cd",
                              "typeString": "literal_string \"APW/PT/IBT\""
                            },
                            "value": "APW/PT/IBT"
                          },
                          {
                            "id": 38692,
                            "name": "coins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38632,
                            "src": "7780:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                              "typeString": "address[2] memory"
                            }
                          },
                          {
                            "hexValue": "323030303030303030",
                            "id": 38693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7814:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200000000_by_1",
                              "typeString": "int_const 200000000"
                            },
                            "value": "200000000"
                          },
                          {
                            "hexValue": "313030303030303030303030303030",
                            "id": 38694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7846:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            },
                            "value": "100000000000000"
                          },
                          {
                            "hexValue": "3135303030303030",
                            "id": 38695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7888:8:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15000000_by_1",
                              "typeString": "int_const 15000000"
                            },
                            "value": "15000000"
                          },
                          {
                            "hexValue": "3530303030303030",
                            "id": 38696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7924:8:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000_by_1",
                              "typeString": "int_const 50000000"
                            },
                            "value": "50000000"
                          },
                          {
                            "hexValue": "3130303030303030303030",
                            "id": 38697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7960:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "value": "10000000000"
                          },
                          {
                            "hexValue": "35303030303030303030303030303030",
                            "id": 38698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8012:16:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5000000000000000_by_1",
                              "typeString": "int_const 5000000000000000"
                            },
                            "value": "5000000000000000"
                          },
                          {
                            "hexValue": "35353030303030303030303030",
                            "id": 38699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8058:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5500000000000_by_1",
                              "typeString": "int_const 5500000000000"
                            },
                            "value": "5500000000000"
                          },
                          {
                            "hexValue": "35303030303030303030",
                            "id": 38700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8107:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5000000000_by_1",
                              "typeString": "int_const 5000000000"
                            },
                            "value": "5000000000"
                          },
                          {
                            "hexValue": "363030",
                            "id": 38701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8147:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_600_by_1",
                              "typeString": "int_const 600"
                            },
                            "value": "600"
                          },
                          {
                            "id": 38702,
                            "name": "intitalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38663,
                            "src": "8183:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3377854980_by_1",
                              "typeString": "int_const 3377854980"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_3327f20cd10f7cff267d039ffced8edb06ffc04cd01551cb6b49ccdc916fb703",
                              "typeString": "literal_string \"FV_POOL_APW\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_63b33086eb3098539866b1fd6060f33c3d7530bb4d54136c0b482b01945499cd",
                              "typeString": "literal_string \"APW/PT/IBT\""
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                              "typeString": "address[2] memory"
                            },
                            {
                              "typeIdentifier": "t_rational_200000000_by_1",
                              "typeString": "int_const 200000000"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000_by_1",
                              "typeString": "int_const 100000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_15000000_by_1",
                              "typeString": "int_const 15000000"
                            },
                            {
                              "typeIdentifier": "t_rational_50000000_by_1",
                              "typeString": "int_const 50000000"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_5000000000000000_by_1",
                              "typeString": "int_const 5000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_5500000000000_by_1",
                              "typeString": "int_const 5500000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_5000000000_by_1",
                              "typeString": "int_const 5000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_600_by_1",
                              "typeString": "int_const 600"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 38687,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7651:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 38688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7651:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 38703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7651:574:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 38685,
                        "name": "curveFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38324,
                        "src": "7620:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 38686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "7620:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 38704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7620:615:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7576:659:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38707,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38682,
                        "src": "8254:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706c6f796d656e74206661696c6564",
                        "id": 38708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8263:19:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df4196cdd8093b867a038f5649beeb69c5f80335070d1b49bc3485eb65d92e43",
                          "typeString": "literal_string \"deployment failed\""
                        },
                        "value": "deployment failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df4196cdd8093b867a038f5649beeb69c5f80335070d1b49bc3485eb65d92e43",
                          "typeString": "literal_string \"deployment failed\""
                        }
                      ],
                      "id": 38706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8246:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8246:37:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38710,
                  "nodeType": "ExpressionStatement",
                  "src": "8246:37:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38712,
                        "name": "responseData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38684,
                        "src": "8314:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 38713,
                        "name": "futureVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38624,
                        "src": "8328:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38711,
                      "name": "_setCurvePoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38746,
                      "src": "8293:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (bytes memory,address)"
                      }
                    },
                    "id": 38714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8293:47:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38715,
                  "nodeType": "ExpressionStatement",
                  "src": "8293:47:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 38717,
                          "name": "futureIbtPoolMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38336,
                          "src": "8386:16:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 38719,
                        "indexExpression": {
                          "id": 38718,
                          "name": "futureVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38624,
                          "src": "8403:11:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8386:29:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 38720,
                          "name": "coins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38632,
                          "src": "8429:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                            "typeString": "address[2] memory"
                          }
                        },
                        "id": 38722,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 38721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8435:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8429:8:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38723,
                        "name": "futureVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38624,
                        "src": "8451:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38716,
                      "name": "CurvePoolDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38358,
                      "src": "8355:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 38724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8355:117:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38725,
                  "nodeType": "EmitStatement",
                  "src": "8350:122:74"
                }
              ]
            },
            "documentation": {
              "id": 38622,
              "nodeType": "StructuredDocumentation",
              "src": "6886:161:74",
              "text": " @notice Function for deploying the Curve Pool.\n @param futureVault The address of the futureVault that will be associated with the pool."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deployCurvePool",
            "nameLocation": "7061:16:74",
            "parameters": {
              "id": 38625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38624,
                  "mutability": "mutable",
                  "name": "futureVault",
                  "nameLocation": "7086:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38727,
                  "src": "7078:19:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7078:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7077:21:74"
            },
            "returnParameters": {
              "id": 38626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7108:0:74"
            },
            "scope": 38788,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38746,
            "nodeType": "FunctionDefinition",
            "src": "8679:215:74",
            "nodes": [],
            "body": {
              "id": 38745,
              "nodeType": "Block",
              "src": "8749:145:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38736,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "8767:4:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38745,
                      "src": "8759:12:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 38735,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8759:7:74",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38737,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8759:12:74"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8790:61:74",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8804:37:74",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "data",
                                      "nodeType": "YulIdentifier",
                                      "src": "8826:4:74"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8832:2:74",
                                      "type": "",
                                      "value": "12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8822:3:74"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8822:13:74"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8837:2:74",
                                  "type": "",
                                  "value": "20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8818:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8818:22:74"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8812:5:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8812:29:74"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "8804:4:74"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 38736,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8804:4:74",
                      "valueSize": 1
                    },
                    {
                      "declaration": 38730,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8826:4:74",
                      "valueSize": 1
                    }
                  ],
                  "id": 38738,
                  "nodeType": "InlineAssembly",
                  "src": "8781:70:74"
                },
                {
                  "expression": {
                    "id": 38743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 38739,
                        "name": "futureIbtPoolMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38336,
                        "src": "8860:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 38741,
                      "indexExpression": {
                        "id": 38740,
                        "name": "pt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38732,
                        "src": "8877:2:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8860:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38742,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38736,
                      "src": "8883:4:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8860:27:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38744,
                  "nodeType": "ExpressionStatement",
                  "src": "8860:27:74"
                }
              ]
            },
            "documentation": {
              "id": 38728,
              "nodeType": "StructuredDocumentation",
              "src": "8485:189:74",
              "text": " @notice Function for setting the address of the curve pool.\n @param data ABI encoded data containing the pool address.\n @param pt The address of the pt token."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setCurvePoolAddress",
            "nameLocation": "8688:20:74",
            "parameters": {
              "id": 38733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38730,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8722:4:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38746,
                  "src": "8709:17:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38729,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8709:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38732,
                  "mutability": "mutable",
                  "name": "pt",
                  "nameLocation": "8736:2:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 38746,
                  "src": "8728:10:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8728:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8708:31:74"
            },
            "returnParameters": {
              "id": 38734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8749:0:74"
            },
            "scope": 38788,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38787,
            "nodeType": "FunctionDefinition",
            "src": "9045:750:74",
            "nodes": [],
            "body": {
              "id": 38786,
              "nodeType": "Block",
              "src": "9082:713:74",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38751,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "9312:5:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38786,
                      "src": "9304:13:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38750,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9304:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38753,
                  "initialValue": {
                    "hexValue": "36",
                    "id": 38752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9320:1:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9304:17:74"
                },
                {
                  "assignments": [
                    38755,
                    38757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38755,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "9405:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38786,
                      "src": "9400:12:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 38754,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9400:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38757,
                      "mutability": "mutable",
                      "name": "responseData",
                      "nameLocation": "9427:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 38786,
                      "src": "9414:25:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 38756,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9414:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38766,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783439336634663734",
                            "id": 38762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9505:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1228885876_by_1",
                              "typeString": "int_const 1228885876"
                            },
                            "value": "0x493f4f74"
                          },
                          {
                            "id": 38763,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38751,
                            "src": "9517:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1228885876_by_1",
                              "typeString": "int_const 1228885876"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 38760,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9482:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 38761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9482:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 38764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9482:41:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 38758,
                        "name": "curveAddressProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38332,
                        "src": "9443:20:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 38759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "9443:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 38765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9443:90:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9399:134:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38768,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38755,
                        "src": "9564:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4675747572655661756c74466163746f72793a20436f756c64206e6f7420666574636820637572766520666163746f727920616464726573732066726f6d2074686520616464726573732070726f7669646572",
                        "id": 38769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9585:85:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_844a6796742555853351514ef62840e82ce03ca7c00613c696d61fb92497d046",
                          "typeString": "literal_string \"FutureVaultFactory: Could not fetch curve factory address from the address provider\""
                        },
                        "value": "FutureVaultFactory: Could not fetch curve factory address from the address provider"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_844a6796742555853351514ef62840e82ce03ca7c00613c696d61fb92497d046",
                          "typeString": "literal_string \"FutureVaultFactory: Could not fetch curve factory address from the address provider\""
                        }
                      ],
                      "id": 38767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9543:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9543:137:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38771,
                  "nodeType": "ExpressionStatement",
                  "src": "9543:137:74"
                },
                {
                  "expression": {
                    "id": 38780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38772,
                      "name": "curveFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38324,
                      "src": "9690:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 38775,
                          "name": "responseData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38757,
                          "src": "9716:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 38777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9731:7:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 38776,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9731:7:74",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 38778,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9730:9:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        ],
                        "expression": {
                          "id": 38773,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "9705:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 38774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "9705:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 38779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9705:35:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "9690:50:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38781,
                  "nodeType": "ExpressionStatement",
                  "src": "9690:50:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38783,
                        "name": "curveFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38324,
                        "src": "9775:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38782,
                      "name": "CurveFactoryChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38346,
                      "src": "9755:19:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9755:33:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38785,
                  "nodeType": "EmitStatement",
                  "src": "9750:38:74"
                }
              ]
            },
            "documentation": {
              "id": 38747,
              "nodeType": "StructuredDocumentation",
              "src": "8900:140:74",
              "text": " @notice Function which sets the curve factory address used in\ndeploying the curve pool. Can only be called by owner."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setCurveFactory",
            "nameLocation": "9054:16:74",
            "parameters": {
              "id": 38748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9070:2:74"
            },
            "returnParameters": {
              "id": 38749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9082:0:74"
            },
            "scope": 38788,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38317,
              "name": "IFutureVaultFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39147,
              "src": "688:19:74"
            },
            "id": 38318,
            "nodeType": "InheritanceSpecifier",
            "src": "688:19:74"
          },
          {
            "baseName": {
              "id": 38319,
              "name": "Ownable2Step",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32560,
              "src": "713:12:74"
            },
            "id": 38320,
            "nodeType": "InheritanceSpecifier",
            "src": "713:12:74"
          },
          {
            "baseName": {
              "id": 38321,
              "name": "NoDelegateCall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42727,
              "src": "731:14:74"
            },
            "id": 38322,
            "nodeType": "InheritanceSpecifier",
            "src": "731:14:74"
          }
        ],
        "canonicalName": "FutureVaultFactory",
        "contractDependencies": [
          33006
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38788,
          42727,
          32560,
          32477,
          33443,
          39147
        ],
        "name": "FutureVaultFactory",
        "nameLocation": "662:18:74",
        "scope": 38789,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 74
}