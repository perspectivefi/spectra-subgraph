{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ImplementationAlreadyAddedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ImplementationInvalidError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ImplementationZeroAddressError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrincipalTokenMismatchError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RegistryZeroAddressError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ImplementationAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ImplementationRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpVault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "principalToken",
          "type": "address"
        }
      ],
      "name": "LPVaultDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldRegistry",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRegistry",
          "type": "address"
        }
      ],
      "name": "RegistryUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "addImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_principalToken",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "deployLPVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "lpVault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_principalToken",
          "type": "address"
        }
      ],
      "name": "getLPVaultsForPrincipalToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "isImplementationValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "removeImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61151e806100ec6000396000f3fe60806040523480156200001157600080fd5b5060043610620000e05760003560e01c8063946dffde1162000097578063c4d66de8116200006e578063c4d66de814620001e7578063c6e2a40014620001fe578063e30c39781462000215578063f2fde38b146200022757600080fd5b8063946dffde146200016a578063a91ee0dc14620001aa578063a99616a514620001c157600080fd5b806322175a3214620000e55780634dceb16614620000fe5780635ab1bd531462000132578063715018a6146200014457806379ba5097146200014e5780638da5cb5b1462000158575b600080fd5b620000fc620000f636600462000991565b6200023e565b005b620001156200010f366004620009ce565b620002d7565b6040516001600160a01b0390911681526020015b60405180910390f35b6097546001600160a01b031662000115565b620000fc6200043c565b620000fc62000454565b6033546001600160a01b031662000115565b620001996200017b36600462000991565b6001600160a01b031660009081526098602052604090205460ff1690565b604051901515815260200162000129565b620000fc620001bb36600462000991565b620004d6565b620001d8620001d236600462000991565b62000564565b60405162000129919062000ab2565b620000fc620001f836600462000991565b620005dc565b620000fc6200020f36600462000991565b62000702565b6065546001600160a01b031662000115565b620000fc6200023836600462000991565b620007c7565b620002486200083b565b6001600160a01b03811660009081526098602052604090205460ff16620002825760405163d9a53e8f60e01b815260040160405180910390fd5b6040516001600160a01b038216907faf23121e2402485071dadf421078b368d7b67e54cabcc81540563c5d6bf1a4c390600090a26001600160a01b03166000908152609860205260409020805460ff19169055565b60008382604051620002e9906200096d565b620002f692919062000b01565b604051809103906000f08015801562000313573d6000803e3d6000fd5b509050826001600160a01b0316816001600160a01b031663adb724bf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200035f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000385919062000b69565b6001600160a01b031614620003ad5760405163543d166160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316826001600160a01b03167f70491df1363288147716f63c69ba69c988564086c0479ca0ee5c3896b8d5c59c60405160405180910390a46001600160a01b0392831660009081526099602090815260408220805460018101825590835291200180546001600160a01b0319169382169390931790925550919050565b620004466200083b565b62000452600062000897565b565b60655433906001600160a01b03168114620004c85760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b620004d38162000897565b50565b620004e06200083b565b6001600160a01b038116620005085760405163f18048e960e01b815260040160405180910390fd5b6097546040516001600160a01b038084169216907f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8290600090a3609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260996020908152604091829020805483518184028101840190945280845260609392830182828015620005d057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620005b1575b50505050509050919050565b600054610100900460ff1615808015620005fd5750600054600160ff909116105b80620006195750303b15801562000619575060005460ff166001145b6200067e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620004bf565b6000805460ff191660011790558015620006a2576000805461ff0019166101001790555b620006ac620008b2565b620006b782620004d6565b8015620006fe576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6200070c6200083b565b6001600160a01b0381166200073457604051630e0c911f60e11b815260040160405180910390fd5b6001600160a01b03811660009081526098602052604090205460ff16156200076f57604051639336390d60e01b815260040160405180910390fd5b6040516001600160a01b038216907f331cedc71f28c46d467691770675b586e8aa77a0d4fe09f257d01ef00bc1545890600090a26001600160a01b03166000908152609860205260409020805460ff19166001179055565b620007d16200083b565b606580546001600160a01b0383166001600160a01b03199091168117909155620008036033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6033546001600160a01b03163314620004525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620004bf565b606580546001600160a01b0319169055620004d381620008e6565b600054610100900460ff16620008dc5760405162461bcd60e51b8152600401620004bf9062000b89565b6200045262000938565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620009625760405162461bcd60e51b8152600401620004bf9062000b89565b620004523362000897565b6109148062000bd583390190565b6001600160a01b0381168114620004d357600080fd5b600060208284031215620009a457600080fd5b8135620009b1816200097b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215620009e457600080fd5b8335620009f1816200097b565b9250602084013562000a03816200097b565b9150604084013567ffffffffffffffff8082111562000a2157600080fd5b818601915086601f83011262000a3657600080fd5b81358181111562000a4b5762000a4b620009b8565b604051601f8201601f19908116603f0116810190838211818310171562000a765762000a76620009b8565b8160405282815289602084870101111562000a9057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562000af55783516001600160a01b03168352928401929184019160010162000ace565b50909695505050505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101562000b3f5785810183015185820160600152820162000b21565b8181111562000b52576000606083870101525b50601f01601f191692909201606001949350505050565b60006020828403121562000b7c57600080fd5b8151620009b1816200097b565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe608060405260405161091438038061091483398101604081905261002291610463565b61002e82826000610035565b505061058d565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610523565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610523565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108ed602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053e565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b8152600401610169919061055a565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b838111156100f95750506000910152565b6000806040838503121561047657600080fd5b61047f83610405565b60208401519092506001600160401b038082111561049c57600080fd5b818501915085601f8301126104b057600080fd5b8151818111156104c2576104c2610421565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea610421565b8160405282815288602084870101111561050357600080fd5b610514836020830160208801610437565b80955050505050509250929050565b60006020828403121561053557600080fd5b6102c882610405565b60008251610550818460208701610437565b9190910192915050565b6020815260008251806020840152610579816040850160208701610437565b601f01601f19169190910160400192915050565b6103518061059c6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f560279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a5565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102c1565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b8381111561029f576000848401525b50505050565b600082516102b7818460208701610275565b9190910192915050565b60208152600082518060208401526102e0816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206ea3749d3f44f7b5a93ef58b0fb6c9847a4ee4b69872c58535c03f2899109cf464736f6c634300080d0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201b037b794087d2700e046b07f0295e368772bae5b844f27fe58678bdb8d20e4764736f6c634300080d0033",
    "sourceMap": "211:4068:75:-:0;;;1155:132;;;;;;;;;-1:-1:-1;1179:22:75;:20;:22::i;:::-;211:4068;;5928:280:19;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:19;;216:2:113;5987:66:19;;;198:21:113;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:113;;;338:37;392:19;;5987:66:19;;;;;;;;6067:12;;6083:15;6067:12;;;:31;6063:139;;6114:12;:30;;-1:-1:-1;;6114:30:19;6129:15;6114:30;;;;;;6163:28;;564:36:113;;;6163:28:19;;552:2:113;537:18;6163:28:19;;;;;;;6063:139;5928:280::o;422:184:113:-;211:4068:75;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000e05760003560e01c8063946dffde1162000097578063c4d66de8116200006e578063c4d66de814620001e7578063c6e2a40014620001fe578063e30c39781462000215578063f2fde38b146200022757600080fd5b8063946dffde146200016a578063a91ee0dc14620001aa578063a99616a514620001c157600080fd5b806322175a3214620000e55780634dceb16614620000fe5780635ab1bd531462000132578063715018a6146200014457806379ba5097146200014e5780638da5cb5b1462000158575b600080fd5b620000fc620000f636600462000991565b6200023e565b005b620001156200010f366004620009ce565b620002d7565b6040516001600160a01b0390911681526020015b60405180910390f35b6097546001600160a01b031662000115565b620000fc6200043c565b620000fc62000454565b6033546001600160a01b031662000115565b620001996200017b36600462000991565b6001600160a01b031660009081526098602052604090205460ff1690565b604051901515815260200162000129565b620000fc620001bb36600462000991565b620004d6565b620001d8620001d236600462000991565b62000564565b60405162000129919062000ab2565b620000fc620001f836600462000991565b620005dc565b620000fc6200020f36600462000991565b62000702565b6065546001600160a01b031662000115565b620000fc6200023836600462000991565b620007c7565b620002486200083b565b6001600160a01b03811660009081526098602052604090205460ff16620002825760405163d9a53e8f60e01b815260040160405180910390fd5b6040516001600160a01b038216907faf23121e2402485071dadf421078b368d7b67e54cabcc81540563c5d6bf1a4c390600090a26001600160a01b03166000908152609860205260409020805460ff19169055565b60008382604051620002e9906200096d565b620002f692919062000b01565b604051809103906000f08015801562000313573d6000803e3d6000fd5b509050826001600160a01b0316816001600160a01b031663adb724bf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200035f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000385919062000b69565b6001600160a01b031614620003ad5760405163543d166160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316826001600160a01b03167f70491df1363288147716f63c69ba69c988564086c0479ca0ee5c3896b8d5c59c60405160405180910390a46001600160a01b0392831660009081526099602090815260408220805460018101825590835291200180546001600160a01b0319169382169390931790925550919050565b620004466200083b565b62000452600062000897565b565b60655433906001600160a01b03168114620004c85760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b620004d38162000897565b50565b620004e06200083b565b6001600160a01b038116620005085760405163f18048e960e01b815260040160405180910390fd5b6097546040516001600160a01b038084169216907f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8290600090a3609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260996020908152604091829020805483518184028101840190945280845260609392830182828015620005d057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620005b1575b50505050509050919050565b600054610100900460ff1615808015620005fd5750600054600160ff909116105b80620006195750303b15801562000619575060005460ff166001145b6200067e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620004bf565b6000805460ff191660011790558015620006a2576000805461ff0019166101001790555b620006ac620008b2565b620006b782620004d6565b8015620006fe576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6200070c6200083b565b6001600160a01b0381166200073457604051630e0c911f60e11b815260040160405180910390fd5b6001600160a01b03811660009081526098602052604090205460ff16156200076f57604051639336390d60e01b815260040160405180910390fd5b6040516001600160a01b038216907f331cedc71f28c46d467691770675b586e8aa77a0d4fe09f257d01ef00bc1545890600090a26001600160a01b03166000908152609860205260409020805460ff19166001179055565b620007d16200083b565b606580546001600160a01b0383166001600160a01b03199091168117909155620008036033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6033546001600160a01b03163314620004525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620004bf565b606580546001600160a01b0319169055620004d381620008e6565b600054610100900460ff16620008dc5760405162461bcd60e51b8152600401620004bf9062000b89565b6200045262000938565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620009625760405162461bcd60e51b8152600401620004bf9062000b89565b620004523362000897565b6109148062000bd583390190565b6001600160a01b0381168114620004d357600080fd5b600060208284031215620009a457600080fd5b8135620009b1816200097b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215620009e457600080fd5b8335620009f1816200097b565b9250602084013562000a03816200097b565b9150604084013567ffffffffffffffff8082111562000a2157600080fd5b818601915086601f83011262000a3657600080fd5b81358181111562000a4b5762000a4b620009b8565b604051601f8201601f19908116603f0116810190838211818310171562000a765762000a76620009b8565b8160405282815289602084870101111562000a9057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562000af55783516001600160a01b03168352928401929184019160010162000ace565b50909695505050505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101562000b3f5785810183015185820160600152820162000b21565b8181111562000b52576000606083870101525b50601f01601f191692909201606001949350505050565b60006020828403121562000b7c57600080fd5b8151620009b1816200097b565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe608060405260405161091438038061091483398101604081905261002291610463565b61002e82826000610035565b505061058d565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610523565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610523565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108ed602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053e565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b8152600401610169919061055a565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b838111156100f95750506000910152565b6000806040838503121561047657600080fd5b61047f83610405565b60208401519092506001600160401b038082111561049c57600080fd5b818501915085601f8301126104b057600080fd5b8151818111156104c2576104c2610421565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea610421565b8160405282815288602084870101111561050357600080fd5b610514836020830160208801610437565b80955050505050509250929050565b60006020828403121561053557600080fd5b6102c882610405565b60008251610550818460208701610437565b9190910192915050565b6020815260008251806020840152610579816040850160208701610437565b601f01601f19169190910160400192915050565b6103518061059c6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f560279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a5565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102c1565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b8381111561029f576000848401525b50505050565b600082516102b7818460208701610275565b9190910192915050565b60208152600082518060208401526102e0816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206ea3749d3f44f7b5a93ef58b0fb6c9847a4ee4b69872c58535c03f2899109cf464736f6c634300080d0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201b037b794087d2700e046b07f0295e368772bae5b844f27fe58678bdb8d20e4764736f6c634300080d0033",
    "sourceMap": "211:4068:75:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3181:324;;;;;;:::i;:::-;;:::i;:::-;;1539:776;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1900:32:113;;;1882:51;;1870:2;1855:18;1539:776:75;;;;;;;;3706:96;3787:8;;-1:-1:-1;;;;;3787:8:75;3706:96;;2071:101:16;;;:::i;2005:206:15:-;;;:::i;1441:85:16:-;1513:6;;-1:-1:-1;;;;;1513:6:16;1441:85;;3859:169:75;;;;;;:::i;:::-;-1:-1:-1;;;;;3982:39:75;3959:4;3982:39;;;:22;:39;;;;;;;;;3859:169;;;;2109:14:113;;2102:22;2084:41;;2072:2;2057:18;3859:169:75;1944:187:113;2372:265:75;;;;;;:::i;:::-;;:::i;4085:192::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1352:130::-;;;;;;:::i;:::-;;:::i;2694:430::-;;;;;;:::i;:::-;;:::i;1118:99:15:-;1197:13;;-1:-1:-1;;;;;1197:13:15;1118:99;;1410:178;;;;;;:::i;:::-;;:::i;3181:324:75:-;3262:13;:11;:13::i;:::-;-1:-1:-1;;;;;3982:39:75;;3959:4;3982:39;;;:22;:39;;;;;;;;3285:105;;3351:28;;-1:-1:-1;;;3351:28:75;;;;;;;;;;;3285:105;3404:38;;-1:-1:-1;;;;;3404:38:75;;;;;;;;-1:-1:-1;;;;;3459:39:75;;;;;:22;:39;;;;;3452:46;;-1:-1:-1;;3452:46:75;;;3181:324::o;1539:776::-;1689:15;1750;1767:5;1734:39;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1716:58;;1829:15;-1:-1:-1;;;;;1788:56:75;1797:7;-1:-1:-1;;;;;1788:35:75;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1788:56:75;;1784:387;;2131:29;;-1:-1:-1;;;2131:29:75;;;;;;;;;;;1784:387;2227:15;-1:-1:-1;;;;;2185:58:75;2210:15;-1:-1:-1;;;;;2185:58:75;2201:7;-1:-1:-1;;;;;2185:58:75;;;;;;;;;;;-1:-1:-1;;;;;2253:41:75;;;;;;;:24;:41;;;;;;;:55;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2253:55:75;;;;;;;;;;;-1:-1:-1;2253:55:75;2300:7;-1:-1:-1;1539:776:75:o;2071:101:16:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;2005:206:15:-;1197:13;;929:10:29;;-1:-1:-1;;;;;1197:13:15;2098:24;;2090:78;;;;-1:-1:-1;;;2090:78:15;;3954:2:113;2090:78:15;;;3936:21:113;3993:2;3973:18;;;3966:30;4032:34;4012:18;;;4005:62;-1:-1:-1;;;4083:18:113;;;4076:39;4132:19;;2090:78:15;;;;;;;;;2178:26;2197:6;2178:18;:26::i;:::-;2041:170;2005:206::o;2372:265:75:-;2438:13;:11;:13::i;:::-;-1:-1:-1;;;;;2466:23:75;;2461:89;;2513:26;;-1:-1:-1;;;2513:26:75;;;;;;;;;;;2461:89;2580:8;;2564:36;;-1:-1:-1;;;;;2564:36:75;;;;2580:8;;2564:36;;2580:8;;2564:36;2610:8;:20;;-1:-1:-1;;;;;;2610:20:75;-1:-1:-1;;;;;2610:20:75;;;;;;;;;;2372:265::o;4085:192::-;-1:-1:-1;;;;;4229:41:75;;;;;;:24;:41;;;;;;;;;4222:48;;;;;;;;;;;;;;;;;4194:16;;4222:48;;;4229:41;4222:48;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4222:48:75;;;;;;;;;;;;;;;;;;;;;;;4085:192;;;:::o;1352:130::-;3268:19:19;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:19;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:19;1476:19:28;:23;;;3376:66:19;;-1:-1:-1;3425:12:19;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:19;;4364:2:113;3314:201:19;;;4346:21:113;4403:2;4383:18;;;4376:30;4442:34;4422:18;;;4415:62;-1:-1:-1;;;4493:18:113;;;4486:44;4547:19;;3314:201:19;4162:410:113;3314:201:19;3525:12;:16;;-1:-1:-1;;3525:16:19;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:19;;;;;3551:65;1422:21:75::1;:19;:21::i;:::-;1453:22;1465:9;1453:11;:22::i;:::-;3640:14:19::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:19;;;3710:14;;-1:-1:-1;4729:36:113;;3710:14:19;;4717:2:113;4702:18;3710:14:19;;;;;;;3636:99;3258:483;1352:130:75;:::o;2694:430::-;2772:13;:11;:13::i;:::-;-1:-1:-1;;;;;2800:29:75;;2795:216;;2853:32;;-1:-1:-1;;;2853:32:75;;;;;;;;;;;2795:216;-1:-1:-1;;;;;3982:39:75;;3959:4;3982:39;;;:22;:39;;;;;;;;2902:109;;;2967:33;;-1:-1:-1;;;2967:33:75;;;;;;;;;;;2902:109;3025:36;;-1:-1:-1;;;;;3025:36:75;;;;;;;;-1:-1:-1;;;;;3071:39:75;;;;;:22;:39;;;;;:46;;-1:-1:-1;;3071:46:75;3113:4;3071:46;;;2694:430::o;1410:178:15:-;1334:13:16;:11;:13::i;:::-;1499::15::1;:24:::0;;-1:-1:-1;;;;;1499:24:15;::::1;-1:-1:-1::0;;;;;;1499:24:15;;::::1;::::0;::::1;::::0;;;1563:7:::1;1513:6:16::0;;-1:-1:-1;;;;;1513:6:16;;1441:85;1563:7:15::1;-1:-1:-1::0;;;;;1538:43:15::1;;;;;;;;;;;1410:178:::0;:::o;1599:130:16:-;1513:6;;-1:-1:-1;;;;;1513:6:16;929:10:29;1662:23:16;1654:68;;;;-1:-1:-1;;;1654:68:16;;4978:2:113;1654:68:16;;;4960:21:113;;;4997:18;;;4990:30;5056:34;5036:18;;;5029:62;5108:18;;1654:68:16;4776:356:113;1772:153:15;1861:13;1854:20;;-1:-1:-1;;;;;;1854:20:15;;;1884:34;1909:8;1884:24;:34::i;733:100::-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;800:26:15::1;:24;:26::i;2673:187:16:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:16;;;-1:-1:-1;;;;;;2781:17:16;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1104:111::-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;1176:32:16::1;929:10:29::0;1176:18:16::1;:32::i;-1:-1:-1:-:0;;;;;;;;:::o;14:131:113:-;-1:-1:-1;;;;;89:31:113;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:113:o;402:127::-;463:10;458:3;454:20;451:1;444:31;494:4;491:1;484:15;518:4;515:1;508:15;534:1197;620:6;628;636;689:2;677:9;668:7;664:23;660:32;657:52;;;705:1;702;695:12;657:52;744:9;731:23;763:31;788:5;763:31;:::i;:::-;813:5;-1:-1:-1;870:2:113;855:18;;842:32;883:33;842:32;883:33;:::i;:::-;935:7;-1:-1:-1;993:2:113;978:18;;965:32;1016:18;1046:14;;;1043:34;;;1073:1;1070;1063:12;1043:34;1111:6;1100:9;1096:22;1086:32;;1156:7;1149:4;1145:2;1141:13;1137:27;1127:55;;1178:1;1175;1168:12;1127:55;1214:2;1201:16;1236:2;1232;1229:10;1226:36;;;1242:18;;:::i;:::-;1317:2;1311:9;1285:2;1371:13;;-1:-1:-1;;1367:22:113;;;1391:2;1363:31;1359:40;1347:53;;;1415:18;;;1435:22;;;1412:46;1409:72;;;1461:18;;:::i;:::-;1501:10;1497:2;1490:22;1536:2;1528:6;1521:18;1576:7;1571:2;1566;1562;1558:11;1554:20;1551:33;1548:53;;;1597:1;1594;1587:12;1548:53;1653:2;1648;1644;1640:11;1635:2;1627:6;1623:15;1610:46;1698:1;1693:2;1688;1680:6;1676:15;1672:24;1665:35;1719:6;1709:16;;;;;;;534:1197;;;;;:::o;2136:658::-;2307:2;2359:21;;;2429:13;;2332:18;;;2451:22;;;2278:4;;2307:2;2530:15;;;;2504:2;2489:18;;;2278:4;2573:195;2587:6;2584:1;2581:13;2573:195;;;2652:13;;-1:-1:-1;;;;;2648:39:113;2636:52;;2743:15;;;;2708:12;;;;2684:1;2602:9;2573:195;;;-1:-1:-1;2785:3:113;;2136:658;-1:-1:-1;;;;;;2136:658:113:o;2799:692::-;3003:1;2999;2994:3;2990:11;2986:19;2978:6;2974:32;2963:9;2956:51;2937:4;3026:2;3064;3059;3048:9;3044:18;3037:30;3096:6;3090:13;3139:6;3134:2;3123:9;3119:18;3112:34;3164:1;3174:140;3188:6;3185:1;3182:13;3174:140;;;3283:14;;;3279:23;;3273:30;3249:17;;;3268:2;3245:26;3238:66;3203:10;;3174:140;;;3332:6;3329:1;3326:13;3323:91;;;3402:1;3397:2;3388:6;3377:9;3373:22;3369:31;3362:42;3323:91;-1:-1:-1;3475:2:113;3454:15;-1:-1:-1;;3450:29:113;3435:45;;;;3482:2;3431:54;;2799:692;-1:-1:-1;;;;2799:692:113:o;3496:251::-;3566:6;3619:2;3607:9;3598:7;3594:23;3590:32;3587:52;;;3635:1;3632;3625:12;3587:52;3667:9;3661:16;3686:31;3711:5;3686:31;:::i;5137:407::-;5339:2;5321:21;;;5378:2;5358:18;;;5351:30;5417:34;5412:2;5397:18;;5390:62;-1:-1:-1;;;5483:2:113;5468:18;;5461:41;5534:3;5519:19;;5137:407::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addImplementation(address)": "c6e2a400",
    "deployLPVault(address,address,bytes)": "4dceb166",
    "getLPVaultsForPrincipalToken(address)": "a99616a5",
    "getRegistry()": "5ab1bd53",
    "initialize(address)": "c4d66de8",
    "isImplementationValid(address)": "946dffde",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "removeImplementation(address)": "22175a32",
    "renounceOwnership()": "715018a6",
    "setRegistry(address)": "a91ee0dc",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ImplementationAlreadyAddedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImplementationInvalidError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImplementationZeroAddressError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrincipalTokenMismatchError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegistryZeroAddressError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ImplementationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ImplementationRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"principalToken\",\"type\":\"address\"}],\"name\":\"LPVaultDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRegistry\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_principalToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"deployLPVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_principalToken\",\"type\":\"address\"}],\"name\":\"getLPVaultsForPrincipalToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"isImplementationValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"removeImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addImplementation(address)\":{\"params\":{\"_implementation\":\"The address of the implementation to add.\"}},\"deployLPVault(address,address,bytes)\":{\"params\":{\"_data\":\"The data to be passed during deployment. For example, the Curve LP Vault will take an initialize with parameters: abi.encodeWithSelector(initialize.selector, ...params)\",\"_implementation\":\"The address of the implementation.\",\"_principalToken\":\"The address of the principalToken.\"},\"returns\":{\"lpVault\":\"The address of the LPVault deployed.\"}},\"getLPVaultsForPrincipalToken(address)\":{\"params\":{\"_principalToken\":\"The address of the principalToken.\"},\"returns\":{\"_0\":\"lpVaults The list of LPVaults deployed for the given principalToken. LPVaults are returned without any particular sorting or filtering. They may also have different implementations.\"}},\"getRegistry()\":{\"returns\":{\"_0\":\"the address of the registry\"}},\"isImplementationValid(address)\":{\"params\":{\"_implementation\":\"The address of the implementation to check.\"},\"returns\":{\"_0\":\"true if the implementation has been added, false otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"removeImplementation(address)\":{\"params\":{\"_implementation\":\"The address of the implementation to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"_registry\":\"address of the Registry\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addImplementation(address)\":{\"notice\":\"Adds an implementation to the list of valid implementations. An implementation will need to be added to the factory before it can be used to create vaults.\"},\"constructor\":{\"notice\":\"Constructor of the contract\"},\"deployLPVault(address,address,bytes)\":{\"notice\":\"Deploys an LPVault with a given implementation.\"},\"getLPVaultsForPrincipalToken(address)\":{\"notice\":\"Getter for the list of deployed LPVaults for a given principalToken.\"},\"getRegistry()\":{\"notice\":\"Getter for the registry address.\"},\"initialize(address)\":{\"notice\":\"Initializer of the contract\"},\"isImplementationValid(address)\":{\"notice\":\"Checks if an implementation has been previously added.\"},\"removeImplementation(address)\":{\"notice\":\"Removes an implementation from the list of valid implementations.\"},\"setRegistry(address)\":{\"notice\":\"Setter for the registry address, Can only be called by the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/factory/LPVaultFactory.sol\":\"LPVaultFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/\",\":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/\",\":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/\",\":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/\",\":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/\",\":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x7dce633611f5149fa8dec27ccd28b88dc590fecbebdb7785d1f6728dae1e1c4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9974683c1eec209863fdec01d0c45d262302d62d7b972bc2ddcb25c33bc53fb\",\"dweb:/ipfs/QmSrcmeTka7VTz5HbjktmZdsMycARfadbCpjWTHiqwiqZC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol\":{\"keccak256\":\"0xe3d54e1a1a10fbc86fdfaf9100ba99c9c808588fd20d0c919457b903b5cae61a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e2f616c3ebcf6db05b9242b870f69bf902533cc3248e352b0e1e1a04d6da8b8\",\"dweb:/ipfs/QmbNV3EejvPoLWVXTjLRyHyFnaxdQoxpFkXMbZbPvDf7eq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c\",\"dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a\",\"dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xea49d64cd4c5556e61f1edc117cc74f2e69f14b524386ef6a336a58794191b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a3e700c25793a01bb63bb38f10b6dd4d0569280fd393d9b95a142ecfa247838\",\"dweb:/ipfs/QmX1FPaRMbMo22EudVK2xQsdcVcbNk3XKkcrzuQfQQEtMH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x4586689c55edb37fc3cac296d75d3851b3aee3f378aaa54d8a9258a384fbf541\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fb638e6f0d5279f6000579a71a482a7d3655aed62439549906e3584443c40\",\"dweb:/ipfs/QmangQhgXTvji3sAgNcvdnTs7ZR3KEwmHfw5DEAybxB7cw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3\",\"dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xba55137b57f58e805ab97462fbfc7e4b66c093a6813e29cc3f5d1569d39c27cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4bb6347403c2f3b1cf02b6108cc659730a564b0c5e629762dde8f5efe1e2a84\",\"dweb:/ipfs/QmTndaLNN7gioSQHg6Zu55Ysj7wUNCq11MV7JE7zt9nsGz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x5c04e814be62473d494fb8884c56327d98237df4d77668a4ab979ace139ff204\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a17916be90701e95b591bf18797c7e64bb614fa7bd3824533dde8594922e3979\",\"dweb:/ipfs/QmSRhaSy3g2Mp7MGxT6Ttfy7jiBeXr6iMVh2WNLRCzpZAF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xb49137b771712774960cca0acf428499e2aa85f179fe03712e5c06c5a6ab6316\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec66760482c33d84dda577e3a7a4b81000a92e37cae5c8b55339e2d83abfce03\",\"dweb:/ipfs/QmVDSFsp9dnW8P92Yrq2jAjr9piKke8gjuZX5QjtFuZRfx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x89bfffcd03b05b01af8dea42646c8118151e4fba967cde7064eb4acb697226d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13867b2b35c572397a233373750e30025c79ee32e23650b2bc3e384565e78d5f\",\"dweb:/ipfs/QmQscnGYq2XxbyvLgtyQNPT8ZwSbNsLxeH4pZyyae5yKA4\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"src/factory/LPVaultFactory.sol\":{\"keccak256\":\"0x3b357f64629b882967c1184625705c08f085375ad85ada83b9db4ae5faf14a27\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://96a9375134a26e52b87a1833279d57eda72f343704e3e44bff722a0c5678496c\",\"dweb:/ipfs/QmXLeiLGDFdCFtJxBwAHwxxgY1EQhVJBW59esyd5v55vzr\"]},\"src/interfaces/ILPVault.sol\":{\"keccak256\":\"0x00972f8904589d5ca8db92a4a49ab55b589c6ab822e6bcfb5ca3255abd999052\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://12b7956a6fd5a746d724101e23c9cc0f3fe51c1c58d2947b65b97fdfb9ad803c\",\"dweb:/ipfs/QmRVrJqVQuGuF7agBFJQpHEKjicfLaRAqdCisr4b2DBKef\"]},\"src/interfaces/ILPVaultFactory.sol\":{\"keccak256\":\"0x9203479d46cc1cd48a0f7832ac4dc21856f88f07d4a8c301d774682a3d902c0a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bbec5d03acf581542848133a00f848ed4f10ccc6e4bdf0d98aa792a78ebf1454\",\"dweb:/ipfs/QmQbACs32qGEDoULbU3fuV2ZiMgJ3CLURxDdmFrJu9jneV\"]},\"src/interfaces/IPrincipalToken.sol\":{\"keccak256\":\"0x64e24fddc9d58b77e0043d0c66ac27c260c001e28f9252cef8114814333cfdb6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://84934a45960c96d7106e643c096e840dd0e903bb6ad56e7d77aa0ede09d6321b\",\"dweb:/ipfs/QmZAWjCUewjn5BzbKEJ8aLb7Wgup9z9DRAG6e67mdfEysu\"]},\"src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x1e3bcc4b538673d7e08feff9bd78bd1c391ef8a570f932f94e93dea47023ac0c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://91e3d995ff86085e0d94472df295779f0e2fdc923e035f5eb87c6072447d3d79\",\"dweb:/ipfs/QmeWvFJCHqMFp44kxrDj2eVEJwkcnMRmnbNduU6LK51mgR\"]},\"src/interfaces/IYT.sol\":{\"keccak256\":\"0x49d669e7685c6deb1ffd6ee40ec0143a07f49e9906462d6bf7b00709d5f4036a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54bc566039dcdc5899bcb6e7e54a16b5614881664505ba4df6fe0e8350abc881\",\"dweb:/ipfs/QmVtdEQcSn5dPJMHYvMA8YjNZMLuTSxa1bbG4fLoVZ2B5Y\"]},\"src/tokens/PrincipalToken.sol\":{\"keccak256\":\"0x632e1c230cdafa2b988563b6154addfc3bf4236f74dda610b7198076e8aa984f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7b63863a30bf25cb5dda81b39b60ee1e2744b427c257bd087748b914a2b8233\",\"dweb:/ipfs/QmRNzXoe52NZw7ugycCy2mW7kVV3Ebwpz3UQGW3ufB966P\"]},\"src/util/lib/NamingUtil.sol\":{\"keccak256\":\"0x8b2c6f7687a1c1c4ef890088f0405262f96f9675f263daf1639f94d48be7171d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cc0afdb6867611fc5c33c19647c98055ddcd14aae4474034d1925fec6405994d\",\"dweb:/ipfs/QmWEA3emonAAsqhFHVzYep2Cwp2Vak684P6TqKuN2UaF99\"]},\"src/util/lib/StructUtil.sol\":{\"keccak256\":\"0xe920bcb8e1cca64a8dca6d0dd86ee8b1870b993ef4535ffcc0947d03aa108344\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eaad681cf552713f329687c4fa226308a35e8c50395b5235d57a1656aaa6abbc\",\"dweb:/ipfs/QmNhxC1aii8os3D3FjDytkUHxeZuZHwbzV9UqXn9MfyLN3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ImplementationAlreadyAddedError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ImplementationInvalidError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ImplementationZeroAddressError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrincipalTokenMismatchError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RegistryZeroAddressError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ImplementationAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ImplementationRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "lpVault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "principalToken",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LPVaultDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldRegistry",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newRegistry",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RegistryUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addImplementation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_principalToken",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployLPVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "lpVault",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_principalToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLPVaultsForPrincipalToken",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isImplementationValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeImplementation"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "addImplementation(address)": {
            "params": {
              "_implementation": "The address of the implementation to add."
            }
          },
          "deployLPVault(address,address,bytes)": {
            "params": {
              "_data": "The data to be passed during deployment. For example, the Curve LP Vault will take an initialize with parameters: abi.encodeWithSelector(initialize.selector, ...params)",
              "_implementation": "The address of the implementation.",
              "_principalToken": "The address of the principalToken."
            },
            "returns": {
              "lpVault": "The address of the LPVault deployed."
            }
          },
          "getLPVaultsForPrincipalToken(address)": {
            "params": {
              "_principalToken": "The address of the principalToken."
            },
            "returns": {
              "_0": "lpVaults The list of LPVaults deployed for the given principalToken. LPVaults are returned without any particular sorting or filtering. They may also have different implementations."
            }
          },
          "getRegistry()": {
            "returns": {
              "_0": "the address of the registry"
            }
          },
          "isImplementationValid(address)": {
            "params": {
              "_implementation": "The address of the implementation to check."
            },
            "returns": {
              "_0": "true if the implementation has been added, false otherwise."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "removeImplementation(address)": {
            "params": {
              "_implementation": "The address of the implementation to remove."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setRegistry(address)": {
            "params": {
              "_registry": "address of the Registry"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addImplementation(address)": {
            "notice": "Adds an implementation to the list of valid implementations. An implementation will need to be added to the factory before it can be used to create vaults."
          },
          "constructor": {
            "notice": "Constructor of the contract"
          },
          "deployLPVault(address,address,bytes)": {
            "notice": "Deploys an LPVault with a given implementation."
          },
          "getLPVaultsForPrincipalToken(address)": {
            "notice": "Getter for the list of deployed LPVaults for a given principalToken."
          },
          "getRegistry()": {
            "notice": "Getter for the registry address."
          },
          "initialize(address)": {
            "notice": "Initializer of the contract"
          },
          "isImplementationValid(address)": {
            "notice": "Checks if an implementation has been previously added."
          },
          "removeImplementation(address)": {
            "notice": "Removes an implementation from the list of valid implementations."
          },
          "setRegistry(address)": {
            "notice": "Setter for the registry address, Can only be called by the owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/",
        ":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/",
        ":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/",
        ":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/",
        ":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/",
        ":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/factory/LPVaultFactory.sol": "LPVaultFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x7dce633611f5149fa8dec27ccd28b88dc590fecbebdb7785d1f6728dae1e1c4f",
        "urls": [
          "bzz-raw://e9974683c1eec209863fdec01d0c45d262302d62d7b972bc2ddcb25c33bc53fb",
          "dweb:/ipfs/QmSrcmeTka7VTz5HbjktmZdsMycARfadbCpjWTHiqwiqZC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol": {
        "keccak256": "0xe3d54e1a1a10fbc86fdfaf9100ba99c9c808588fd20d0c919457b903b5cae61a",
        "urls": [
          "bzz-raw://7e2f616c3ebcf6db05b9242b870f69bf902533cc3248e352b0e1e1a04d6da8b8",
          "dweb:/ipfs/QmbNV3EejvPoLWVXTjLRyHyFnaxdQoxpFkXMbZbPvDf7eq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
        "urls": [
          "bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
          "dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f",
        "urls": [
          "bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c",
          "dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275",
        "urls": [
          "bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a",
          "dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0xea49d64cd4c5556e61f1edc117cc74f2e69f14b524386ef6a336a58794191b34",
        "urls": [
          "bzz-raw://2a3e700c25793a01bb63bb38f10b6dd4d0569280fd393d9b95a142ecfa247838",
          "dweb:/ipfs/QmX1FPaRMbMo22EudVK2xQsdcVcbNk3XKkcrzuQfQQEtMH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x4586689c55edb37fc3cac296d75d3851b3aee3f378aaa54d8a9258a384fbf541",
        "urls": [
          "bzz-raw://0f3fb638e6f0d5279f6000579a71a482a7d3655aed62439549906e3584443c40",
          "dweb:/ipfs/QmangQhgXTvji3sAgNcvdnTs7ZR3KEwmHfw5DEAybxB7cw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
        "urls": [
          "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
          "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69",
        "urls": [
          "bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3",
          "dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xba55137b57f58e805ab97462fbfc7e4b66c093a6813e29cc3f5d1569d39c27cf",
        "urls": [
          "bzz-raw://c4bb6347403c2f3b1cf02b6108cc659730a564b0c5e629762dde8f5efe1e2a84",
          "dweb:/ipfs/QmTndaLNN7gioSQHg6Zu55Ysj7wUNCq11MV7JE7zt9nsGz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x5c04e814be62473d494fb8884c56327d98237df4d77668a4ab979ace139ff204",
        "urls": [
          "bzz-raw://a17916be90701e95b591bf18797c7e64bb614fa7bd3824533dde8594922e3979",
          "dweb:/ipfs/QmSRhaSy3g2Mp7MGxT6Ttfy7jiBeXr6iMVh2WNLRCzpZAF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xb49137b771712774960cca0acf428499e2aa85f179fe03712e5c06c5a6ab6316",
        "urls": [
          "bzz-raw://ec66760482c33d84dda577e3a7a4b81000a92e37cae5c8b55339e2d83abfce03",
          "dweb:/ipfs/QmVDSFsp9dnW8P92Yrq2jAjr9piKke8gjuZX5QjtFuZRfx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x89bfffcd03b05b01af8dea42646c8118151e4fba967cde7064eb4acb697226d1",
        "urls": [
          "bzz-raw://13867b2b35c572397a233373750e30025c79ee32e23650b2bc3e384565e78d5f",
          "dweb:/ipfs/QmQscnGYq2XxbyvLgtyQNPT8ZwSbNsLxeH4pZyyae5yKA4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95",
        "urls": [
          "bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c",
          "dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d",
        "urls": [
          "bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4",
          "dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B"
        ],
        "license": "MIT"
      },
      "src/factory/LPVaultFactory.sol": {
        "keccak256": "0x3b357f64629b882967c1184625705c08f085375ad85ada83b9db4ae5faf14a27",
        "urls": [
          "bzz-raw://96a9375134a26e52b87a1833279d57eda72f343704e3e44bff722a0c5678496c",
          "dweb:/ipfs/QmXLeiLGDFdCFtJxBwAHwxxgY1EQhVJBW59esyd5v55vzr"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ILPVault.sol": {
        "keccak256": "0x00972f8904589d5ca8db92a4a49ab55b589c6ab822e6bcfb5ca3255abd999052",
        "urls": [
          "bzz-raw://12b7956a6fd5a746d724101e23c9cc0f3fe51c1c58d2947b65b97fdfb9ad803c",
          "dweb:/ipfs/QmRVrJqVQuGuF7agBFJQpHEKjicfLaRAqdCisr4b2DBKef"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ILPVaultFactory.sol": {
        "keccak256": "0x9203479d46cc1cd48a0f7832ac4dc21856f88f07d4a8c301d774682a3d902c0a",
        "urls": [
          "bzz-raw://bbec5d03acf581542848133a00f848ed4f10ccc6e4bdf0d98aa792a78ebf1454",
          "dweb:/ipfs/QmQbACs32qGEDoULbU3fuV2ZiMgJ3CLURxDdmFrJu9jneV"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IPrincipalToken.sol": {
        "keccak256": "0x64e24fddc9d58b77e0043d0c66ac27c260c001e28f9252cef8114814333cfdb6",
        "urls": [
          "bzz-raw://84934a45960c96d7106e643c096e840dd0e903bb6ad56e7d77aa0ede09d6321b",
          "dweb:/ipfs/QmZAWjCUewjn5BzbKEJ8aLb7Wgup9z9DRAG6e67mdfEysu"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRegistry.sol": {
        "keccak256": "0x1e3bcc4b538673d7e08feff9bd78bd1c391ef8a570f932f94e93dea47023ac0c",
        "urls": [
          "bzz-raw://91e3d995ff86085e0d94472df295779f0e2fdc923e035f5eb87c6072447d3d79",
          "dweb:/ipfs/QmeWvFJCHqMFp44kxrDj2eVEJwkcnMRmnbNduU6LK51mgR"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IYT.sol": {
        "keccak256": "0x49d669e7685c6deb1ffd6ee40ec0143a07f49e9906462d6bf7b00709d5f4036a",
        "urls": [
          "bzz-raw://54bc566039dcdc5899bcb6e7e54a16b5614881664505ba4df6fe0e8350abc881",
          "dweb:/ipfs/QmVtdEQcSn5dPJMHYvMA8YjNZMLuTSxa1bbG4fLoVZ2B5Y"
        ],
        "license": "BUSL-1.1"
      },
      "src/tokens/PrincipalToken.sol": {
        "keccak256": "0x632e1c230cdafa2b988563b6154addfc3bf4236f74dda610b7198076e8aa984f",
        "urls": [
          "bzz-raw://c7b63863a30bf25cb5dda81b39b60ee1e2744b427c257bd087748b914a2b8233",
          "dweb:/ipfs/QmRNzXoe52NZw7ugycCy2mW7kVV3Ebwpz3UQGW3ufB966P"
        ],
        "license": "BUSL-1.1"
      },
      "src/util/lib/NamingUtil.sol": {
        "keccak256": "0x8b2c6f7687a1c1c4ef890088f0405262f96f9675f263daf1639f94d48be7171d",
        "urls": [
          "bzz-raw://cc0afdb6867611fc5c33c19647c98055ddcd14aae4474034d1925fec6405994d",
          "dweb:/ipfs/QmWEA3emonAAsqhFHVzYep2Cwp2Vak684P6TqKuN2UaF99"
        ],
        "license": "BUSL-1.1"
      },
      "src/util/lib/StructUtil.sol": {
        "keccak256": "0xe920bcb8e1cca64a8dca6d0dd86ee8b1870b993ef4535ffcc0947d03aa108344",
        "urls": [
          "bzz-raw://eaad681cf552713f329687c4fa226308a35e8c50395b5235d57a1656aaa6abbc",
          "dweb:/ipfs/QmNhxC1aii8os3D3FjDytkUHxeZuZHwbzV9UqXn9MfyLN3"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/factory/LPVaultFactory.sol",
    "id": 39093,
    "exportedSymbols": {
      "Address": [
        31695
      ],
      "AddressUpgradeable": [
        27808
      ],
      "BeaconProxy": [
        30996
      ],
      "ContextUpgradeable": [
        27850
      ],
      "CountersUpgradeable": [
        27924
      ],
      "ECDSAUpgradeable": [
        28460
      ],
      "EIP712Upgradeable": [
        28610
      ],
      "ERC1967Upgrade": [
        30878
      ],
      "ERC20PermitUpgradeable": [
        27207
      ],
      "ERC20Upgradeable": [
        26913
      ],
      "IBeacon": [
        31006
      ],
      "IERC1822Proxiable": [
        30523
      ],
      "IERC20MetadataUpgradeable": [
        27016
      ],
      "IERC20PermitUpgradeable": [
        27243
      ],
      "IERC20Upgradeable": [
        26991
      ],
      "IERC4626Upgradeable": [
        25921
      ],
      "ILPVault": [
        39665
      ],
      "ILPVaultFactory": [
        39732
      ],
      "IPrincipalToken": [
        40037
      ],
      "IRegistry": [
        40171
      ],
      "IYT": [
        40313
      ],
      "Initializable": [
        26090
      ],
      "LPVaultFactory": [
        39092
      ],
      "MathUpgradeable": [
        29475
      ],
      "NamingUtil": [
        46620
      ],
      "Ownable2StepUpgradeable": [
        25618
      ],
      "OwnableUpgradeable": [
        25750
      ],
      "PausableUpgradeable": [
        26217
      ],
      "PrincipalToken": [
        45214
      ],
      "Proxy": [
        30930
      ],
      "ReentrancyGuardUpgradeable": [
        26301
      ],
      "SafeERC20Upgradeable": [
        27524
      ],
      "StorageSlot": [
        31777
      ],
      "StringsUpgradeable": [
        28099
      ],
      "StructUtil": [
        46628
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4242:75",
    "nodes": [
      {
        "id": 38835,
        "nodeType": "PragmaDirective",
        "src": "38:23:75",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 38836,
        "nodeType": "ImportDirective",
        "src": "63:38:75",
        "nodes": [],
        "absolutePath": "src/tokens/PrincipalToken.sol",
        "file": "../tokens/PrincipalToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39093,
        "sourceUnit": 45215,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38837,
        "nodeType": "ImportDirective",
        "src": "103:43:75",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPVaultFactory.sol",
        "file": "../interfaces/ILPVaultFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39093,
        "sourceUnit": 39733,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38838,
        "nodeType": "ImportDirective",
        "src": "147:36:75",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPVault.sol",
        "file": "../interfaces/ILPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39093,
        "sourceUnit": 39666,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39092,
        "nodeType": "ContractDefinition",
        "src": "211:4068:75",
        "nodes": [
          {
            "id": 38844,
            "nodeType": "VariableDeclaration",
            "src": "419:24:75",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "registry",
            "nameLocation": "435:8:75",
            "scope": 39092,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38843,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:75",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38848,
            "nodeType": "VariableDeclaration",
            "src": "449:55:75",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "implementationRegistry",
            "nameLocation": "482:22:75",
            "scope": 39092,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 38847,
              "keyType": {
                "id": 38845,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "457:7:75",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "449:24:75",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 38846,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "468:4:75",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 38853,
            "nodeType": "VariableDeclaration",
            "src": "510:62:75",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "lpVaultsByPrincipalToken",
            "nameLocation": "548:24:75",
            "scope": 39092,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 38852,
              "keyType": {
                "id": 38849,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "518:7:75",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "510:29:75",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 38850,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "529:7:75",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 38851,
                "nodeType": "ArrayTypeName",
                "src": "529:9:75",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 38859,
            "nodeType": "EventDefinition",
            "src": "714:102:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b82",
            "name": "RegistryUpdated",
            "nameLocation": "720:15:75",
            "parameters": {
              "id": 38858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38855,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldRegistry",
                  "nameLocation": "761:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38859,
                  "src": "745:27:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38857,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newRegistry",
                  "nameLocation": "798:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38859,
                  "src": "782:27:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:80:75"
            }
          },
          {
            "id": 38863,
            "nodeType": "EventDefinition",
            "src": "821:58:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "331cedc71f28c46d467691770675b586e8aa77a0d4fe09f257d01ef00bc15458",
            "name": "ImplementationAdded",
            "nameLocation": "827:19:75",
            "parameters": {
              "id": 38862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38861,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "863:14:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38863,
                  "src": "847:30:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:32:75"
            }
          },
          {
            "id": 38867,
            "nodeType": "EventDefinition",
            "src": "884:60:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "af23121e2402485071dadf421078b368d7b67e54cabcc81540563c5d6bf1a4c3",
            "name": "ImplementationRemoved",
            "nameLocation": "890:21:75",
            "parameters": {
              "id": 38866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38865,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "928:14:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38867,
                  "src": "912:30:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "911:32:75"
            }
          },
          {
            "id": 38875,
            "nodeType": "EventDefinition",
            "src": "949:141:75",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "70491df1363288147716f63c69ba69c988564086c0479ca0ee5c3896b8d5c59c",
            "name": "LPVaultDeployed",
            "nameLocation": "955:15:75",
            "parameters": {
              "id": 38874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38869,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpVault",
                  "nameLocation": "996:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38875,
                  "src": "980:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38871,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "1029:14:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38875,
                  "src": "1013:30:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38873,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "principalToken",
                  "nameLocation": "1069:14:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38875,
                  "src": "1053:30:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "970:119:75"
            }
          },
          {
            "id": 38883,
            "nodeType": "FunctionDefinition",
            "src": "1155:132:75",
            "nodes": [],
            "body": {
              "id": 38882,
              "nodeType": "Block",
              "src": "1169:118:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38879,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26071,
                      "src": "1179:20:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:22:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38881,
                  "nodeType": "ExpressionStatement",
                  "src": "1179:22:75"
                }
              ]
            },
            "documentation": {
              "id": 38876,
              "nodeType": "StructuredDocumentation",
              "src": "1096:54:75",
              "text": " @notice Constructor of the contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:2:75"
            },
            "returnParameters": {
              "id": 38878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:0:75"
            },
            "scope": 39092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38899,
            "nodeType": "FunctionDefinition",
            "src": "1352:130:75",
            "nodes": [],
            "body": {
              "id": 38898,
              "nodeType": "Block",
              "src": "1412:70:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38891,
                      "name": "__Ownable2Step_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25530,
                      "src": "1422:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1422:21:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38893,
                  "nodeType": "ExpressionStatement",
                  "src": "1422:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38895,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38886,
                        "src": "1465:9:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38894,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38982,
                      "src": "1453:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:22:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38897,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:22:75"
                }
              ]
            },
            "documentation": {
              "id": 38884,
              "nodeType": "StructuredDocumentation",
              "src": "1293:54:75",
              "text": " @notice Initializer of the contract"
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38888,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25992,
                  "src": "1400:11:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "1400:11:75"
              }
            ],
            "name": "initialize",
            "nameLocation": "1361:10:75",
            "parameters": {
              "id": 38887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38886,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "1380:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38899,
                  "src": "1372:17:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1371:19:75"
            },
            "returnParameters": {
              "id": 38890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1412:0:75"
            },
            "scope": 39092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38950,
            "nodeType": "FunctionDefinition",
            "src": "1539:776:75",
            "nodes": [],
            "body": {
              "id": 38949,
              "nodeType": "Block",
              "src": "1706:609:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38912,
                      "name": "lpVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38910,
                      "src": "1716:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 38918,
                              "name": "_implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38902,
                              "src": "1750:15:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 38919,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38906,
                              "src": "1767:5:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 38917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1734:15:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$30996_$",
                              "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                            },
                            "typeName": {
                              "id": 38916,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 38915,
                                "name": "BeaconProxy",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 30996,
                                "src": "1738:11:75"
                              },
                              "referencedDeclaration": 30996,
                              "src": "1738:11:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeaconProxy_$30996",
                                "typeString": "contract BeaconProxy"
                              }
                            }
                          },
                          "id": 38920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1734:39:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeaconProxy_$30996",
                            "typeString": "contract BeaconProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeaconProxy_$30996",
                            "typeString": "contract BeaconProxy"
                          }
                        ],
                        "id": 38914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1726:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 38913,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1726:7:75",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 38921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1726:48:75",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1716:58:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38923,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:58:75"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 38925,
                              "name": "lpVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38910,
                              "src": "1797:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38924,
                            "name": "ILPVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39665,
                            "src": "1788:8:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ILPVault_$39665_$",
                              "typeString": "type(contract ILPVault)"
                            }
                          },
                          "id": 38926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1788:17:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILPVault_$39665",
                            "typeString": "contract ILPVault"
                          }
                        },
                        "id": 38927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getPrincipalToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39664,
                        "src": "1788:35:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 38928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1788:37:75",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 38929,
                      "name": "_principalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38904,
                      "src": "1829:15:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1788:56:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38935,
                  "nodeType": "IfStatement",
                  "src": "1784:387:75",
                  "trueBody": {
                    "id": 38934,
                    "nodeType": "Block",
                    "src": "1846:325:75",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38931,
                            "name": "PrincipalTokenMismatchError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39670,
                            "src": "2131:27:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2131:29:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38933,
                        "nodeType": "RevertStatement",
                        "src": "2124:36:75"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38937,
                        "name": "lpVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38910,
                        "src": "2201:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38938,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38902,
                        "src": "2210:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38939,
                        "name": "_principalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38904,
                        "src": "2227:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38936,
                      "name": "LPVaultDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38875,
                      "src": "2185:15:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 38940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2185:58:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38941,
                  "nodeType": "EmitStatement",
                  "src": "2180:63:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38946,
                        "name": "lpVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38910,
                        "src": "2300:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 38942,
                          "name": "lpVaultsByPrincipalToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38853,
                          "src": "2253:24:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 38944,
                        "indexExpression": {
                          "id": 38943,
                          "name": "_principalToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38904,
                          "src": "2278:15:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2253:41:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 38945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2253:46:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 38947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:55:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38948,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:55:75"
                }
              ]
            },
            "baseFunctions": [
              39690
            ],
            "documentation": {
              "id": 38900,
              "nodeType": "StructuredDocumentation",
              "src": "1488:46:75",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "4dceb166",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployLPVault",
            "nameLocation": "1548:13:75",
            "overrides": {
              "id": 38908,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1671:8:75"
            },
            "parameters": {
              "id": 38907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38902,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "1579:15:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38950,
                  "src": "1571:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38904,
                  "mutability": "mutable",
                  "name": "_principalToken",
                  "nameLocation": "1612:15:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38950,
                  "src": "1604:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38906,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1650:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38950,
                  "src": "1637:18:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38905,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1561:100:75"
            },
            "returnParameters": {
              "id": 38911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38910,
                  "mutability": "mutable",
                  "name": "lpVault",
                  "nameLocation": "1697:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38950,
                  "src": "1689:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1688:17:75"
            },
            "scope": 39092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38982,
            "nodeType": "FunctionDefinition",
            "src": "2372:265:75",
            "nodes": [],
            "body": {
              "id": 38981,
              "nodeType": "Block",
              "src": "2428:209:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38957,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "2438:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 38958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:13:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38959,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:13:75"
                },
                {
                  "condition": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38960,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38953,
                          "src": "2466:9:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2487:1:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2479:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38961,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2479:7:75",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2479:10:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2466:23:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 38966,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2465:25:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38971,
                  "nodeType": "IfStatement",
                  "src": "2461:89:75",
                  "trueBody": {
                    "id": 38970,
                    "nodeType": "Block",
                    "src": "2492:58:75",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38967,
                            "name": "RegistryZeroAddressError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39672,
                            "src": "2513:24:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2513:26:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38969,
                        "nodeType": "RevertStatement",
                        "src": "2506:33:75"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38973,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38844,
                        "src": "2580:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38974,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38953,
                        "src": "2590:9:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38972,
                      "name": "RegistryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38859,
                      "src": "2564:15:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 38975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:36:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38976,
                  "nodeType": "EmitStatement",
                  "src": "2559:41:75"
                },
                {
                  "expression": {
                    "id": 38979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38977,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38844,
                      "src": "2610:8:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38978,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38953,
                      "src": "2621:9:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2610:20:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38980,
                  "nodeType": "ExpressionStatement",
                  "src": "2610:20:75"
                }
              ]
            },
            "baseFunctions": [
              39696
            ],
            "documentation": {
              "id": 38951,
              "nodeType": "StructuredDocumentation",
              "src": "2321:46:75",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "a91ee0dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRegistry",
            "nameLocation": "2381:11:75",
            "overrides": {
              "id": 38955,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2419:8:75"
            },
            "parameters": {
              "id": 38954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38953,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "2401:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 38982,
                  "src": "2393:17:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2393:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2392:19:75"
            },
            "returnParameters": {
              "id": 38956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2428:0:75"
            },
            "scope": 39092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39023,
            "nodeType": "FunctionDefinition",
            "src": "2694:430:75",
            "nodes": [],
            "body": {
              "id": 39022,
              "nodeType": "Block",
              "src": "2762:362:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38989,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "2772:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 38990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2772:13:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38991,
                  "nodeType": "ExpressionStatement",
                  "src": "2772:13:75"
                },
                {
                  "condition": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38992,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38985,
                          "src": "2800:15:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2827:1:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2819:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38993,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2819:7:75",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2819:10:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2800:29:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 38998,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2799:31:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 39004,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38985,
                          "src": "2928:15:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39003,
                        "name": "isImplementationValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39076,
                        "src": "2906:21:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 39005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2906:38:75",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 39010,
                    "nodeType": "IfStatement",
                    "src": "2902:109:75",
                    "trueBody": {
                      "id": 39009,
                      "nodeType": "Block",
                      "src": "2946:65:75",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 39006,
                              "name": "ImplementationAlreadyAddedError",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39676,
                              "src": "2967:31:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 39007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2967:33:75",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 39008,
                          "nodeType": "RevertStatement",
                          "src": "2960:40:75"
                        }
                      ]
                    }
                  },
                  "id": 39011,
                  "nodeType": "IfStatement",
                  "src": "2795:216:75",
                  "trueBody": {
                    "id": 39002,
                    "nodeType": "Block",
                    "src": "2832:64:75",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38999,
                            "name": "ImplementationZeroAddressError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39674,
                            "src": "2853:30:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 39000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:32:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39001,
                        "nodeType": "RevertStatement",
                        "src": "2846:39:75"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 39013,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38985,
                        "src": "3045:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39012,
                      "name": "ImplementationAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38863,
                      "src": "3025:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3025:36:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39015,
                  "nodeType": "EmitStatement",
                  "src": "3020:41:75"
                },
                {
                  "expression": {
                    "id": 39020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 39016,
                        "name": "implementationRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38848,
                        "src": "3071:22:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 39018,
                      "indexExpression": {
                        "id": 39017,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38985,
                        "src": "3094:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3071:39:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 39019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3113:4:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3071:46:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39021,
                  "nodeType": "ExpressionStatement",
                  "src": "3071:46:75"
                }
              ]
            },
            "baseFunctions": [
              39708
            ],
            "documentation": {
              "id": 38983,
              "nodeType": "StructuredDocumentation",
              "src": "2643:46:75",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "c6e2a400",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addImplementation",
            "nameLocation": "2703:17:75",
            "overrides": {
              "id": 38987,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2753:8:75"
            },
            "parameters": {
              "id": 38986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38985,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "2729:15:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 39023,
                  "src": "2721:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2720:25:75"
            },
            "returnParameters": {
              "id": 38988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2762:0:75"
            },
            "scope": 39092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39052,
            "nodeType": "FunctionDefinition",
            "src": "3181:324:75",
            "nodes": [],
            "body": {
              "id": 39051,
              "nodeType": "Block",
              "src": "3252:253:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39030,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "3262:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 39031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:13:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39032,
                  "nodeType": "ExpressionStatement",
                  "src": "3262:13:75"
                },
                {
                  "condition": {
                    "id": 39036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3289:39:75",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 39034,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39026,
                          "src": "3312:15:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39033,
                        "name": "isImplementationValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39076,
                        "src": "3290:21:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 39035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3290:38:75",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39041,
                  "nodeType": "IfStatement",
                  "src": "3285:105:75",
                  "trueBody": {
                    "id": 39040,
                    "nodeType": "Block",
                    "src": "3330:60:75",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 39037,
                            "name": "ImplementationInvalidError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39678,
                            "src": "3351:26:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 39038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3351:28:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39039,
                        "nodeType": "RevertStatement",
                        "src": "3344:35:75"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 39043,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39026,
                        "src": "3426:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39042,
                      "name": "ImplementationRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38867,
                      "src": "3404:21:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3404:38:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39045,
                  "nodeType": "EmitStatement",
                  "src": "3399:43:75"
                },
                {
                  "expression": {
                    "id": 39049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3452:46:75",
                    "subExpression": {
                      "baseExpression": {
                        "id": 39046,
                        "name": "implementationRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38848,
                        "src": "3459:22:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 39048,
                      "indexExpression": {
                        "id": 39047,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39026,
                        "src": "3482:15:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3459:39:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39050,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:46:75"
                }
              ]
            },
            "baseFunctions": [
              39714
            ],
            "documentation": {
              "id": 39024,
              "nodeType": "StructuredDocumentation",
              "src": "3130:46:75",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "22175a32",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeImplementation",
            "nameLocation": "3190:20:75",
            "overrides": {
              "id": 39028,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3243:8:75"
            },
            "parameters": {
              "id": 39027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39026,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "3219:15:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 39052,
                  "src": "3211:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3210:25:75"
            },
            "returnParameters": {
              "id": 39029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3252:0:75"
            },
            "scope": 39092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39062,
            "nodeType": "FunctionDefinition",
            "src": "3706:96:75",
            "nodes": [],
            "body": {
              "id": 39061,
              "nodeType": "Block",
              "src": "3770:32:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39059,
                    "name": "registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38844,
                    "src": "3787:8:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 39058,
                  "id": 39060,
                  "nodeType": "Return",
                  "src": "3780:15:75"
                }
              ]
            },
            "baseFunctions": [
              39702
            ],
            "documentation": {
              "id": 39053,
              "nodeType": "StructuredDocumentation",
              "src": "3655:46:75",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "5ab1bd53",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistry",
            "nameLocation": "3715:11:75",
            "overrides": {
              "id": 39055,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3743:8:75"
            },
            "parameters": {
              "id": 39054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3726:2:75"
            },
            "returnParameters": {
              "id": 39058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39057,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39062,
                  "src": "3761:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3760:9:75"
            },
            "scope": 39092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39076,
            "nodeType": "FunctionDefinition",
            "src": "3859:169:75",
            "nodes": [],
            "body": {
              "id": 39075,
              "nodeType": "Block",
              "src": "3965:63:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 39071,
                      "name": "implementationRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38848,
                      "src": "3982:22:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 39073,
                    "indexExpression": {
                      "id": 39072,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39065,
                      "src": "4005:15:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3982:39:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 39070,
                  "id": 39074,
                  "nodeType": "Return",
                  "src": "3975:46:75"
                }
              ]
            },
            "baseFunctions": [
              39722
            ],
            "documentation": {
              "id": 39063,
              "nodeType": "StructuredDocumentation",
              "src": "3808:46:75",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "946dffde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isImplementationValid",
            "nameLocation": "3868:21:75",
            "overrides": {
              "id": 39067,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3941:8:75"
            },
            "parameters": {
              "id": 39066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39065,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "3907:15:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 39076,
                  "src": "3899:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3899:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3889:39:75"
            },
            "returnParameters": {
              "id": 39070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39069,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39076,
                  "src": "3959:4:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39068,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3958:6:75"
            },
            "scope": 39092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39091,
            "nodeType": "FunctionDefinition",
            "src": "4085:192:75",
            "nodes": [],
            "body": {
              "id": 39090,
              "nodeType": "Block",
              "src": "4212:65:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 39086,
                      "name": "lpVaultsByPrincipalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38853,
                      "src": "4229:24:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 39088,
                    "indexExpression": {
                      "id": 39087,
                      "name": "_principalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39079,
                      "src": "4254:15:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4229:41:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 39085,
                  "id": 39089,
                  "nodeType": "Return",
                  "src": "4222:48:75"
                }
              ]
            },
            "baseFunctions": [
              39731
            ],
            "documentation": {
              "id": 39077,
              "nodeType": "StructuredDocumentation",
              "src": "4034:46:75",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "a99616a5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLPVaultsForPrincipalToken",
            "nameLocation": "4094:28:75",
            "overrides": {
              "id": 39081,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4176:8:75"
            },
            "parameters": {
              "id": 39080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39079,
                  "mutability": "mutable",
                  "name": "_principalToken",
                  "nameLocation": "4140:15:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 39091,
                  "src": "4132:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4132:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4122:39:75"
            },
            "returnParameters": {
              "id": 39085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39084,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39091,
                  "src": "4194:16:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 39082,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4194:7:75",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 39083,
                    "nodeType": "ArrayTypeName",
                    "src": "4194:9:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4193:18:75"
            },
            "scope": 39092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38839,
              "name": "ILPVaultFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39732,
              "src": "238:15:75"
            },
            "id": 38840,
            "nodeType": "InheritanceSpecifier",
            "src": "238:15:75"
          },
          {
            "baseName": {
              "id": 38841,
              "name": "Ownable2StepUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25618,
              "src": "255:23:75"
            },
            "id": 38842,
            "nodeType": "InheritanceSpecifier",
            "src": "255:23:75"
          }
        ],
        "canonicalName": "LPVaultFactory",
        "contractDependencies": [
          30996
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39092,
          25618,
          25750,
          27850,
          26090,
          39732
        ],
        "name": "LPVaultFactory",
        "nameLocation": "220:14:75",
        "scope": 39093,
        "usedErrors": [
          39670,
          39672,
          39674,
          39676,
          39678
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 75
}