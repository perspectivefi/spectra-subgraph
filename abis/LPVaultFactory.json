{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ImplementationAlreadyAddedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ImplementationInvalidError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ImplementationZeroAddressError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrincipalTokenMismatchError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RegistryZeroAddressError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ImplementationAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ImplementationRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpVault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "principalToken",
          "type": "address"
        }
      ],
      "name": "LPVaultDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldRegistry",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRegistry",
          "type": "address"
        }
      ],
      "name": "RegistryUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "addImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_principalToken",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "deployLPVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "lpVault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_principalToken",
          "type": "address"
        }
      ],
      "name": "getLPVaultsForPrincipalToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "isImplementationValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "removeImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6115ad806100ec6000396000f3fe60806040523480156200001157600080fd5b5060043610620000e05760003560e01c8063946dffde1162000097578063c4d66de8116200006e578063c4d66de814620001e7578063c6e2a40014620001fe578063e30c39781462000215578063f2fde38b146200022757600080fd5b8063946dffde146200016a578063a91ee0dc14620001aa578063a99616a514620001c157600080fd5b806322175a3214620000e55780634dceb16614620000fe5780635ab1bd531462000132578063715018a6146200014457806379ba5097146200014e5780638da5cb5b1462000158575b600080fd5b620000fc620000f636600462000a3c565b6200023e565b005b620001156200010f36600462000a79565b620002d7565b6040516001600160a01b0390911681526020015b60405180910390f35b6097546001600160a01b031662000115565b620000fc620004e7565b620000fc620004ff565b6033546001600160a01b031662000115565b620001996200017b36600462000a3c565b6001600160a01b031660009081526098602052604090205460ff1690565b604051901515815260200162000129565b620000fc620001bb36600462000a3c565b62000581565b620001d8620001d236600462000a3c565b6200060f565b60405162000129919062000b5d565b620000fc620001f836600462000a3c565b62000687565b620000fc6200020f36600462000a3c565b620007ad565b6065546001600160a01b031662000115565b620000fc6200023836600462000a3c565b62000872565b62000248620008e6565b6001600160a01b03811660009081526098602052604090205460ff16620002825760405163d9a53e8f60e01b815260040160405180910390fd5b6040516001600160a01b038216907faf23121e2402485071dadf421078b368d7b67e54cabcc81540563c5d6bf1a4c390600090a26001600160a01b03166000908152609860205260409020805460ff19169055565b6001600160a01b03831660009081526098602052604081205460ff16620003115760405163d9a53e8f60e01b815260040160405180910390fd5b8382604051620003219062000a18565b6200032e92919062000bac565b604051809103906000f0801580156200034b573d6000803e3d6000fd5b509050826001600160a01b0316816001600160a01b031663adb724bf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000397573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003bd919062000c0c565b6001600160a01b031614620003e55760405163543d166160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316826001600160a01b03167f70491df1363288147716f63c69ba69c988564086c0479ca0ee5c3896b8d5c59c60405160405180910390a46001600160a01b0380841660009081526099602090815260408220805460018101825590835291200180549183166001600160a01b03199092168217905563f2fde38b620004856033546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620004c757600080fd5b505af1158015620004dc573d6000803e3d6000fd5b505050509392505050565b620004f1620008e6565b620004fd600062000942565b565b60655433906001600160a01b03168114620005735760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b6200057e8162000942565b50565b6200058b620008e6565b6001600160a01b038116620005b35760405163f18048e960e01b815260040160405180910390fd5b6097546040516001600160a01b038084169216907f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8290600090a3609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152609960209081526040918290208054835181840281018401909452808452606093928301828280156200067b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200065c575b50505050509050919050565b600054610100900460ff1615808015620006a85750600054600160ff909116105b80620006c45750303b158015620006c4575060005460ff166001145b620007295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200056a565b6000805460ff1916600117905580156200074d576000805461ff0019166101001790555b620007576200095d565b620007628262000581565b8015620007a9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b620007b7620008e6565b6001600160a01b038116620007df57604051630e0c911f60e11b815260040160405180910390fd5b6001600160a01b03811660009081526098602052604090205460ff16156200081a57604051639336390d60e01b815260040160405180910390fd5b6040516001600160a01b038216907f331cedc71f28c46d467691770675b586e8aa77a0d4fe09f257d01ef00bc1545890600090a26001600160a01b03166000908152609860205260409020805460ff19166001179055565b6200087c620008e6565b606580546001600160a01b0383166001600160a01b03199091168117909155620008ae6033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6033546001600160a01b03163314620004fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200056a565b606580546001600160a01b03191690556200057e8162000991565b600054610100900460ff16620009875760405162461bcd60e51b81526004016200056a9062000c2c565b620004fd620009e3565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1662000a0d5760405162461bcd60e51b81526004016200056a9062000c2c565b620004fd3362000942565b6109008062000c7883390190565b6001600160a01b03811681146200057e57600080fd5b60006020828403121562000a4f57600080fd5b813562000a5c8162000a26565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121562000a8f57600080fd5b833562000a9c8162000a26565b9250602084013562000aae8162000a26565b9150604084013567ffffffffffffffff8082111562000acc57600080fd5b818601915086601f83011262000ae157600080fd5b81358181111562000af65762000af662000a63565b604051601f8201601f19908116603f0116810190838211818310171562000b215762000b2162000a63565b8160405282815289602084870101111562000b3b57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562000ba05783516001600160a01b03168352928401929184019160010162000b79565b50909695505050505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101562000bea5785810183015185820160600152820162000bcc565b506000606082860101526060601f19601f830116850101925050509392505050565b60006020828403121562000c1f57600080fd5b815162000a5c8162000a26565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe60806040526040516109003803806109008339810160408190526100229161045b565b61002e82826000610035565b5050610585565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e9919061051b565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d7919061051b565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108d9602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe9190610536565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b81526004016101699190610552565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b50506000910152565b6000806040838503121561046e57600080fd5b61047783610405565b60208401519092506001600160401b038082111561049457600080fd5b818501915085601f8301126104a857600080fd5b8151818111156104ba576104ba610421565b604051601f8201601f19908116603f011681019083821181831017156104e2576104e2610421565b816040528281528860208487010111156104fb57600080fd5b61050c836020830160208801610437565b80955050505050509250929050565b60006020828403121561052d57600080fd5b6102c882610405565b60008251610548818460208701610437565b9190910192915050565b6020815260008251806020840152610571816040850160208701610437565b601f01601f19169190910160400192915050565b610345806105946000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e960279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516101419190610299565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102b5565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b50506000910152565b600082516102ab818460208701610275565b9190910192915050565b60208152600082518060208401526102d4816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201ee55915b041c5198daaf4757954d2d95f61fe9bb99630d5e3e9cbaf4894428764736f6c63430008110033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202ad8068ef90445c15a8196f215117cf064f7f7924765a4edd5a37d5cce7fbd3e64736f6c63430008110033",
    "sourceMap": "211:4339:70:-:0;;;1155:132;;;;;;;;;-1:-1:-1;1179:22:70;:20;:22::i;:::-;211:4339;;5928:280:19;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:19;;216:2:104;5987:66:19;;;198:21:104;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:104;;;338:37;392:19;;5987:66:19;;;;;;;;6067:12;;6083:15;6067:12;;;:31;6063:139;;6114:12;:30;;-1:-1:-1;;6114:30:19;6129:15;6114:30;;;;;;6163:28;;564:36:104;;;6163:28:19;;552:2:104;537:18;6163:28:19;;;;;;;6063:139;5928:280::o;422:184:104:-;211:4339:70;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000e05760003560e01c8063946dffde1162000097578063c4d66de8116200006e578063c4d66de814620001e7578063c6e2a40014620001fe578063e30c39781462000215578063f2fde38b146200022757600080fd5b8063946dffde146200016a578063a91ee0dc14620001aa578063a99616a514620001c157600080fd5b806322175a3214620000e55780634dceb16614620000fe5780635ab1bd531462000132578063715018a6146200014457806379ba5097146200014e5780638da5cb5b1462000158575b600080fd5b620000fc620000f636600462000a3c565b6200023e565b005b620001156200010f36600462000a79565b620002d7565b6040516001600160a01b0390911681526020015b60405180910390f35b6097546001600160a01b031662000115565b620000fc620004e7565b620000fc620004ff565b6033546001600160a01b031662000115565b620001996200017b36600462000a3c565b6001600160a01b031660009081526098602052604090205460ff1690565b604051901515815260200162000129565b620000fc620001bb36600462000a3c565b62000581565b620001d8620001d236600462000a3c565b6200060f565b60405162000129919062000b5d565b620000fc620001f836600462000a3c565b62000687565b620000fc6200020f36600462000a3c565b620007ad565b6065546001600160a01b031662000115565b620000fc6200023836600462000a3c565b62000872565b62000248620008e6565b6001600160a01b03811660009081526098602052604090205460ff16620002825760405163d9a53e8f60e01b815260040160405180910390fd5b6040516001600160a01b038216907faf23121e2402485071dadf421078b368d7b67e54cabcc81540563c5d6bf1a4c390600090a26001600160a01b03166000908152609860205260409020805460ff19169055565b6001600160a01b03831660009081526098602052604081205460ff16620003115760405163d9a53e8f60e01b815260040160405180910390fd5b8382604051620003219062000a18565b6200032e92919062000bac565b604051809103906000f0801580156200034b573d6000803e3d6000fd5b509050826001600160a01b0316816001600160a01b031663adb724bf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000397573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003bd919062000c0c565b6001600160a01b031614620003e55760405163543d166160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316826001600160a01b03167f70491df1363288147716f63c69ba69c988564086c0479ca0ee5c3896b8d5c59c60405160405180910390a46001600160a01b0380841660009081526099602090815260408220805460018101825590835291200180549183166001600160a01b03199092168217905563f2fde38b620004856033546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620004c757600080fd5b505af1158015620004dc573d6000803e3d6000fd5b505050509392505050565b620004f1620008e6565b620004fd600062000942565b565b60655433906001600160a01b03168114620005735760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b6200057e8162000942565b50565b6200058b620008e6565b6001600160a01b038116620005b35760405163f18048e960e01b815260040160405180910390fd5b6097546040516001600160a01b038084169216907f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8290600090a3609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152609960209081526040918290208054835181840281018401909452808452606093928301828280156200067b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200065c575b50505050509050919050565b600054610100900460ff1615808015620006a85750600054600160ff909116105b80620006c45750303b158015620006c4575060005460ff166001145b620007295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200056a565b6000805460ff1916600117905580156200074d576000805461ff0019166101001790555b620007576200095d565b620007628262000581565b8015620007a9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b620007b7620008e6565b6001600160a01b038116620007df57604051630e0c911f60e11b815260040160405180910390fd5b6001600160a01b03811660009081526098602052604090205460ff16156200081a57604051639336390d60e01b815260040160405180910390fd5b6040516001600160a01b038216907f331cedc71f28c46d467691770675b586e8aa77a0d4fe09f257d01ef00bc1545890600090a26001600160a01b03166000908152609860205260409020805460ff19166001179055565b6200087c620008e6565b606580546001600160a01b0383166001600160a01b03199091168117909155620008ae6033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6033546001600160a01b03163314620004fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200056a565b606580546001600160a01b03191690556200057e8162000991565b600054610100900460ff16620009875760405162461bcd60e51b81526004016200056a9062000c2c565b620004fd620009e3565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1662000a0d5760405162461bcd60e51b81526004016200056a9062000c2c565b620004fd3362000942565b6109008062000c7883390190565b6001600160a01b03811681146200057e57600080fd5b60006020828403121562000a4f57600080fd5b813562000a5c8162000a26565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121562000a8f57600080fd5b833562000a9c8162000a26565b9250602084013562000aae8162000a26565b9150604084013567ffffffffffffffff8082111562000acc57600080fd5b818601915086601f83011262000ae157600080fd5b81358181111562000af65762000af662000a63565b604051601f8201601f19908116603f0116810190838211818310171562000b215762000b2162000a63565b8160405282815289602084870101111562000b3b57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562000ba05783516001600160a01b03168352928401929184019160010162000b79565b50909695505050505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101562000bea5785810183015185820160600152820162000bcc565b506000606082860101526060601f19601f830116850101925050509392505050565b60006020828403121562000c1f57600080fd5b815162000a5c8162000a26565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe60806040526040516109003803806109008339810160408190526100229161045b565b61002e82826000610035565b5050610585565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e9919061051b565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d7919061051b565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108d9602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe9190610536565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b81526004016101699190610552565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b50506000910152565b6000806040838503121561046e57600080fd5b61047783610405565b60208401519092506001600160401b038082111561049457600080fd5b818501915085601f8301126104a857600080fd5b8151818111156104ba576104ba610421565b604051601f8201601f19908116603f011681019083821181831017156104e2576104e2610421565b816040528281528860208487010111156104fb57600080fd5b61050c836020830160208801610437565b80955050505050509250929050565b60006020828403121561052d57600080fd5b6102c882610405565b60008251610548818460208701610437565b9190910192915050565b6020815260008251806020840152610571816040850160208701610437565b601f01601f19169190910160400192915050565b610345806105946000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e960279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516101419190610299565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102b5565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b50506000910152565b600082516102ab818460208701610275565b9190910192915050565b60208152600082518060208401526102d4816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201ee55915b041c5198daaf4757954d2d95f61fe9bb99630d5e3e9cbaf4894428764736f6c63430008110033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202ad8068ef90445c15a8196f215117cf064f7f7924765a4edd5a37d5cce7fbd3e64736f6c63430008110033",
    "sourceMap": "211:4339:70:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3452:324;;;;;;:::i;:::-;;:::i;:::-;;1539:1047;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1900:32:104;;;1882:51;;1870:2;1855:18;1539:1047:70;;;;;;;;3977:96;4058:8;;-1:-1:-1;;;;;4058:8:70;3977:96;;2071:101:16;;;:::i;2005:206:15:-;;;:::i;1441:85:16:-;1513:6;;-1:-1:-1;;;;;1513:6:16;1441:85;;4130:169:70;;;;;;:::i;:::-;-1:-1:-1;;;;;4253:39:70;4230:4;4253:39;;;:22;:39;;;;;;;;;4130:169;;;;2109:14:104;;2102:22;2084:41;;2072:2;2057:18;4130:169:70;1944:187:104;2643:265:70;;;;;;:::i;:::-;;:::i;4356:192::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1352:130::-;;;;;;:::i;:::-;;:::i;2965:430::-;;;;;;:::i;:::-;;:::i;1118:99:15:-;1197:13;;-1:-1:-1;;;;;1197:13:15;1118:99;;1410:178;;;;;;:::i;:::-;;:::i;3452:324:70:-;3533:13;:11;:13::i;:::-;-1:-1:-1;;;;;4253:39:70;;4230:4;4253:39;;;:22;:39;;;;;;;;3556:105;;3622:28;;-1:-1:-1;;;3622:28:70;;;;;;;;;;;3556:105;3675:38;;-1:-1:-1;;;;;3675:38:70;;;;;;;;-1:-1:-1;;;;;3730:39:70;;;;;:22;:39;;;;;3723:46;;-1:-1:-1;;3723:46:70;;;3452:324::o;1539:1047::-;-1:-1:-1;;;;;4253:39:70;;1689:15;4253:39;;;:22;:39;;;;;;;;1716:105;;1782:28;;-1:-1:-1;;;1782:28:70;;;;;;;;;;;1716:105;1864:15;1881:5;1848:39;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1830:58;;1943:15;-1:-1:-1;;;;;1902:56:70;1911:7;-1:-1:-1;;;;;1902:35:70;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1902:56:70;;1898:387;;2245:29;;-1:-1:-1;;;2245:29:70;;;;;;;;;;;1898:387;2341:15;-1:-1:-1;;;;;2299:58:70;2324:15;-1:-1:-1;;;;;2299:58:70;2315:7;-1:-1:-1;;;;;2299:58:70;;;;;;;;;;;-1:-1:-1;;;;;2367:41:70;;;;;;;:24;:41;;;;;;;:55;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2367:55:70;;;;;;;2520:50;2571:7;1513:6:16;;-1:-1:-1;;;;;1513:6:16;;1441:85;2571:7:70;2520:59;;-1:-1:-1;;;;;;2520:59:70;;;;;;;-1:-1:-1;;;;;1900:32:104;;;2520:59:70;;;1882:51:104;1855:18;;2520:59:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1539:1047;;;;;:::o;2071:101:16:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;2005:206:15:-;1197:13;;929:10:29;;-1:-1:-1;;;;;1197:13:15;2098:24;;2090:78;;;;-1:-1:-1;;;2090:78:15;;3905:2:104;2090:78:15;;;3887:21:104;3944:2;3924:18;;;3917:30;3983:34;3963:18;;;3956:62;-1:-1:-1;;;4034:18:104;;;4027:39;4083:19;;2090:78:15;;;;;;;;;2178:26;2197:6;2178:18;:26::i;:::-;2041:170;2005:206::o;2643:265:70:-;2709:13;:11;:13::i;:::-;-1:-1:-1;;;;;2737:23:70;;2732:89;;2784:26;;-1:-1:-1;;;2784:26:70;;;;;;;;;;;2732:89;2851:8;;2835:36;;-1:-1:-1;;;;;2835:36:70;;;;2851:8;;2835:36;;2851:8;;2835:36;2881:8;:20;;-1:-1:-1;;;;;;2881:20:70;-1:-1:-1;;;;;2881:20:70;;;;;;;;;;2643:265::o;4356:192::-;-1:-1:-1;;;;;4500:41:70;;;;;;:24;:41;;;;;;;;;4493:48;;;;;;;;;;;;;;;;;4465:16;;4493:48;;;4500:41;4493:48;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4493:48:70;;;;;;;;;;;;;;;;;;;;;;;4356:192;;;:::o;1352:130::-;3268:19:19;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:19;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:19;1476:19:28;:23;;;3376:66:19;;-1:-1:-1;3425:12:19;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:19;;4315:2:104;3314:201:19;;;4297:21:104;4354:2;4334:18;;;4327:30;4393:34;4373:18;;;4366:62;-1:-1:-1;;;4444:18:104;;;4437:44;4498:19;;3314:201:19;4113:410:104;3314:201:19;3525:12;:16;;-1:-1:-1;;3525:16:19;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:19;;;;;3551:65;1422:21:70::1;:19;:21::i;:::-;1453:22;1465:9;1453:11;:22::i;:::-;3640:14:19::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:19;;;3710:14;;-1:-1:-1;4680:36:104;;3710:14:19;;4668:2:104;4653:18;3710:14:19;;;;;;;3636:99;3258:483;1352:130:70;:::o;2965:430::-;3043:13;:11;:13::i;:::-;-1:-1:-1;;;;;3071:29:70;;3066:216;;3124:32;;-1:-1:-1;;;3124:32:70;;;;;;;;;;;3066:216;-1:-1:-1;;;;;4253:39:70;;4230:4;4253:39;;;:22;:39;;;;;;;;3173:109;;;3238:33;;-1:-1:-1;;;3238:33:70;;;;;;;;;;;3173:109;3296:36;;-1:-1:-1;;;;;3296:36:70;;;;;;;;-1:-1:-1;;;;;3342:39:70;;;;;:22;:39;;;;;:46;;-1:-1:-1;;3342:46:70;3384:4;3342:46;;;2965:430::o;1410:178:15:-;1334:13:16;:11;:13::i;:::-;1499::15::1;:24:::0;;-1:-1:-1;;;;;1499:24:15;::::1;-1:-1:-1::0;;;;;;1499:24:15;;::::1;::::0;::::1;::::0;;;1563:7:::1;1513:6:16::0;;-1:-1:-1;;;;;1513:6:16;;1441:85;1563:7:15::1;-1:-1:-1::0;;;;;1538:43:15::1;;;;;;;;;;;1410:178:::0;:::o;1599:130:16:-;1513:6;;-1:-1:-1;;;;;1513:6:16;929:10:29;1662:23:16;1654:68;;;;-1:-1:-1;;;1654:68:16;;4929:2:104;1654:68:16;;;4911:21:104;;;4948:18;;;4941:30;5007:34;4987:18;;;4980:62;5059:18;;1654:68:16;4727:356:104;1772:153:15;1861:13;1854:20;;-1:-1:-1;;;;;;1854:20:15;;;1884:34;1909:8;1884:24;:34::i;733:100::-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;800:26:15::1;:24;:26::i;2673:187:16:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:16;;;-1:-1:-1;;;;;;2781:17:16;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1104:111::-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;1176:32:16::1;929:10:29::0;1176:18:16::1;:32::i;-1:-1:-1:-:0;;;;;;;;:::o;14:131:104:-;-1:-1:-1;;;;;89:31:104;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:104:o;402:127::-;463:10;458:3;454:20;451:1;444:31;494:4;491:1;484:15;518:4;515:1;508:15;534:1197;620:6;628;636;689:2;677:9;668:7;664:23;660:32;657:52;;;705:1;702;695:12;657:52;744:9;731:23;763:31;788:5;763:31;:::i;:::-;813:5;-1:-1:-1;870:2:104;855:18;;842:32;883:33;842:32;883:33;:::i;:::-;935:7;-1:-1:-1;993:2:104;978:18;;965:32;1016:18;1046:14;;;1043:34;;;1073:1;1070;1063:12;1043:34;1111:6;1100:9;1096:22;1086:32;;1156:7;1149:4;1145:2;1141:13;1137:27;1127:55;;1178:1;1175;1168:12;1127:55;1214:2;1201:16;1236:2;1232;1229:10;1226:36;;;1242:18;;:::i;:::-;1317:2;1311:9;1285:2;1371:13;;-1:-1:-1;;1367:22:104;;;1391:2;1363:31;1359:40;1347:53;;;1415:18;;;1435:22;;;1412:46;1409:72;;;1461:18;;:::i;:::-;1501:10;1497:2;1490:22;1536:2;1528:6;1521:18;1576:7;1571:2;1566;1562;1558:11;1554:20;1551:33;1548:53;;;1597:1;1594;1587:12;1548:53;1653:2;1648;1644;1640:11;1635:2;1627:6;1623:15;1610:46;1698:1;1693:2;1688;1680:6;1676:15;1672:24;1665:35;1719:6;1709:16;;;;;;;534:1197;;;;;:::o;2136:658::-;2307:2;2359:21;;;2429:13;;2332:18;;;2451:22;;;2278:4;;2307:2;2530:15;;;;2504:2;2489:18;;;2278:4;2573:195;2587:6;2584:1;2581:13;2573:195;;;2652:13;;-1:-1:-1;;;;;2648:39:104;2636:52;;2743:15;;;;2708:12;;;;2684:1;2602:9;2573:195;;;-1:-1:-1;2785:3:104;;2136:658;-1:-1:-1;;;;;;2136:658:104:o;2799:643::-;3003:1;2999;2994:3;2990:11;2986:19;2978:6;2974:32;2963:9;2956:51;2937:4;3026:2;3064;3059;3048:9;3044:18;3037:30;3096:6;3090:13;3139:6;3134:2;3123:9;3119:18;3112:34;3164:1;3174:140;3188:6;3185:1;3182:13;3174:140;;;3283:14;;;3279:23;;3273:30;3249:17;;;3268:2;3245:26;3238:66;3203:10;;3174:140;;;3178:3;3363:1;3358:2;3349:6;3338:9;3334:22;3330:31;3323:42;3433:2;3426;3422:7;3417:2;3409:6;3405:15;3401:29;3390:9;3386:45;3382:54;3374:62;;;;2799:643;;;;;:::o;3447:251::-;3517:6;3570:2;3558:9;3549:7;3545:23;3541:32;3538:52;;;3586:1;3583;3576:12;3538:52;3618:9;3612:16;3637:31;3662:5;3637:31;:::i;5088:407::-;5290:2;5272:21;;;5329:2;5309:18;;;5302:30;5368:34;5363:2;5348:18;;5341:62;-1:-1:-1;;;5434:2:104;5419:18;;5412:41;5485:3;5470:19;;5088:407::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addImplementation(address)": "c6e2a400",
    "deployLPVault(address,address,bytes)": "4dceb166",
    "getLPVaultsForPrincipalToken(address)": "a99616a5",
    "getRegistry()": "5ab1bd53",
    "initialize(address)": "c4d66de8",
    "isImplementationValid(address)": "946dffde",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "removeImplementation(address)": "22175a32",
    "renounceOwnership()": "715018a6",
    "setRegistry(address)": "a91ee0dc",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ImplementationAlreadyAddedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImplementationInvalidError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImplementationZeroAddressError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrincipalTokenMismatchError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegistryZeroAddressError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ImplementationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ImplementationRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"principalToken\",\"type\":\"address\"}],\"name\":\"LPVaultDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRegistry\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_principalToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"deployLPVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_principalToken\",\"type\":\"address\"}],\"name\":\"getLPVaultsForPrincipalToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"isImplementationValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"removeImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addImplementation(address)\":{\"params\":{\"_implementation\":\"The address of the implementation to add.\"}},\"deployLPVault(address,address,bytes)\":{\"params\":{\"_data\":\"The data to be passed during deployment. For example, the Curve LP Vault will take an initialize with parameters: abi.encodeWithSelector(initialize.selector, ...params)\",\"_implementation\":\"The address of the implementation.\",\"_principalToken\":\"The address of the principalToken.\"},\"returns\":{\"lpVault\":\"The address of the LPVault deployed.\"}},\"getLPVaultsForPrincipalToken(address)\":{\"params\":{\"_principalToken\":\"The address of the principalToken.\"},\"returns\":{\"_0\":\"lpVaults The list of LPVaults deployed for the given principalToken. LPVaults are returned without any particular sorting or filtering. They may also have different implementations.\"}},\"getRegistry()\":{\"returns\":{\"_0\":\"the address of the registry\"}},\"isImplementationValid(address)\":{\"params\":{\"_implementation\":\"The address of the implementation to check.\"},\"returns\":{\"_0\":\"true if the implementation has been added, false otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"removeImplementation(address)\":{\"params\":{\"_implementation\":\"The address of the implementation to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"_registry\":\"address of the Registry\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addImplementation(address)\":{\"notice\":\"Adds an implementation to the list of valid implementations. An implementation will need to be added to the factory before it can be used to create vaults.\"},\"constructor\":{\"notice\":\"Constructor of the contract\"},\"deployLPVault(address,address,bytes)\":{\"notice\":\"Deploys an LPVault with a given implementation.\"},\"getLPVaultsForPrincipalToken(address)\":{\"notice\":\"Getter for the list of deployed LPVaults for a given principalToken.\"},\"getRegistry()\":{\"notice\":\"Getter for the registry address.\"},\"initialize(address)\":{\"notice\":\"Initializer of the contract\"},\"isImplementationValid(address)\":{\"notice\":\"Checks if an implementation has been previously added.\"},\"removeImplementation(address)\":{\"notice\":\"Removes an implementation from the list of valid implementations.\"},\"setRegistry(address)\":{\"notice\":\"Setter for the registry address, Can only be called by the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/factory/LPVaultFactory.sol\":\"LPVaultFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/\",\":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/\",\":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/\",\":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/\",\":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/\",\":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x7dce633611f5149fa8dec27ccd28b88dc590fecbebdb7785d1f6728dae1e1c4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9974683c1eec209863fdec01d0c45d262302d62d7b972bc2ddcb25c33bc53fb\",\"dweb:/ipfs/QmSrcmeTka7VTz5HbjktmZdsMycARfadbCpjWTHiqwiqZC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol\":{\"keccak256\":\"0xe3d54e1a1a10fbc86fdfaf9100ba99c9c808588fd20d0c919457b903b5cae61a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e2f616c3ebcf6db05b9242b870f69bf902533cc3248e352b0e1e1a04d6da8b8\",\"dweb:/ipfs/QmbNV3EejvPoLWVXTjLRyHyFnaxdQoxpFkXMbZbPvDf7eq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c\",\"dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a\",\"dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xea49d64cd4c5556e61f1edc117cc74f2e69f14b524386ef6a336a58794191b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a3e700c25793a01bb63bb38f10b6dd4d0569280fd393d9b95a142ecfa247838\",\"dweb:/ipfs/QmX1FPaRMbMo22EudVK2xQsdcVcbNk3XKkcrzuQfQQEtMH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x4586689c55edb37fc3cac296d75d3851b3aee3f378aaa54d8a9258a384fbf541\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fb638e6f0d5279f6000579a71a482a7d3655aed62439549906e3584443c40\",\"dweb:/ipfs/QmangQhgXTvji3sAgNcvdnTs7ZR3KEwmHfw5DEAybxB7cw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3\",\"dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xba55137b57f58e805ab97462fbfc7e4b66c093a6813e29cc3f5d1569d39c27cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4bb6347403c2f3b1cf02b6108cc659730a564b0c5e629762dde8f5efe1e2a84\",\"dweb:/ipfs/QmTndaLNN7gioSQHg6Zu55Ysj7wUNCq11MV7JE7zt9nsGz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x5c04e814be62473d494fb8884c56327d98237df4d77668a4ab979ace139ff204\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a17916be90701e95b591bf18797c7e64bb614fa7bd3824533dde8594922e3979\",\"dweb:/ipfs/QmSRhaSy3g2Mp7MGxT6Ttfy7jiBeXr6iMVh2WNLRCzpZAF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xb49137b771712774960cca0acf428499e2aa85f179fe03712e5c06c5a6ab6316\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec66760482c33d84dda577e3a7a4b81000a92e37cae5c8b55339e2d83abfce03\",\"dweb:/ipfs/QmVDSFsp9dnW8P92Yrq2jAjr9piKke8gjuZX5QjtFuZRfx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x89bfffcd03b05b01af8dea42646c8118151e4fba967cde7064eb4acb697226d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13867b2b35c572397a233373750e30025c79ee32e23650b2bc3e384565e78d5f\",\"dweb:/ipfs/QmQscnGYq2XxbyvLgtyQNPT8ZwSbNsLxeH4pZyyae5yKA4\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"src/factory/LPVaultFactory.sol\":{\"keccak256\":\"0x6fbef27cdcf12a05f2b330f83f4e7b5c5630d2be41f148a7a3af8960485b34f6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://abad44383ad17cab99b5c7ce7a75e75e4aabd587b45b70137f0f7b6d0f027e04\",\"dweb:/ipfs/QmaG8t7eyyuhmZ6tM8hmyxrBjtohVsWAHuHVKJRox43see\"]},\"src/interfaces/ILPVault.sol\":{\"keccak256\":\"0x7019c894d0217ea66d268f75ba221c5507d02ec72e577760f0d5fd08b96806ee\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3c65ee9aae5c3b199cf72d467268951571ee53ad200a981e5d80529229270bac\",\"dweb:/ipfs/QmXeDhi3NN4KgY43EmiVt6zoT65ryahH7ioc1C3mFpQYw9\"]},\"src/interfaces/ILPVaultFactory.sol\":{\"keccak256\":\"0x73a09874a589a53f248ac99dd02122fa40861b1aea577bd7098b9ea27bd7060a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://991a363e35ab659e830a25b26ba6852710058be053a9eedf905ea6c552ecfb26\",\"dweb:/ipfs/QmQBz3wBw9SGovtehpf1HqP4tMvoQneczMbzLWAGxDXTNA\"]},\"src/interfaces/IPrincipalToken.sol\":{\"keccak256\":\"0x868c13dbdcab4c5fff2ce561c979939955ada57421cfea5249e7b29a63db1fac\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2e6ffeed633ef89ded920a34e1d0246869aaf3665c274a692e4283bc4ca1c5b1\",\"dweb:/ipfs/QmS48tyARUZjokYg5cqLYsocrddR5NRP3vwgCwL58jBw45\"]},\"src/interfaces/IYT.sol\":{\"keccak256\":\"0xd55cddc28a293c176ee72a70fde830bd8a81c1fce5886b3712a7995d5de52773\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c034d6d4398c75b7eefb82079a2f5bde949ea4a0d772d8cc678f44ef351d174\",\"dweb:/ipfs/QmT3QP6vx3BKDXBgn9YxSXJhtY6ghq1qLSejFmupJqN7eH\"]},\"src/tokens/PrincipalToken.sol\":{\"keccak256\":\"0xa5ccac40e7cf084fc546cd8b002e68705321fd59b8f827a28eac9207ebcde461\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8901eec1eca00b5467f2179bd60c55a4853ee242b95c1750b0dfee0d8deb7228\",\"dweb:/ipfs/QmRhQ3swavX1szb7ZwAVfs85nDSP2cfBkJPjMMmmi8HoQu\"]},\"src/util/lib/NamingUtil.sol\":{\"keccak256\":\"0x14beddc259d2dba417d22e66bf7830d3b17f377fdc34efeae94f1af27e016c4a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f72a453c9e4f914cd8d5f0f3a4c2718b66538c1e4da0a82706de838865b3c776\",\"dweb:/ipfs/QmUtyzVZY9Tki2NkzDchMXxxUbJ4qVPErdNR6b9YxKz3mV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ImplementationAlreadyAddedError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ImplementationInvalidError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ImplementationZeroAddressError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrincipalTokenMismatchError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RegistryZeroAddressError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ImplementationAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ImplementationRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "lpVault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "principalToken",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LPVaultDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldRegistry",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newRegistry",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RegistryUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addImplementation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_principalToken",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployLPVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "lpVault",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_principalToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLPVaultsForPrincipalToken",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isImplementationValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeImplementation"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "addImplementation(address)": {
            "params": {
              "_implementation": "The address of the implementation to add."
            }
          },
          "deployLPVault(address,address,bytes)": {
            "params": {
              "_data": "The data to be passed during deployment. For example, the Curve LP Vault will take an initialize with parameters: abi.encodeWithSelector(initialize.selector, ...params)",
              "_implementation": "The address of the implementation.",
              "_principalToken": "The address of the principalToken."
            },
            "returns": {
              "lpVault": "The address of the LPVault deployed."
            }
          },
          "getLPVaultsForPrincipalToken(address)": {
            "params": {
              "_principalToken": "The address of the principalToken."
            },
            "returns": {
              "_0": "lpVaults The list of LPVaults deployed for the given principalToken. LPVaults are returned without any particular sorting or filtering. They may also have different implementations."
            }
          },
          "getRegistry()": {
            "returns": {
              "_0": "the address of the registry"
            }
          },
          "isImplementationValid(address)": {
            "params": {
              "_implementation": "The address of the implementation to check."
            },
            "returns": {
              "_0": "true if the implementation has been added, false otherwise."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "removeImplementation(address)": {
            "params": {
              "_implementation": "The address of the implementation to remove."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setRegistry(address)": {
            "params": {
              "_registry": "address of the Registry"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addImplementation(address)": {
            "notice": "Adds an implementation to the list of valid implementations. An implementation will need to be added to the factory before it can be used to create vaults."
          },
          "constructor": {
            "notice": "Constructor of the contract"
          },
          "deployLPVault(address,address,bytes)": {
            "notice": "Deploys an LPVault with a given implementation."
          },
          "getLPVaultsForPrincipalToken(address)": {
            "notice": "Getter for the list of deployed LPVaults for a given principalToken."
          },
          "getRegistry()": {
            "notice": "Getter for the registry address."
          },
          "initialize(address)": {
            "notice": "Initializer of the contract"
          },
          "isImplementationValid(address)": {
            "notice": "Checks if an implementation has been previously added."
          },
          "removeImplementation(address)": {
            "notice": "Removes an implementation from the list of valid implementations."
          },
          "setRegistry(address)": {
            "notice": "Setter for the registry address, Can only be called by the owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin-erc20-basic/=lib/openzeppelin-contracts/contracts/token/ERC20/",
        ":openzeppelin-erc20-extensions/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/",
        ":openzeppelin-erc20/=lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/",
        ":openzeppelin-math/=lib/openzeppelin-contracts-upgradeable/contracts/utils/math/",
        ":openzeppelin-proxy/=lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/",
        ":openzeppelin-utils/=lib/openzeppelin-contracts-upgradeable/contracts/utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/factory/LPVaultFactory.sol": "LPVaultFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x7dce633611f5149fa8dec27ccd28b88dc590fecbebdb7785d1f6728dae1e1c4f",
        "urls": [
          "bzz-raw://e9974683c1eec209863fdec01d0c45d262302d62d7b972bc2ddcb25c33bc53fb",
          "dweb:/ipfs/QmSrcmeTka7VTz5HbjktmZdsMycARfadbCpjWTHiqwiqZC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC4626Upgradeable.sol": {
        "keccak256": "0xe3d54e1a1a10fbc86fdfaf9100ba99c9c808588fd20d0c919457b903b5cae61a",
        "urls": [
          "bzz-raw://7e2f616c3ebcf6db05b9242b870f69bf902533cc3248e352b0e1e1a04d6da8b8",
          "dweb:/ipfs/QmbNV3EejvPoLWVXTjLRyHyFnaxdQoxpFkXMbZbPvDf7eq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
        "urls": [
          "bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
          "dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f",
        "urls": [
          "bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c",
          "dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275",
        "urls": [
          "bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a",
          "dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0xea49d64cd4c5556e61f1edc117cc74f2e69f14b524386ef6a336a58794191b34",
        "urls": [
          "bzz-raw://2a3e700c25793a01bb63bb38f10b6dd4d0569280fd393d9b95a142ecfa247838",
          "dweb:/ipfs/QmX1FPaRMbMo22EudVK2xQsdcVcbNk3XKkcrzuQfQQEtMH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x4586689c55edb37fc3cac296d75d3851b3aee3f378aaa54d8a9258a384fbf541",
        "urls": [
          "bzz-raw://0f3fb638e6f0d5279f6000579a71a482a7d3655aed62439549906e3584443c40",
          "dweb:/ipfs/QmangQhgXTvji3sAgNcvdnTs7ZR3KEwmHfw5DEAybxB7cw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
        "urls": [
          "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
          "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69",
        "urls": [
          "bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3",
          "dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xba55137b57f58e805ab97462fbfc7e4b66c093a6813e29cc3f5d1569d39c27cf",
        "urls": [
          "bzz-raw://c4bb6347403c2f3b1cf02b6108cc659730a564b0c5e629762dde8f5efe1e2a84",
          "dweb:/ipfs/QmTndaLNN7gioSQHg6Zu55Ysj7wUNCq11MV7JE7zt9nsGz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x5c04e814be62473d494fb8884c56327d98237df4d77668a4ab979ace139ff204",
        "urls": [
          "bzz-raw://a17916be90701e95b591bf18797c7e64bb614fa7bd3824533dde8594922e3979",
          "dweb:/ipfs/QmSRhaSy3g2Mp7MGxT6Ttfy7jiBeXr6iMVh2WNLRCzpZAF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xb49137b771712774960cca0acf428499e2aa85f179fe03712e5c06c5a6ab6316",
        "urls": [
          "bzz-raw://ec66760482c33d84dda577e3a7a4b81000a92e37cae5c8b55339e2d83abfce03",
          "dweb:/ipfs/QmVDSFsp9dnW8P92Yrq2jAjr9piKke8gjuZX5QjtFuZRfx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x89bfffcd03b05b01af8dea42646c8118151e4fba967cde7064eb4acb697226d1",
        "urls": [
          "bzz-raw://13867b2b35c572397a233373750e30025c79ee32e23650b2bc3e384565e78d5f",
          "dweb:/ipfs/QmQscnGYq2XxbyvLgtyQNPT8ZwSbNsLxeH4pZyyae5yKA4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95",
        "urls": [
          "bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c",
          "dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d",
        "urls": [
          "bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4",
          "dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B"
        ],
        "license": "MIT"
      },
      "src/factory/LPVaultFactory.sol": {
        "keccak256": "0x6fbef27cdcf12a05f2b330f83f4e7b5c5630d2be41f148a7a3af8960485b34f6",
        "urls": [
          "bzz-raw://abad44383ad17cab99b5c7ce7a75e75e4aabd587b45b70137f0f7b6d0f027e04",
          "dweb:/ipfs/QmaG8t7eyyuhmZ6tM8hmyxrBjtohVsWAHuHVKJRox43see"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ILPVault.sol": {
        "keccak256": "0x7019c894d0217ea66d268f75ba221c5507d02ec72e577760f0d5fd08b96806ee",
        "urls": [
          "bzz-raw://3c65ee9aae5c3b199cf72d467268951571ee53ad200a981e5d80529229270bac",
          "dweb:/ipfs/QmXeDhi3NN4KgY43EmiVt6zoT65ryahH7ioc1C3mFpQYw9"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ILPVaultFactory.sol": {
        "keccak256": "0x73a09874a589a53f248ac99dd02122fa40861b1aea577bd7098b9ea27bd7060a",
        "urls": [
          "bzz-raw://991a363e35ab659e830a25b26ba6852710058be053a9eedf905ea6c552ecfb26",
          "dweb:/ipfs/QmQBz3wBw9SGovtehpf1HqP4tMvoQneczMbzLWAGxDXTNA"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IPrincipalToken.sol": {
        "keccak256": "0x868c13dbdcab4c5fff2ce561c979939955ada57421cfea5249e7b29a63db1fac",
        "urls": [
          "bzz-raw://2e6ffeed633ef89ded920a34e1d0246869aaf3665c274a692e4283bc4ca1c5b1",
          "dweb:/ipfs/QmS48tyARUZjokYg5cqLYsocrddR5NRP3vwgCwL58jBw45"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IYT.sol": {
        "keccak256": "0xd55cddc28a293c176ee72a70fde830bd8a81c1fce5886b3712a7995d5de52773",
        "urls": [
          "bzz-raw://1c034d6d4398c75b7eefb82079a2f5bde949ea4a0d772d8cc678f44ef351d174",
          "dweb:/ipfs/QmT3QP6vx3BKDXBgn9YxSXJhtY6ghq1qLSejFmupJqN7eH"
        ],
        "license": "BUSL-1.1"
      },
      "src/tokens/PrincipalToken.sol": {
        "keccak256": "0xa5ccac40e7cf084fc546cd8b002e68705321fd59b8f827a28eac9207ebcde461",
        "urls": [
          "bzz-raw://8901eec1eca00b5467f2179bd60c55a4853ee242b95c1750b0dfee0d8deb7228",
          "dweb:/ipfs/QmRhQ3swavX1szb7ZwAVfs85nDSP2cfBkJPjMMmmi8HoQu"
        ],
        "license": "BUSL-1.1"
      },
      "src/util/lib/NamingUtil.sol": {
        "keccak256": "0x14beddc259d2dba417d22e66bf7830d3b17f377fdc34efeae94f1af27e016c4a",
        "urls": [
          "bzz-raw://f72a453c9e4f914cd8d5f0f3a4c2718b66538c1e4da0a82706de838865b3c776",
          "dweb:/ipfs/QmUtyzVZY9Tki2NkzDchMXxxUbJ4qVPErdNR6b9YxKz3mV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/factory/LPVaultFactory.sol",
    "id": 38839,
    "exportedSymbols": {
      "Address": [
        31695
      ],
      "AddressUpgradeable": [
        27808
      ],
      "BeaconProxy": [
        30996
      ],
      "ContextUpgradeable": [
        27850
      ],
      "CountersUpgradeable": [
        27924
      ],
      "ECDSAUpgradeable": [
        28460
      ],
      "EIP712Upgradeable": [
        28610
      ],
      "ERC1967Upgrade": [
        30878
      ],
      "ERC20PermitUpgradeable": [
        27207
      ],
      "ERC20Upgradeable": [
        26913
      ],
      "IBeacon": [
        31006
      ],
      "IERC1822Proxiable": [
        30523
      ],
      "IERC20MetadataUpgradeable": [
        27016
      ],
      "IERC20PermitUpgradeable": [
        27243
      ],
      "IERC20Upgradeable": [
        26991
      ],
      "IERC4626Upgradeable": [
        25921
      ],
      "ILPVault": [
        39488
      ],
      "ILPVaultFactory": [
        39554
      ],
      "IPrincipalToken": [
        39907
      ],
      "IYT": [
        40221
      ],
      "Initializable": [
        26090
      ],
      "LPVaultFactory": [
        38838
      ],
      "MathUpgradeable": [
        29475
      ],
      "NamingUtil": [
        46276
      ],
      "Ownable2StepUpgradeable": [
        25618
      ],
      "OwnableUpgradeable": [
        25750
      ],
      "PausableUpgradeable": [
        26217
      ],
      "PrincipalToken": [
        44876
      ],
      "Proxy": [
        30930
      ],
      "ReentrancyGuardUpgradeable": [
        26301
      ],
      "SafeERC20Upgradeable": [
        27524
      ],
      "StorageSlot": [
        31777
      ],
      "StringsUpgradeable": [
        28099
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4513:70",
    "nodes": [
      {
        "id": 38564,
        "nodeType": "PragmaDirective",
        "src": "38:23:70",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 38565,
        "nodeType": "ImportDirective",
        "src": "63:38:70",
        "nodes": [],
        "absolutePath": "src/tokens/PrincipalToken.sol",
        "file": "../tokens/PrincipalToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38839,
        "sourceUnit": 44877,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38566,
        "nodeType": "ImportDirective",
        "src": "103:43:70",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPVaultFactory.sol",
        "file": "../interfaces/ILPVaultFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38839,
        "sourceUnit": 39555,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38567,
        "nodeType": "ImportDirective",
        "src": "147:36:70",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPVault.sol",
        "file": "../interfaces/ILPVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38839,
        "sourceUnit": 39489,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38838,
        "nodeType": "ContractDefinition",
        "src": "211:4339:70",
        "nodes": [
          {
            "id": 38573,
            "nodeType": "VariableDeclaration",
            "src": "419:24:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "registry",
            "nameLocation": "435:8:70",
            "scope": 38838,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38572,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38577,
            "nodeType": "VariableDeclaration",
            "src": "449:55:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "implementationRegistry",
            "nameLocation": "482:22:70",
            "scope": 38838,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 38576,
              "keyType": {
                "id": 38574,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "457:7:70",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "449:24:70",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 38575,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "468:4:70",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 38582,
            "nodeType": "VariableDeclaration",
            "src": "510:62:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "lpVaultsByPrincipalToken",
            "nameLocation": "548:24:70",
            "scope": 38838,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 38581,
              "keyType": {
                "id": 38578,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "518:7:70",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "510:29:70",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 38579,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "529:7:70",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 38580,
                "nodeType": "ArrayTypeName",
                "src": "529:9:70",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 38588,
            "nodeType": "EventDefinition",
            "src": "714:102:70",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b82",
            "name": "RegistryUpdated",
            "nameLocation": "720:15:70",
            "parameters": {
              "id": 38587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38584,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldRegistry",
                  "nameLocation": "761:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38588,
                  "src": "745:27:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38586,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newRegistry",
                  "nameLocation": "798:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38588,
                  "src": "782:27:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:80:70"
            }
          },
          {
            "id": 38592,
            "nodeType": "EventDefinition",
            "src": "821:58:70",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "331cedc71f28c46d467691770675b586e8aa77a0d4fe09f257d01ef00bc15458",
            "name": "ImplementationAdded",
            "nameLocation": "827:19:70",
            "parameters": {
              "id": 38591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38590,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "863:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38592,
                  "src": "847:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:32:70"
            }
          },
          {
            "id": 38596,
            "nodeType": "EventDefinition",
            "src": "884:60:70",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "af23121e2402485071dadf421078b368d7b67e54cabcc81540563c5d6bf1a4c3",
            "name": "ImplementationRemoved",
            "nameLocation": "890:21:70",
            "parameters": {
              "id": 38595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38594,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "928:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38596,
                  "src": "912:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "911:32:70"
            }
          },
          {
            "id": 38604,
            "nodeType": "EventDefinition",
            "src": "949:141:70",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "70491df1363288147716f63c69ba69c988564086c0479ca0ee5c3896b8d5c59c",
            "name": "LPVaultDeployed",
            "nameLocation": "955:15:70",
            "parameters": {
              "id": 38603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38598,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpVault",
                  "nameLocation": "996:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38604,
                  "src": "980:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38600,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "1029:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38604,
                  "src": "1013:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38602,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "principalToken",
                  "nameLocation": "1069:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38604,
                  "src": "1053:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "970:119:70"
            }
          },
          {
            "id": 38612,
            "nodeType": "FunctionDefinition",
            "src": "1155:132:70",
            "nodes": [],
            "body": {
              "id": 38611,
              "nodeType": "Block",
              "src": "1169:118:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38608,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26071,
                      "src": "1179:20:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:22:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38610,
                  "nodeType": "ExpressionStatement",
                  "src": "1179:22:70"
                }
              ]
            },
            "documentation": {
              "id": 38605,
              "nodeType": "StructuredDocumentation",
              "src": "1096:54:70",
              "text": " @notice Constructor of the contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:2:70"
            },
            "returnParameters": {
              "id": 38607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:0:70"
            },
            "scope": 38838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38628,
            "nodeType": "FunctionDefinition",
            "src": "1352:130:70",
            "nodes": [],
            "body": {
              "id": 38627,
              "nodeType": "Block",
              "src": "1412:70:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38620,
                      "name": "__Ownable2Step_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25530,
                      "src": "1422:19:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1422:21:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38622,
                  "nodeType": "ExpressionStatement",
                  "src": "1422:21:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38624,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38615,
                        "src": "1465:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38623,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38728,
                      "src": "1453:11:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:22:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38626,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:22:70"
                }
              ]
            },
            "documentation": {
              "id": 38613,
              "nodeType": "StructuredDocumentation",
              "src": "1293:54:70",
              "text": " @notice Initializer of the contract"
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38618,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38617,
                  "name": "initializer",
                  "nameLocations": [
                    "1400:11:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25992,
                  "src": "1400:11:70"
                },
                "nodeType": "ModifierInvocation",
                "src": "1400:11:70"
              }
            ],
            "name": "initialize",
            "nameLocation": "1361:10:70",
            "parameters": {
              "id": 38616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38615,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "1380:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38628,
                  "src": "1372:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1371:19:70"
            },
            "returnParameters": {
              "id": 38619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1412:0:70"
            },
            "scope": 38838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38696,
            "nodeType": "FunctionDefinition",
            "src": "1539:1047:70",
            "nodes": [],
            "body": {
              "id": 38695,
              "nodeType": "Block",
              "src": "1706:880:70",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 38644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1720:39:70",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 38642,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38631,
                          "src": "1743:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 38641,
                        "name": "isImplementationValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38822,
                        "src": "1721:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 38643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1721:38:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38649,
                  "nodeType": "IfStatement",
                  "src": "1716:105:70",
                  "trueBody": {
                    "id": 38648,
                    "nodeType": "Block",
                    "src": "1761:60:70",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38645,
                            "name": "ImplementationInvalidError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39500,
                            "src": "1782:26:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1782:28:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38647,
                        "nodeType": "RevertStatement",
                        "src": "1775:35:70"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 38660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38650,
                      "name": "lpVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38639,
                      "src": "1830:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 38656,
                              "name": "_implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38631,
                              "src": "1864:15:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 38657,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38635,
                              "src": "1881:5:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 38655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1848:15:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$30996_$",
                              "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                            },
                            "typeName": {
                              "id": 38654,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 38653,
                                "name": "BeaconProxy",
                                "nameLocations": [
                                  "1852:11:70"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 30996,
                                "src": "1852:11:70"
                              },
                              "referencedDeclaration": 30996,
                              "src": "1852:11:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeaconProxy_$30996",
                                "typeString": "contract BeaconProxy"
                              }
                            }
                          },
                          "id": 38658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1848:39:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeaconProxy_$30996",
                            "typeString": "contract BeaconProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeaconProxy_$30996",
                            "typeString": "contract BeaconProxy"
                          }
                        ],
                        "id": 38652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1840:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 38651,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1840:7:70",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 38659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1840:48:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1830:58:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38661,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:58:70"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 38663,
                              "name": "lpVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38639,
                              "src": "1911:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38662,
                            "name": "ILPVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39488,
                            "src": "1902:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ILPVault_$39488_$",
                              "typeString": "type(contract ILPVault)"
                            }
                          },
                          "id": 38664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1902:17:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILPVault_$39488",
                            "typeString": "contract ILPVault"
                          }
                        },
                        "id": 38665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1920:17:70",
                        "memberName": "getPrincipalToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39487,
                        "src": "1902:35:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 38666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1902:37:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 38667,
                      "name": "_principalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38633,
                      "src": "1943:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1902:56:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38673,
                  "nodeType": "IfStatement",
                  "src": "1898:387:70",
                  "trueBody": {
                    "id": 38672,
                    "nodeType": "Block",
                    "src": "1960:325:70",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38669,
                            "name": "PrincipalTokenMismatchError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39492,
                            "src": "2245:27:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2245:29:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38671,
                        "nodeType": "RevertStatement",
                        "src": "2238:36:70"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38675,
                        "name": "lpVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38639,
                        "src": "2315:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38676,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38631,
                        "src": "2324:15:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38677,
                        "name": "_principalToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38633,
                        "src": "2341:15:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38674,
                      "name": "LPVaultDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38604,
                      "src": "2299:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 38678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:58:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38679,
                  "nodeType": "EmitStatement",
                  "src": "2294:63:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38684,
                        "name": "lpVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38639,
                        "src": "2414:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 38680,
                          "name": "lpVaultsByPrincipalToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38582,
                          "src": "2367:24:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 38682,
                        "indexExpression": {
                          "id": 38681,
                          "name": "_principalToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38633,
                          "src": "2392:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2367:41:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 38683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2409:4:70",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2367:46:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 38685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:55:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38686,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:55:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 38691,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25673,
                          "src": "2571:5:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 38692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2571:7:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 38688,
                            "name": "lpVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38639,
                            "src": "2544:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38687,
                          "name": "Ownable2StepUpgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25618,
                          "src": "2520:23:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Ownable2StepUpgradeable_$25618_$",
                            "typeString": "type(contract Ownable2StepUpgradeable)"
                          }
                        },
                        "id": 38689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2520:32:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable2StepUpgradeable_$25618",
                          "typeString": "contract Ownable2StepUpgradeable"
                        }
                      },
                      "id": 38690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2553:17:70",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25573,
                      "src": "2520:50:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 38693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2520:59:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38694,
                  "nodeType": "ExpressionStatement",
                  "src": "2520:59:70"
                }
              ]
            },
            "baseFunctions": [
              39512
            ],
            "documentation": {
              "id": 38629,
              "nodeType": "StructuredDocumentation",
              "src": "1488:46:70",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "4dceb166",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployLPVault",
            "nameLocation": "1548:13:70",
            "overrides": {
              "id": 38637,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1671:8:70"
            },
            "parameters": {
              "id": 38636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38631,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "1579:15:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38696,
                  "src": "1571:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38633,
                  "mutability": "mutable",
                  "name": "_principalToken",
                  "nameLocation": "1612:15:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38696,
                  "src": "1604:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38635,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1650:5:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38696,
                  "src": "1637:18:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38634,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1561:100:70"
            },
            "returnParameters": {
              "id": 38640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38639,
                  "mutability": "mutable",
                  "name": "lpVault",
                  "nameLocation": "1697:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38696,
                  "src": "1689:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1688:17:70"
            },
            "scope": 38838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38728,
            "nodeType": "FunctionDefinition",
            "src": "2643:265:70",
            "nodes": [],
            "body": {
              "id": 38727,
              "nodeType": "Block",
              "src": "2699:209:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38703,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "2709:11:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 38704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2709:13:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38705,
                  "nodeType": "ExpressionStatement",
                  "src": "2709:13:70"
                },
                {
                  "condition": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38706,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38699,
                          "src": "2737:9:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2758:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2750:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38707,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2750:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2750:10:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2737:23:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 38712,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2736:25:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38717,
                  "nodeType": "IfStatement",
                  "src": "2732:89:70",
                  "trueBody": {
                    "id": 38716,
                    "nodeType": "Block",
                    "src": "2763:58:70",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38713,
                            "name": "RegistryZeroAddressError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39494,
                            "src": "2784:24:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2784:26:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38715,
                        "nodeType": "RevertStatement",
                        "src": "2777:33:70"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38719,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38573,
                        "src": "2851:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38720,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38699,
                        "src": "2861:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38718,
                      "name": "RegistryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38588,
                      "src": "2835:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 38721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:36:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38722,
                  "nodeType": "EmitStatement",
                  "src": "2830:41:70"
                },
                {
                  "expression": {
                    "id": 38725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38723,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38573,
                      "src": "2881:8:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38724,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38699,
                      "src": "2892:9:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2881:20:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38726,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:20:70"
                }
              ]
            },
            "baseFunctions": [
              39518
            ],
            "documentation": {
              "id": 38697,
              "nodeType": "StructuredDocumentation",
              "src": "2592:46:70",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "a91ee0dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRegistry",
            "nameLocation": "2652:11:70",
            "overrides": {
              "id": 38701,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2690:8:70"
            },
            "parameters": {
              "id": 38700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38699,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "2672:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38728,
                  "src": "2664:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2663:19:70"
            },
            "returnParameters": {
              "id": 38702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2699:0:70"
            },
            "scope": 38838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38769,
            "nodeType": "FunctionDefinition",
            "src": "2965:430:70",
            "nodes": [],
            "body": {
              "id": 38768,
              "nodeType": "Block",
              "src": "3033:362:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38735,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "3043:11:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 38736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:13:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38737,
                  "nodeType": "ExpressionStatement",
                  "src": "3043:13:70"
                },
                {
                  "condition": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38738,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38731,
                          "src": "3071:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3098:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3090:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38739,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3090:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3090:10:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3071:29:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 38744,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3070:31:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 38750,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38731,
                          "src": "3199:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 38749,
                        "name": "isImplementationValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38822,
                        "src": "3177:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 38751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3177:38:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 38756,
                    "nodeType": "IfStatement",
                    "src": "3173:109:70",
                    "trueBody": {
                      "id": 38755,
                      "nodeType": "Block",
                      "src": "3217:65:70",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 38752,
                              "name": "ImplementationAlreadyAddedError",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39498,
                              "src": "3238:31:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 38753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3238:33:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 38754,
                          "nodeType": "RevertStatement",
                          "src": "3231:40:70"
                        }
                      ]
                    }
                  },
                  "id": 38757,
                  "nodeType": "IfStatement",
                  "src": "3066:216:70",
                  "trueBody": {
                    "id": 38748,
                    "nodeType": "Block",
                    "src": "3103:64:70",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38745,
                            "name": "ImplementationZeroAddressError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39496,
                            "src": "3124:30:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3124:32:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38747,
                        "nodeType": "RevertStatement",
                        "src": "3117:39:70"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38759,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38731,
                        "src": "3316:15:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38758,
                      "name": "ImplementationAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38592,
                      "src": "3296:19:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:36:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38761,
                  "nodeType": "EmitStatement",
                  "src": "3291:41:70"
                },
                {
                  "expression": {
                    "id": 38766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 38762,
                        "name": "implementationRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38577,
                        "src": "3342:22:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 38764,
                      "indexExpression": {
                        "id": 38763,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38731,
                        "src": "3365:15:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3342:39:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 38765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3384:4:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3342:46:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38767,
                  "nodeType": "ExpressionStatement",
                  "src": "3342:46:70"
                }
              ]
            },
            "baseFunctions": [
              39530
            ],
            "documentation": {
              "id": 38729,
              "nodeType": "StructuredDocumentation",
              "src": "2914:46:70",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "c6e2a400",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addImplementation",
            "nameLocation": "2974:17:70",
            "overrides": {
              "id": 38733,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3024:8:70"
            },
            "parameters": {
              "id": 38732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38731,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "3000:15:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38769,
                  "src": "2992:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2992:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2991:25:70"
            },
            "returnParameters": {
              "id": 38734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:0:70"
            },
            "scope": 38838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38798,
            "nodeType": "FunctionDefinition",
            "src": "3452:324:70",
            "nodes": [],
            "body": {
              "id": 38797,
              "nodeType": "Block",
              "src": "3523:253:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38776,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "3533:11:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 38777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3533:13:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38778,
                  "nodeType": "ExpressionStatement",
                  "src": "3533:13:70"
                },
                {
                  "condition": {
                    "id": 38782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3560:39:70",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 38780,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38772,
                          "src": "3583:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 38779,
                        "name": "isImplementationValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38822,
                        "src": "3561:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 38781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3561:38:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38787,
                  "nodeType": "IfStatement",
                  "src": "3556:105:70",
                  "trueBody": {
                    "id": 38786,
                    "nodeType": "Block",
                    "src": "3601:60:70",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38783,
                            "name": "ImplementationInvalidError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39500,
                            "src": "3622:26:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3622:28:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38785,
                        "nodeType": "RevertStatement",
                        "src": "3615:35:70"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38789,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38772,
                        "src": "3697:15:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38788,
                      "name": "ImplementationRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38596,
                      "src": "3675:21:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:38:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38791,
                  "nodeType": "EmitStatement",
                  "src": "3670:43:70"
                },
                {
                  "expression": {
                    "id": 38795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3723:46:70",
                    "subExpression": {
                      "baseExpression": {
                        "id": 38792,
                        "name": "implementationRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38577,
                        "src": "3730:22:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 38794,
                      "indexExpression": {
                        "id": 38793,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38772,
                        "src": "3753:15:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3730:39:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38796,
                  "nodeType": "ExpressionStatement",
                  "src": "3723:46:70"
                }
              ]
            },
            "baseFunctions": [
              39536
            ],
            "documentation": {
              "id": 38770,
              "nodeType": "StructuredDocumentation",
              "src": "3401:46:70",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "22175a32",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeImplementation",
            "nameLocation": "3461:20:70",
            "overrides": {
              "id": 38774,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3514:8:70"
            },
            "parameters": {
              "id": 38773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38772,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "3490:15:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38798,
                  "src": "3482:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3481:25:70"
            },
            "returnParameters": {
              "id": 38775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3523:0:70"
            },
            "scope": 38838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38808,
            "nodeType": "FunctionDefinition",
            "src": "3977:96:70",
            "nodes": [],
            "body": {
              "id": 38807,
              "nodeType": "Block",
              "src": "4041:32:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38805,
                    "name": "registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38573,
                    "src": "4058:8:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 38804,
                  "id": 38806,
                  "nodeType": "Return",
                  "src": "4051:15:70"
                }
              ]
            },
            "baseFunctions": [
              39524
            ],
            "documentation": {
              "id": 38799,
              "nodeType": "StructuredDocumentation",
              "src": "3926:46:70",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "5ab1bd53",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistry",
            "nameLocation": "3986:11:70",
            "overrides": {
              "id": 38801,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4014:8:70"
            },
            "parameters": {
              "id": 38800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3997:2:70"
            },
            "returnParameters": {
              "id": 38804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38808,
                  "src": "4032:7:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4031:9:70"
            },
            "scope": 38838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38822,
            "nodeType": "FunctionDefinition",
            "src": "4130:169:70",
            "nodes": [],
            "body": {
              "id": 38821,
              "nodeType": "Block",
              "src": "4236:63:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 38817,
                      "name": "implementationRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38577,
                      "src": "4253:22:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 38819,
                    "indexExpression": {
                      "id": 38818,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38811,
                      "src": "4276:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4253:39:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 38816,
                  "id": 38820,
                  "nodeType": "Return",
                  "src": "4246:46:70"
                }
              ]
            },
            "baseFunctions": [
              39544
            ],
            "documentation": {
              "id": 38809,
              "nodeType": "StructuredDocumentation",
              "src": "4079:46:70",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "946dffde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isImplementationValid",
            "nameLocation": "4139:21:70",
            "overrides": {
              "id": 38813,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4212:8:70"
            },
            "parameters": {
              "id": 38812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38811,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "4178:15:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38822,
                  "src": "4170:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4170:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4160:39:70"
            },
            "returnParameters": {
              "id": 38816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38815,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38822,
                  "src": "4230:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38814,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4230:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4229:6:70"
            },
            "scope": 38838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38837,
            "nodeType": "FunctionDefinition",
            "src": "4356:192:70",
            "nodes": [],
            "body": {
              "id": 38836,
              "nodeType": "Block",
              "src": "4483:65:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 38832,
                      "name": "lpVaultsByPrincipalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38582,
                      "src": "4500:24:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 38834,
                    "indexExpression": {
                      "id": 38833,
                      "name": "_principalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38825,
                      "src": "4525:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4500:41:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 38831,
                  "id": 38835,
                  "nodeType": "Return",
                  "src": "4493:48:70"
                }
              ]
            },
            "baseFunctions": [
              39553
            ],
            "documentation": {
              "id": 38823,
              "nodeType": "StructuredDocumentation",
              "src": "4305:46:70",
              "text": " @inheritdoc ILPVaultFactory"
            },
            "functionSelector": "a99616a5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLPVaultsForPrincipalToken",
            "nameLocation": "4365:28:70",
            "overrides": {
              "id": 38827,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4447:8:70"
            },
            "parameters": {
              "id": 38826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38825,
                  "mutability": "mutable",
                  "name": "_principalToken",
                  "nameLocation": "4411:15:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 38837,
                  "src": "4403:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4403:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4393:39:70"
            },
            "returnParameters": {
              "id": 38831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38837,
                  "src": "4465:16:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38828,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4465:7:70",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 38829,
                    "nodeType": "ArrayTypeName",
                    "src": "4465:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4464:18:70"
            },
            "scope": 38838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38568,
              "name": "ILPVaultFactory",
              "nameLocations": [
                "238:15:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39554,
              "src": "238:15:70"
            },
            "id": 38569,
            "nodeType": "InheritanceSpecifier",
            "src": "238:15:70"
          },
          {
            "baseName": {
              "id": 38570,
              "name": "Ownable2StepUpgradeable",
              "nameLocations": [
                "255:23:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25618,
              "src": "255:23:70"
            },
            "id": 38571,
            "nodeType": "InheritanceSpecifier",
            "src": "255:23:70"
          }
        ],
        "canonicalName": "LPVaultFactory",
        "contractDependencies": [
          30996
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38838,
          25618,
          25750,
          27850,
          26090,
          39554
        ],
        "name": "LPVaultFactory",
        "nameLocation": "220:14:70",
        "scope": 38839,
        "usedErrors": [
          39492,
          39494,
          39496,
          39498,
          39500
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 70
}